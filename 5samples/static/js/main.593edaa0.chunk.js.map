{"version":3,"sources":["CustomError.js","SlicedVector.js","util.js","Vector.js","VectorUtil.js","dataset_filter.js","DirectAccessDataset.js","ChartToolbar.js","formatters.js","MetaEmbedding.js","RestDataset.js","StaticServerApi.js","scatter-gl/util.ts","scatter-gl/constants.ts","scatter-gl/render.ts","scatter-gl/scatter_plot_visualizer_sprites.ts","scatter-gl/types.ts","scatter-gl/scatter_plot_rectangle_selector.ts","scatter-gl/scatter_plot.ts","scatter-gl/styles.ts","scatter-gl/scatter_plot_visualizer_3d_labels.ts","scatter-gl/scatter_plot_visualizer_svg_labels.ts","ColorSchemeLegend.js","ChartUtil.js","LegendDrawer.js","ScatterChartThree.js","ThreeUtil.js","DotPlotTable.js","DotPlotJobResultsPanel.js","actions/index.js","reducers/index.js","CirroIcon.js","DatasetSelector.js","AppHeader.js","RegularizedGamma.js","ChiSquare.js","FisherExact.js","CompositionPlot.js","CompositionPlots.js","DeleteDatasetDialog.js","SizeLegend.js","DotPlotCanvas.js","DistributionGroup.js","ColorSchemeSelector.js","EditableColorScheme.js","EditableSizeLegend.js","kde.js","MannWhitneyUTest.js","ViolinPlotOneFeature.js","ViolinPlot.js","DistributionPlots.js","DraggableDivider.js","EditNewDatasetDialog.js","AutocompleteVirtualized.js","CategoricalLegend.js","ContinuousLegend.js","MeasureFilter.js","ColorSchemeLegendWrapper.js","CanvasOverlayHd.js","OpenseadragonSvgOverlay.js","ImageChart.js","EmbeddingChart.js","GalleryImage.js","GalleryCharts.js","LandingPage.js","HelpDialog.js","SaveDatasetViewDialog.js","SaveSetDialog.js","DotPlotJobResultOptions.js","JobResultOptions.js","NumberIcon.js","ExplorePanel.js","JobPanel.js","SideBar.js","job_config.js","JobResultsSelector.js","JobResultPanel.js","App.js","AppWrapper.js","index.js"],"names":["CustomError","Error","SlicedVector","vector","indices","this","getName","length","i","get","NATSORT","natsort","insensitive","interpolators","SERVER_CAPABILITY_RENAME_CATEGORIES","SERVER_CAPABILITY_ADD_DATASET","CATEGORY_20B","CATEGORY_20C","FEATURE_TYPE","TRACE_TYPE_IMAGE","TRACE_TYPE_SCATTER","TRACE_TYPE_META_IMAGE","INTERPOLATOR_SCALING_MIN_MAX_FEATURE","INTERPOLATOR_SCALING_MIN_MAX_CATEGORY","INTERPOLATOR_SCALING_NONE","getCategoryValue","renamedCategories","category","renamedCategoryValue","newValue","REACT_MD_OVERRIDES","h1","component","Typography","props","gutterBottom","variant","h2","h3","h4","paragraph","h5","h6","p","a","Link","target","li","withStyles","theme","listItem","marginTop","spacing","classes","className","scaleConstantRange","value","scale","x","invert","domain","range","_","arguments","copy","copyToClipboard","text","container","document","activeElement","fakeElem","createElement","isRTL","documentElement","getAttribute","style","fontSize","border","padding","margin","position","setAttribute","yPosition","window","pageYOffset","scrollTop","top","appendChild","select","setSelectionRange","execCommand","addEventListener","fakeHandlerCallback","event","blur","getSelection","removeAllRanges","removeChild","removeEventListener","stripTrailingZeros","s","index","lastIndexOf","ending","substring","allZeros","n","getColorsRgba","trace","rgbScale","scaleLinear","colorScale","npoints","colors","Float32Array","rescaleRgb","c","r","g","b","continuous","ncolors","colorBins","binScale","push","color","dst","values","bin","Math","ceil","categories","category2color","Map","forEach","set","updateTraceColors","traceInfo","type","colorMapper","rgb","formatHex","svgNode","source","galleryNode","gallerySource","categoryToStats","name","stats","query","replaceAll","querySelectorAll","node","undefined","fill","dataset","rankIndexArray","rank","Uint32Array","j","indexSort","array","ascending","pairs","ranks","sort","indexSortPairs","resolveTie","tiesTrace","tiesStrategy","f","round","data","randomSeq","start","shuffle","fdr","nominalPValues","size","pValueIndices","pIndices","highIndex","lowIndex","min","isPointInside","point","vs","y","inside","xi","yi","xj","yj","arrayToSvgPath","lassoPathArray","simplify","svgPath","fixInterpolatorName","startsWith","getInterpolator","scaleChromatic","createColorScale","colorScaleDef","scaleSequential","clamp","unknown","reversed","interpolator","t","addFeatureSetsToX","featureSets","X","uniqueX","Set","featureSet","features","feature","has","add","getFeatureSets","markers","filteredFeatureSets","markerIdToMarker","m","id","featureSetId","isString","Vector","Symbol","iterator","next","done","getVarNameType","key","indexOf","key_type","getStats","dimensionVectors","measureVectors","results","v","valueToCount","count","keys","Array","from","counts","map","valueCounts","getVectors","cachedData","names","vectors","cacheValues","result","embeddings","embedding","coordinates","Object","getTypeToMeasures","measures","typeToMeasures","obs","typeMeasures","splitDataFilter","data_filter","var_keys","obs_keys","basis_list","user_filters","filters","user_filter","isObject","basis","computeDerivedStats","q","dimensions","fields","concat","summary","groupedStats","groupDimensionInfo","groupDimensions","distribution","selection","getPassingFilterIndices","filter","selectedIndices","keyToIndices","ndim","tmp","join","slice","dimensionNames","dimensionName","categoryVector","categoryStats","entry","dimension","mean","percentExpressed","numExpressed","Number","NaN","max","sum","logSum","MAX_VALUE","expm1","combine","op","getIndices","createFilterFunction","applyFunction","d","passingIndices","combine_filters","filterObject","filterField","filterValue","keep","selection_keep","path","coords","xKeep","val","width","yKeep","height","z","zKeep","depth","nameType","DirectAccessDataset","url","key2data","format","schema","endsWith","baseUrl","Promise","resolve","key2bytes","headers","fetch","then","json","getByteRange","_fetchJson","_fetchJsonl","promises","_fetch","isArray","sparseValues","shape","all","dataFilter","fetchData","idVector","getVector","ids","basisKeys","item","dim","asArray","Int8Array","_this","reject","response","file","active","ChartToolbar","useState","saveImageEl","setSaveImageEl","setDragMode","mode","onDragMode","handleSaveImage","onSaveImage","dragmode","editSelection","showLabels","showAxis","onZoomIn","Tooltip","title","IconButton","edge","aria-label","onClick","onZoomOut","onHome","SvgIcon","viewBox","transform","onEditSelection","is3d","animating","toggleAnimation","onShowLabels","onShowAxis","onShowFog","showFog","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","e","onMoreOptions","onGallery","numberFormat","numberFormat2f","intFormat","numberFormat0","createCategoryToStats","categoryToIndices","selectionEmpty","nIndices","stdev","maxCount","maxValue","MetaEmbedding","context","canvas","chartSize","totalSize","devicePixelRatio","getContext","fillStyle","fillRect","xml","XMLSerializer","serializeToString","image64","btoa","img","Image","src","onload","drawImage","toBlob","blob","saveAs","Blob","updateSvg","containerElement","containerElementRef","current","innerHTML","svg","append","childNodes","children","nodeName","nodeNamesKeep","createElementNS","svgChildren","d3Zoom","zoom","scaleExtent","on","call","zoomIdentity","scaleBy","React","createRef","cursor","tooltip","fullStats","fullCategoryToStats","showFull","setTooltip","onSelected","getEmbeddingKey","clear","metaKey","ctrlKey","prevProps","prevState","snapshot","root","display","ref","PureComponent","zIndex","left","verticalAlign","whiteSpace","overflow","reshapeDistributionResult","distributionResult","RestDataset","local","getDataPromise","API","body","JSON","stringify","method","getIdToken","dataSend","jsonData","StaticServerApi","access","prepareTexture","texture","needsUpdate","minFilter","LinearFilter","generateMipmaps","flipY","createTextureFromCanvas","image","Texture","CameraType","FRAGMENT_SHADER","ShaderChunk","ScatterPlotVisualizerSprites","styles","spriteSheetParams","scene","fog","renderMaterial","points","worldSpacePointPositions","renderColors","standinTextureForPoints","zoomFactor","createRenderMaterial","util","zoomFactorSpecified","fogColor","fogNear","fogFar","isImage","sizeAttenuation","pointSize","uniforms","createUniforms","ShaderMaterial","vertexShader","fragmentShader","transparent","depthTest","depthWrite","blending","NormalBlending","sceneIs3D","log","positions","pointCount","geometry","createGeometry","Fog","Points","frustumCulled","BufferGeometry","BufferAttribute","computeVertexNormals","nearestPointZ","farthestPointZ","threshold","enabled","near","multiplier","far","Infinity","disposeGeometry","disposeSpriteSheet","remove","dispose","newPositions","createPointSprites","rc","camera","PerspectiveCamera","setFogDistances","nearestCameraSpacePointZ","farthestCameraSpacePointZ","Color","backgroundColor","isNaN","calculatePointSize","material","pointColors","scaleFactors","pointScaleFactors","newWidth","newHeight","InteractionMode","SelectionMode","RenderContext","cameraType","cameraTarget","screenWidth","screenHeight","labels","polylineColors","polylineOpacities","polylineWidths","ScatterPlotRectangleSelector","selectionCallback","lassoCallback","svgElement","rectElement","lassoElement","isMouseDown","appendToSelection","startCoordinates","lastBoundingBox","lassoPath","selectionMode","BOX","testid","insertAdjacentElement","element","pointerEvents","stroke","strokeDasharray","strokeDashArray","strokeWidth","fillOpacity","offsetX","offsetY","rect","baseVal","ORTHO_CAMERA_FRUSTUM_HALF_EXTENT","START_CAMERA_POS_3D","Vector3","START_CAMERA_TARGET_3D","START_CAMERA_POS_2D","START_CAMERA_TARGET_2D","ScatterPlot","params","premultipliedAlpha","interactive","hoverPoint","hoverCallback","clickCallback","boxCallback","cameraCallback","visualizers","interactionMode","PAN","renderer","light","orbitAnimationOnNextCameraCreation","orbitCameraControls","orbitAnimationId","selecting","mouseIsDown","isDragSequence","rectangleSelector","computeLayoutValues","Scene","WebGLRenderer","alpha","antialias","setClearColor","domElement","PointLight","selectBoundingBox","bind","selectLasso","addInteractionListeners","setDimensions","makeCamera","resize","onPointerOut","onPointerMove","onPointerDown","onPointerUp","onKeyDown","onKeyUp","cameraControls","stopOrbitAnimation","render","cameraIs3D","occ","OrbitControls","zoomSpeed","enableRotate","autoRotate","enableKeys","rotateSpeed","mouseButtons","LEFT","MOUSE","RIGHT","reset","addCameraControlsEventListeners","cameraParams","def","makeDefaultCameraDef","recreateCamera","axesVisible","add3dAxes","remove3dAxesFromScene","cameraDef","w","h","aspectRatio","at","lookAt","updateProjectionMatrix","makeOrbitControls","right","bottom","OrthographicCamera","up","orthographic","makeCamera2D","makeCamera3D","minDistance","maxDistance","update","startOrbitAnimation","SELECT","onMouseDown","ORBIT","onMouseUp","onMouseMove","shiftKey","boundingBox","offsetWidth","offsetHeight","axes","getObjectByName","AxesHelper","RangeError","currPos","currTarget","updateOrbitAnimation","requestAnimationFrame","cancelAnimationFrame","visualizer","setScene","onResize","onPointPositionsChanged","lightPos","clone","Perspective","Orthographic","cameraSpacePointExtents","worldSpacePoints","cameraPos","shortestDist","furthestDist","camToTarget","sub","camPlaneNormal","normalize","camToPoint","dist","dot","onRender","setRenderTarget","opacities","widths","isNight","canvases","oldW","oldH","newW","newH","aspect","scaleW","scaleH","newCamHalfWidth","newCamHalfHeight","dpr","setPixelRatio","setSize","pos","tgt","makeStyles","userStyles","defaultStyles","label","scaleDefault","scaleLarge","fillColorSelected","fillColorHover","strokeColorSelected","strokeColorHover","fillWidth","label3D","colorUnselected","colorNoSelection","colorSelected","colorHover","scaleSelected","scaleHover","polyline","startHue","endHue","saturation","lightness","defaultOpacity","defaultLineWidth","selectedOpacity","selectedLineWidth","deselectedOpacity","sprites","minPointSize","imageSize","_key","assign","ScatterPlotVisualizerSvgLabels","labelsActive","labelStrings","shadowColor","shadowStroke","font","widthHalf","parentElement","clientWidth","heightHalf","clientHeight","k","project","shadowLabel","createLabel","draw","renderContext","drawColorScheme","textColor","nsteps","gradient","createLinearGradient","valueToFraction","stepSize","addColorStop","strokeStyle","strokeRect","textBaseline","textAlign","fillText","ColorSchemeLegend","backingScale","clearRect","CANVAS_FONT","setTransform","redraw","SVG_FONT","saveImage","C2S","legendSize","maxWidth","measureText","getCategoricalLegendSize","translate","drawCategoricalLegend","getSerializedSvg","smoothstep","edge0","edge1","min_v","max_v","mix","drawLabels","chartOptions","darkMode","lineWidth","labelStrokeWidth","strokeText","getVisualizer","scatterPlot","setAxesColors","setColors","useRef","scatterPlotRef","lastHoverIndexRef","forceUpdate","setForceUpdate","previousChartSizeRef","getSelectedIndex","selectedIndex","abs","drawContext","obsCat","markerOpacity","unselectedMarkerOpacity","categoricalNames","scaleFactor","PI2","PI","outputPointSize","colorScaleConverter","spriteVisualizer","POINT_VISUALIZER_ID","outNorm","atan","projectionMatrix","elements","gl_PointSize","cameraSpacePos","Vector4","object","modelViewMatrix","multiplyMatrices","matrixWorldInverse","matrixWorld","pointOrder","isSelectionEmpty","positionIndex","colorIndex","isSelected","applyMatrix4","fogDepth","fogFactor","beginPath","arc","closePath","labelsPositions","getCategoryLabelsPositions","labelFontSize","getLabels","useEffect","createScatterPlot","ApplePaySession","setInteractionMode","setSelectionMode","visible","querySelector","outline","webglcontextlost","console","preventDefault","webglcontextrestored","init","unselectedPointSize","updateScatterChart","updateFromCameraDef","handleClick","renamedValue","eventName","onCamera","getCameraDef","setChartOptions","orbitIsAnimating","resetZoom","data-testid","LABELS_VISUALIZER_ID","domainDifference","rangeDifference","selectEnabled","setActiveVisualizers","obsKeys","obsArrayOfArrays","embeddingKey","xScale","yScale","zScale","xExtent","yExtent","zExtent","valueToCoords","ncategories","isSpatial","spatial","nobs","getRange","extent","xRange","yRange","zRange","maxRange","makeScaleRange","base","SCATTER_PLOT_CUBE_LENGTH","labelValues","labelPositions","mid","xmedian","ymedian","zmedian","obsCatKeys","updateZ","background","setPointColors","setPointPositions","setPointScaleFactors","labelsVisualizer","labelKey","setLabels","borderRadius","table","borderCollapse","tr","deleteTr","rotateHeader","checkbox","rotateHeaderDiv","transformOrigin","rotateHeaderSpan","textOverflow","td","minWidth","rowHeader","onRowClick","onMouseOut","toggleAll","rows","columns","isRowSelected","rowStart","columnStart","getRowId","getColor","getSize","getTooltip","sizeScale","valueScale","headerWidth","rotateHeaders","selectAllChecked","maxSize","Box","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","checked","column","TableBody","row","rowIndex","selected","hover","role","tabIndex","columnIndex","colorValue","sizeValue","data-title","diameter","colorValueScaled","marginLeft","DEFAULT_DE_INTERPOLATOR","updateJob","jobResult","options","groups","rowFilters","field","fieldLowercase","toLowerCase","ntop","ntopUI","sortedRows","byAscending","by","fullField","sortByGroup","rowSortOrder","sortAndFilterJobResult","sizeScaleReversed","minSize","ngroups","groupIndex","byField","val1","val2","aNaN","bNaN","rowFilterFunctions","nFilters","sortedFilteredRows","group","filteredIndices","sortedIndices","passesFilter","filterIndex","updateTopNJobResult","groupOrder","groupIndices","featureIndex","connect","state","searchTokens","dispatch","ownProps","onSearchTokens","payload","setSearchTokensDirectly","selectedFeatures","token","isSizeScaled","domains","tooltipFields","headerHeight","innerText","getBoundingClientRect","cos","colorField","marginBottom","output","fieldName","paddingTop","stopPropagation","splice","found","process","REACT_APP_API_URL","DEFAULT_UNSELECTED_MARKER_OPACITY","DEFAULT_INTERPOLATOR","DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR","DEFAULT_DARK_MODE","matchMedia","matches","SET_EMBEDDING_LABELS","SET_DISTRIBUTION_PLOT_INTERPOLATOR","SET_CHART_OPTIONS","SET_COMBINE_DATASET_FILTERS","SET_DATASET_FILTERS","SET_DATASET_VIEWS","SET_LEGEND_SCROLL_POSITION","SET_ACTIVE_FEATURE","SET_CHART_SIZE","SET_PRIMARY_CHART_SIZE","SET_SERVER_INFO","SET_DATASET_FILTER","ADD_DATASET","DELETE_DATASET","UPDATE_DATASET","SET_GLOBAL_FEATURE_SUMMARY","SET_SAVED_DATASET_STATE","SET_DOMAIN","UPDATE_CATEGORICAL_COLOR","SET_CATEGORICAL_NAME","UPDATE_CATEGORICAL_NAME","SET_MARKER_OPACITY","SET_UNSELECTED_MARKER_OPACITY","SET_SELECTION","SET_FEATURE_SUMMARY","SET_SEARCH_TOKENS","SET_SELECTED_EMBEDDING","SET_MESSAGE","SET_INTERPOLATOR","SET_POINT_SIZE","SET_UNSELECTED_POINT_SIZE","SET_EMAIL","SET_USER","SET_DATASET","SET_MARKERS","SET_DIALOG","OPEN_DATASET_DIALOG","EDIT_DATASET_DIALOG","IMPORT_DATASET_DIALOG","SAVE_DATASET_FILTER_DIALOG","SAVE_FEATURE_SET_DIALOG","HELP_DIALOG","DELETE_DATASET_DIALOG","SET_DATASET_CHOICES","RESTORE_VIEW","SET_DISTRIBUTION_DATA","SET_SELECTED_DISTRIBUTION_DATA","SET_DISTRIBUTION_PLOT_OPTIONS","SET_EMBEDDING_DATA","SET_LOADING","SET_TAB","SET_LOADING_APP","SET_JOB_RESULTS","SET_JOB_RESULT","includeDensity","getTraceKey","logout","getState","gapi","auth2","getAuthInstance","signOut","_setDataset","openView","_setLoading","serverInfo","api","getViewPromise","savedView","parse","dataset_id","restoreSavedView","finally","catch","err","handleError","deleteView","deleteViewPromise","datasetViews","setMessage","setDialog","submitJob","jobData","jobId","getJobStatus","find","jobResults","statusUpdated","status","fetchJobStatus","setJobResults","setTimeout","getFilterJson","email","deleteFeatureSet","setMarkers","removeDatasetFilter","filterKey","setDatasetFilter","datasetFilter","handleFilterUpdated","getDatasetFilterDependencies","operation","datasetFilterToJson","combineDatasetFilters","brushIndices","brushFilter","getDatasetFilterArray","setDistributionPlotOptions","setCombineDatasetFilters","_setCombineDatasetFilters","setPrimaryChartSize","setActiveFeature","setGlobalFeatureSummary","setSelection","setFeatureSummary","groupedSearchTokens","groupBy","prefix","setSelectedDistributionData","handleSelectionResult","handleDomainChange","_handleCategoricalNameChange","handleUpdateCategoricalName","_handleColorChange","setUser","setServerInfo","getDefaultDatasetView","embeddingNames","selectedEmbedding","embeddingPriorities","embeddingName","priorityIndex","markers_read_only","suffix","catPriorities","loadDefaultDatasetView","setSelectedEmbedding","loadDefaultDataset","datasetChoices","setDataset","colorScheme","uiValue","activeFeature","_updateCharts","distributionPlotOptions","getFeatureType","setJobResultId","_loadSavedView","location","hash","decodeURIComponent","link","initLogin","loadSavedView","isSignedIn","currentUser","getBasicProfile","getEmail","_setEmail","getUserPromise","user","listDatasets","getAuthResponse","id_token","saveDataset","readers","existingDataset","isEdit","formData","existingReaders","setsEqual","blacklist","request","upsertDatasetPromise","upload","percent","loaded","total","resp","owner","updateDataset","_addDataset","deleteDataset","deleteDatasetPromise","_deleteDataset","setEmbeddingData","_setDatasetChoices","setTab","_setLoadingApp","_setJobResultId","existingJobResult","getJobParams","getJob","findIndex","promise","toggleEmbeddingLabel","embeddingLabels","setDistributionData","setSearchTokens","updateActiveFeature","removeType","existingKeys","tokens","prior","setDatasetViews","loadDefaultView","setLoading","savedDatasetState","selectedChoice","categoryNameResults","newDataset","isDirectAccess","getJobs","jobs","schemaPromise","getSchemaPromise","categoriesRenamePromise","getCategoryNamesPromise","savedViewsPromise","getViewsPromise","var","selectionResult","featureSummary","selectedDistributionData","updateDistributionData","newDistributionData","existingDistributionData","xTokens","obsCatTokens","obsTokens","moduleTokens","dimensionKeys","distributionData","featureSortOrder","_updateDistributionData","onError","featureSetTokens","embeddingData","globalFeatureSummary","embeddingsToFetch","valuesToFetch","embeddingKeys","filterJson","embeddingImagesToFetch","attrs","getFileUrl","imagePromise","createRange","createContextualFragment","firstElementChild","div","rules","sheet","rule","selectorText","styleMap","child","toString","date","Date","distributionCategories","distributionCategoryKeys","distributionMeasuresToFetch","cachedDistributionKeys","distributionDataItem","globalFeatureSummaryMeasuresCacheMiss","globalFeatureSummaryDimensionsCacheMiss","allPromises","newEmbeddingData","getNewEmbeddingData","getNewActiveFeature","traces","featureType","modules","existingFeaturePlusEmbeddingKeys","embeddingDatum","traceType","unbinnedCoords","binnedValues","xcoords","ycoords","nbins","floor","sqrt","xscale","yscale","binMap","xcoordNew","ycoordNew","binValue","xvalues","yvalues","newIndexToOriginalIndices","createEmbeddingDensity","binnedCoords","featurePlusEmbeddingKey","featureKey","purity","isCategorical","traceUniqueValues","colorMap","schemeCategory10","schemePaired","originalValueToData","originalValue","scaleOrdinal","isPlainObject","newValues","customMin","customMax","chartData","_values","summarizationMethod","summarize","nindices","summarizedValue","summarizeDensity","getPositions","cloneNode","zscore","diff","variance","tileSource","OpenSeadragon","ImageTileSource","buildPyramid","crossOriginPolicy","message","getDatasetsPromise","choices","getDatasetStateJson","distributionPlotInterpolator","jobResultId","jsonChartOptions","defaultChartOptions","datasetFilterJson","brush","brushJson","interpolatorJson","DIST_PLOT_OPTIONS","chartType","violinScale","violinHeight","violinWidth","violinShowBoxplot","DEFAULT_DIST_PLOT_OPTIONS","DEFAULT_INTERPOLATOR_OBJ","DISTRIBUTION_PLOT_INTERPOLATOR_OBJ","DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR_OBJ","DEFAULT_PRIMARY_CHART_SIZE","innerWidth","innerHeight","DEFAULT_CHART_OPTIONS","showGalleryLabels","combineReducers","action","datasetFilters","dialog","customZMin","customZMax","legendScrollPosition","loading","loadingApp","progress","newResults","categoryName","readonly","primaryChartSize","ontology","cellTypes","item1","item2","datasetSelectorColumns","tab","CirroIcon","paddingBottom","handleDialog","searchText","setSearchText","datasetDetailsEl","setDatasetDetailsEl","selectedDataset","setSelectedDataset","rowsPerPage","page","setPage","order","setOrder","orderBy","setOrderBy","selectedId","filteredChoices","searchTextLower","trim","allColumns","visibleColumns","searchColumns","sepIndex","replace","ncolumns","choice","reverse","datasetDetailsOpen","Fragment","Popover","anchorOrigin","vertical","horizontal","description","overrides","Button","startIcon","Dialog","fullWidth","DialogContent","sx","TextField","placeholder","onChange","helperText","InputProps","endAdornment","InputAdornment","FormControl","float","Select","labelId","multiple","input","OutlinedInput","renderValue","ListItemText","primary","Divider","TableContainer","align","numeric","disablePadding","sortDirection","TableSortLabel","direction","property","visuallyHidden","TablePagination","rowsPerPageOptions","onPageChange","newPage","AppHeader","handleTabChange","handleTab","handleEmbeddingsChange","precomputed","binValues","numberOfBins","_nbins","numberOfBinsUI","agg","binSummary","handleEmbeddings","handleUserMenuClose","setState","userMenuOpen","handleMoreMenuClose","moreMenuOpen","handleHelp","handleUserMenuOpen","userMenuAnchorEl","handleMoreMenuOpen","moreMenuAnchorEl","getLinkJson","handleDataset","handleSavedDatasetState","copyLink","linkText","protocol","host","pathname","encodeURIComponent","onDarkMode","handleChartOptions","handleLogout","handleImportDataset","handleSettings","handleDelete","handleShowDatasetDetails","handleCloseDatasetDetails","hasSelection","showAddDataset","importer","capabilities","showEditDataset","showDeleteDataset","showMoreMenu","isSignedOut","clientId","AppBar","drawerWidth","ml","Toolbar","paddingLeft","species","href","underline","aria-owns","Tabs","indicatorColor","Tab","disabled","brand","wrapper","handleLogin","signIn","INV_GAMMA1P_M1_C1","INV_GAMMA1P_M1_C2","INV_GAMMA1P_M1_C3","INV_GAMMA1P_M1_C4","INV_GAMMA1P_M1_C5","INV_GAMMA1P_M1_C6","INV_GAMMA1P_M1_C7","INV_GAMMA1P_M1_C8","INV_GAMMA1P_M1_C9","INV_GAMMA1P_M1_C10","INV_GAMMA1P_M1_C11","INV_GAMMA1P_M1_C12","INV_GAMMA1P_M1_C13","HALF_LOG_2_PI","LANCZOS","regularizedGammaQValue","epsilon","maxIterations","regularizedGammaPValue","getA","getB","exp","logGamma","continuedFraction","logGamma1p","log1p","invGamma1pm1","prod","lanczosApproximation","an","POSITIVE_INFINITY","isFinite","hN","hPrev","updateIfCloseToZero","dPrev","cPrev","dN","cN","deltaN","chiSquare","rowSums","nrows","ncols","columnSums","expectedTable","expected","statistic","pow","degreesOfFreedom","df","phyper","logFactorial","logFactorials","rr","canvasRef","seriesToValueToCounts","series","subtitle","uniqueValues","y0","seriesIndex","seriesName","valueToCounts","uniqueValue","yBottom","xPix","barHeight","yTop","save","rotate","restore","tick","pix","moveTo","lineTo","maxSeriesWidth","countsTable","pValue","stat","_a","_b","_c","_d","_p","fisherTest","flex","uniqueValueIndex","marginRight","countFormatted","createSorter","categoryOrder","orderedCategories","categoryToIndex","nameMap","getComposition","nseries","categoryValues","nObs","renamedDimensions","categoryIndex","dimensionIndex","seriesToSeriesArray","seriesArray","seriesKey","newCategory","sorters","uniqueValuesSet","categoryColorScale","getColorScale","composition","selectedComposition","DeleteDatasetDialog","handleClose","handleCancel","aria-labelledby","DialogTitle","DialogActions","drawSizeLegend","steps","legendHeight","valueToX","radiusDomain","valueToRadius","radius","SizeLegend","CHIP_SIZE","getNameWidth","array2d","endCoordinates","cumsum","DotPlotCanvas","diffExp","pseudocount","deResults","valueIndex","restValues","restVector","selectedStats","restStats","mannWhitney","foldChange","log2","percentExpressed2","correctedPValues","de","computeDiffExp","exportFile","data2d","nfeatures","handleSaveImageMenu","handleSaveImageMenuClose","colorScaleHeight","drawCircles","divRef","maxRadius","xy","clientX","clientLeft","clientY","clientTop","col","tip","categoryColorScales","ypix","xpix","frac","chipStartCoord","maxFeatureWidth","nameWidth","stripInterpolate","ColorSchemeSelector","onInterpolatorChange","handleInterpolator","interpolatorName","InputLabel","shrink","Input","divider","getScale","flexWrap","formControl","EditableColorScheme","onMinChange","onMinUIChange","updateMin","parseFloat","onMaxChange","onMaxUIChange","updateMax","onReversedChange","onInterpolator","debounce","colorMin","colorMax","InputLabelProps","FormControlLabel","control","Switch","EditableSizeLegend","onMinSizeChange","updateMinSize","onOptions","onMaxSizeChange","updateMaxSize","showReversed","gaussian","createKDE","bandwidth","kernel","len","factor","SQRT2","calculateAsymptoticPValue","Umin","n1","n2","n1n2prod","VarU","standardDeviation","dev","ret","erfc","standardNormalCumulativeProbability","Umax","out","rankdata","sumRankX","U1","U2","mannWhitneyU","drawAxis","tickFormat","ticks","textWidth","Axis","FeatureCategory","drawCategory","onTooltip","drawCategories","lineCap","lineJoin","density","boxplotWidth","boxplotStats","q3","q1","median","upperAdjacentValue","lowerAdjacentValue","centerPix","getViolinPlotScales","xmin","xmax","ymax","nice","drawFeature","ViolinPlotOneFeature","borderColor","ViolinPlot","totalHeight","dummyContext","updateNames","reshapeData","categoryToItems","sortBy","category2mean","category2percentExpressed","categoryItems","items","getMeanAndPercentRange","meanRange","DistributionGroup","onChartTypeChange","onDistributionPlotOptions","onViolinScaleChange","onViolinShowBoxplot","onSortOrderChanged","selectedData","meanAndPercentRange","percentRange","selectedMeanAndPercentRange","selectedData2d","allData","quantileSorted","q50","upperOutlier","lowerOutlier","x0","lo","hi","iqr","nrd0","gridsize","step","maxKDE","kde","sortChoices","onColorScalingChange","FormHelperText","showDotPlotOption","dataType","existingInterpolator","onDistributionPlotOptionsDataType","typeToInfo","dimension2data","dimension2selecteddata","partial","handlePrimaryChartSize","dragging","primaryChartHeight","delta","alignItems","justifyContent","favoriteSpecies","otherSpecies","EditNewDatasetDialog","initDragDrop","fileDropRef","showDragIndicator","filesArray","dataTransfer","files","handleSave","uploadTabValue","split","getUniqueArray","onWritePreviewTabChanged","writePreviewTabValue","onUploadTabChanged","onEmailChanged","onUrlChanged","onFilesChanged","fileInputRef","onSpeciesChange","onNameChanged","onDescriptionChanged","onTitleChanged","dragIndicator","show","myIndex","canUpload","isNew","saveEnabled","isAuthEnabled","TransitionProps","onEntered","CircularProgress","autoComplete","required","icon","hidden","click","inputProps","maxLength","maxRows","multiline","renderRow","dataSet","inlineStyle","hasOwnProperty","ListSubheader","disableGutters","selectGroup","textMatch","inputValue","inputLength","getTextMatch","noWrap","OuterElementContext","createContext","OuterElementType","forwardRef","outerProps","useContext","ListboxComponent","other","itemData","useTheme","smUp","useMediaQuery","breakpoints","noSsr","itemCount","itemSize","getChildSize","gridRef","resetAfterIndex","useResetCache","Provider","reduce","outerElementType","innerElementType","overscanCount","StyledPopper","styled","Popper","autocompleteClasses","listbox","boxSizing","AutocompleteVirtualized","enterTokens","textToOption","option","textLowerCase","delete","onDragEnd","onChipClick","getOptionSelected","getChipText","getChipIcon","getChipTitle","getOptionLabel","SortableItem","sortableElement","sortIndex","Chip","onDelete","handleTagDelete","SortableList","sortableContainer","Autocomplete","testId","disableListWrap","freeSolo","blurOnSelect","openOnFocus","autoHighlight","filterOptions","exactMatches","startsWithMatches","containsMatches","isOptionEqualToValue","filterSelectedOptions","ChipProps","PopperComponent","renderTags","getTagProps","renderInput","renderGroup","renderOption","onPaste","clipboardData","getData","onDrop","reader","FileReader","onerror","alert","readAsText","onDragOver","onDragLeave","distance","onSortEnd","newIndex","oldIndex","axis","CategoricalLegend","listRef","contextMenu","setContextMenu","newName","setNewName","positiveMarkers","setPositiveMarkers","negativeMarkers","setNegativeMarkers","menu","setMenu","setColor","originalCategory","setOriginalCategory","handleScrollPosition","handleDialogClose","onContextmenu","mouseX","mouseY","cat","scrollTo","scrollOffset","categoricalFilter","selectionSummary","selectedDimensionToCount","globalDimensionSummary","addFeatures","handleSearchTokens","onScroll","scrollDirection","renamedCategory","ListItem","dense","onContextMenu","button","primaryTypographyProps","secondary","handleColorChange","textFieldSx","handleNameChange","anchorReference","anchorPosition","ContinuousLegend","nObsSelected","globalSummary","summaryNames","showPercentExpressed","showMin","summaryName","getTable","MeasureFilter","handleValueUpdate","getFilter","handleUpdate","handleOperationChanged","handleValueChange","ColorSchemeLegendWrapper","onMinUpdate","handleDomain","onMaxUpdate","isCount","CanvasOverlayHd","viewer","_viewer","_containerWidth","_containerHeight","_canvas","onRedraw","clearBeforeRedraw","addHandler","_updateCanvas","backingScaleUpdated","viewportZoom","viewport","getZoom","world","getItemCount","getItemAt","viewportToImageZoom","vp","imageToViewportCoordinates","pixelFromPoint","webPoint","viewportPos","pointFromPixel","tiledImage","viewportPosRect","Rect","tileSourcePos","_viewportToTiledImageRectangle","getTopLeft","svgNS","OpenseadragonSvgOverlay","self","_svg","_node","evt","Point","rotation","getRotation","getSpotRadius","spot_diameter","drawSpots","spotRadius","setLineDash","globalAlpha","ImageChart","levels","context2D","zoomBy","zoomPerClick","applyConstraints","goHome","uniqueId","x2","y2","px","py","findPointIndex","categoryObject","_drawOverlay","opts","destroy","ready","addOnceHandler","gestureSettingsMouse","dblClickToZoom","clickToZoom","autoResize","showFullPageControl","collectionMode","showNavigationControl","tileSources","canvasOverlay","innerTracker","moveHandler","viewportPoint","imagePoint","viewportToImageCoordinates","preventDefaultAction","findPointsInPolygon","findPointsInRectangle","removeAttribute","svgOverlay","elem","createViewer","getActiveEmbeddingLabels","memoize","EmbeddingChart","handleToggleLegend","showLegend","primaryTrace","handleEmbeddingData","resizeListener","windowHeight","onCategoricalNameChange","onChartOptions","onColorChange","onDimensionFilterUpdated","onDomain","onMeasureFilterUpdated","onSelect","activeEmbeddingLabels","displayName","bgcolor","onInitialized","lastIndex","currentIndex","setCategoryNamePromise","clearFilters","priorFilters","isToggleRegion","priorIndex","updateActiveFeatures","getImageUrl","drawEmbeddingImage","toDataURL","GalleryImage","setUrl","overlayUrl","setOverlayUrl","elementRef","getScaleFactor","labelCanvas","alt","createContainer","GalleryCharts","onChartSelected","handleActiveFeature","galleryTraces","oldTrace","newTrace","Paper","elevation","rel","footer","REACT_APP_VERSION","HelpDialog","SaveDatasetViewDialog","onNotesChanged","notes","ds_id","upsertViewPromise","SaveSetDialog","onCategoryChanged","requestBody","upsertFeatureSet","DotPlotJobResultOptions","updateTopNJobResultDebounced","handleJobResults","sortAndFilterDebounced","handleJobResultDebounced","onSizeReversedChange","newJobResult","onSortChange","onColorChanged","onSizeChanged","onNtopChange","onByChanged","onByAscendingChange","onOperationChanged","onValueChange","Slider","valueLabelDisplay","formControlInline","jobType","NumberIcon","getAnnotationOptions","getEmbeddingOptions","getModulesOptions","textField","getFeatureSetOptions","detailsView","toolbar","savedDatasetFilter","handleCombineDatasetFilters","handleDownloadSelectedIds","getSelectedIdsPromise","handleEmbeddingLabel","handleDeleteView","handleDeleteFeatureSet","selectedPopupMenuItem","setSelectedPopupMenuItem","popupAnchorEl","setPopupAnchorEl","selectedItem","setSelectedItem","onFeatureSetClick","closest","newFeatureSet","onModulesClick","onMenuClose","onCloseDialog","onFilterChipClicked","onFeatureClick","datasetFilterKeys","isBrushing","getDatasetFilterNames","obsCatSearchTokens","xSearchTokens","featureOptions","moduleOptions","annotationOptions","featureSetOptions","embeddingOptions","selectedEmbeddings","readOnly","textTransform","letterSpacing","onObservationsIconClick","maxHeight","inset","Grid","alignContent","handleSubmitJob","compareActions","compareGroups","setCompareGroups","group1","setGroup1","group1Count","setGroup1Count","group2","setGroup2","group2Count","setGroup2Count","jobName","setJobName","jobParams","setJobParams","compareMenu","setCompareMenu","compareCategories","setCompareCategories","obsCatOptions","onSubmitJobCancel","onSetGroup","groupNumber","aria-describedby","autoFocus","ButtonGroup","endIcon","version","filter2","onSubmitJob","pointSizeOptions","gallerySizeOptions","SideBar","onLabelFontSizeUpdate","onLabelFontSize","onLabelStrokeWidth","onLabelStrokeWidthUpdate","minColor","maxColor","onMarkerOpacityChange","opacity","updateMarkerOpacity","handleMarkerOpacity","onUnselectedMarkerOpacityChange","unselectedOpacity","updateUnselectedMarkerOpacity","handleUnselectedMarkerOpacity","handleOpenView","viewDetails","selectedViewEl","selectedView","copyView","onPointSizeChange","handlePointSize","onUnselectedPointSizeChange","handleUnselectedPointSize","onChartSizeChange","handleChartSize","onShowGalleryLabelsChange","handleCloseViewDetails","onViewSaved","onDatasetViewSaved","last_updated","toDateString","htmlFor","List","data-key","ListItemSecondaryAction","flexDirection","COMPARE_ACTIONS","handleDeleteJob","deleteJob","deleteJobResult","handleJobResult","showDialog","setShowDialog","browseJob","setBrowseJob","onCloseJobs","onDeleteJobCancel","showJobStatus","isShowJobStatus","jobTypeToName","isShowingJob","isPrecomputed","isComplete","isJobOwner","job","onDeleteJob","DialogContentText","App","handleMessageClose","galleryRef","offsetTop","tooltipElementRef","palette","main","footerBackground","paper","Drawer","anchor","flexShrink","scomponent","flexGrow","LinearProgress","Snackbar","ContentProps","autoHideDuration","withTheme","darkTheme","createTheme","lightTheme","StyledEngineProvider","injectFirst","ThemeProvider","useMixPanel","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","mixpanel","track","identify","startTime","getTime","loadingAppProgress","elapsed","getElementById"],"mappings":"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","file":"static/js/main.593edaa0.chunk.js","sourcesContent":["class CustomError extends Error {\n\n}\n\nexport default CustomError;\n","export class SlicedVector {\n    constructor(vector, indices) {\n        this.vector = vector;\n        this.indices = indices;\n    }\n\n    getName() {\n        return this.vector.getName();\n    }\n\n    size() {\n        return this.indices.length;\n    }\n\n    get(i) {\n        return this.vector.get(this.indices[i]);\n    }\n}\n","import Link from '@mui/material/Link';\nimport withStyles from '@mui/styles/withStyles';\nimport Typography from '@mui/material/Typography';\nimport {extent, shuffle} from 'd3-array';\nimport {color} from 'd3-color';\nimport {scaleLinear, scaleSequential} from 'd3-scale';\nimport * as scaleChromatic from 'd3-scale-chromatic';\nimport natsort from 'natsort';\nimport React from 'react';\nimport simplify from 'simplify-js';\nimport {isString} from \"lodash\";\n\nexport const NATSORT = natsort({insensitive: true});\nexport const interpolators = {};\ninterpolators['Diverging'] = [\n    'interpolateBrBG',\n    'interpolatePRGn',\n    'interpolatePiYG',\n    'interpolatePuOr',\n    'interpolateRdBu',\n    'interpolateRdGy',\n    'interpolateRdYlBu',\n    'interpolateRdYlGn',\n    'interpolateSpectral'];\n\ninterpolators['Sequential (Single Hue)'] = [\n    'interpolateBlues',\n    'interpolateGreens',\n    'interpolateGreys',\n    'interpolateOranges',\n    'interpolatePurples',\n    'interpolateReds'];\n\ninterpolators['Sequential (Multi-Hue)'] = [\n    'interpolateViridis',\n    'interpolateInferno',\n    'interpolateMagma',\n    'interpolatePlasma',\n    'interpolateWarm',\n    'interpolateCool',\n    'interpolateCubehelixDefault',\n    'interpolateBuGn',\n    'interpolateBuPu',\n    'interpolateGnBu',\n    'interpolateOrRd',\n    'interpolatePuBuGn',\n    'interpolatePuBu',\n    'interpolatePuRd',\n    'interpolateRdPu',\n    'interpolateYlGnBu',\n    'interpolateYlGn',\n    'interpolateYlOrBr',\n    'interpolateYlOrRd'];\n\ninterpolators['Cyclical'] = ['interpolateRainbow', 'interpolateSinebow'];\n\n\n// const TWENTY_COLORS = [\n//     '#1f77b4', '#aec7e8', '#ff7f0e',\n//     '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd',\n//     '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f',\n//     '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\n\nexport const SERVER_CAPABILITY_RENAME_CATEGORIES = 'SERVER_CAPABILITY_RENAME_CATEGORIES';\nexport const SERVER_CAPABILITY_JOBS = 'SERVER_CAPABILITY_JOBS';\nexport const SERVER_CAPABILITY_FEATURE_SETS = 'SERVER_CAPABILITY_FEATURE_SETS';\nexport const SERVER_CAPABILITY_LINKS = 'SERVER_CAPABILITY_LINKS';\nexport const SERVER_CAPABILITY_EDIT_DATASET = 'SERVER_CAPABILITY_EDIT_DATASET';\nexport const SERVER_CAPABILITY_ADD_DATASET = 'SERVER_CAPABILITY_ADD_DATASET';\nexport const SERVER_CAPABILITY_DELETE_DATASET = 'SERVER_CAPABILITY_DELETE_DATASET';\n\nexport const CATEGORY_20B = [\n    '#393b79', '#5254a3', '#6b6ecf',\n    '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31',\n    '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b',\n    '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\nexport const CATEGORY_20C = [\n    '#3182bd', '#6baed6', '#9ecae1',\n    '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354',\n    '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n    '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n\nexport const FEATURE_TYPE = {\n    OBS: 'obs',\n    OBS_CAT: 'obsCat',\n    X: 'X',\n    FEATURE_SET: 'featureSet',\n    MODULE: 'module',\n    COUNT: 'count',\n    OTHER: 'other'\n};\n\nexport const TIES_STRATEGY_IGNORE = 0;\nexport const TIES_STRATEGY_AVERAGE = 1;\nexport const TIES_STRATEGY_MAXIMUM = 2;\nexport const TIES_STRATEGY_MINIMUM = 3;\nexport const TIES_STRATEGY_SEQUENTIAL = 4;\n\n\nexport const TRACE_TYPE_IMAGE = 'image';\nexport const TRACE_TYPE_SCATTER = 'scatter';\nexport const TRACE_TYPE_META_IMAGE = 'meta_image';\n\nexport const INTERPOLATOR_SCALING_MIN_MAX_FEATURE = 'min_max_feature';\nexport const INTERPOLATOR_SCALING_MIN_MAX_CATEGORY = 'min_max_category';\nexport const INTERPOLATOR_SCALING_NONE = 'none';\n\nexport function getCategoryValue(renamedCategories, category) {\n    let renamedCategoryValue = renamedCategories[category];\n    if (renamedCategoryValue != null && renamedCategoryValue.newValue != null) {\n        return renamedCategoryValue.newValue;\n    }\n    return category;\n}\n\nexport function isMac() {\n    return window.navigator.platform.toLowerCase().indexOf('mac') !== -1;\n}\n\nconst reactMarkdownStyles = (theme) => ({\n    listItem: {\n        marginTop: theme.spacing(1)\n    }\n});\n\n\nexport const REACT_MD_OVERRIDES = {\n    h1: {\n        component: Typography,\n        props: {\n            gutterBottom: true,\n            variant: 'h5'\n        }\n    },\n    h2: {component: Typography, props: {gutterBottom: true, variant: 'h6'}},\n    h3: {component: Typography, props: {gutterBottom: true, variant: 'subtitle1'}},\n    h4: {\n        component: Typography,\n        props: {gutterBottom: true, variant: 'caption', paragraph: true}\n    },\n    h5: {\n        component: Typography,\n        props: {gutterBottom: true, variant: 'caption', paragraph: true}\n    },\n    h6: {\n        component: Typography,\n        props: {gutterBottom: true, variant: 'caption', paragraph: true}\n    },\n    p: {component: Typography, props: {paragraph: true}},\n    a: {component: Link, props: {target: '_blank'}},\n    li: {\n        component: withStyles(reactMarkdownStyles)(({classes, ...props}) => (\n            <li className={classes.listItem}>\n                <Typography component=\"span\" {...props} />\n            </li>\n        ))\n    }\n};\n\nexport function summarizeDensity(values, index, selection, summarizationMethod) {\n    let newValues = [];\n    let summarize;\n\n    if (summarizationMethod === 'max') {\n        summarize = (indices) => {\n            let max = -Number.MAX_VALUE;\n            for (let j = 0, nindices = indices.length; j < nindices; j++) {\n                max = Math.max(values[indices[j]], max);\n            }\n            return max;\n        };\n    } else if (summarizationMethod === 'mode') {\n        summarize = (indices) => {\n            let valueToCount = new Map();\n            for (let j = 0, nindices = indices.length; j < nindices; j++) {\n                const value = values[indices[j]];\n                let prior = valueToCount.get(value);\n                if (prior === undefined) {\n                    prior = 0;\n                }\n                valueToCount.set(value, 1 + prior);\n            }\n            // TODO compute purity\n            let max = -Number.MAX_VALUE;\n            let maxValue = null;\n            valueToCount.forEach((count, value) => {\n                if (count > max) {\n                    max = count;\n                    maxValue = value;\n                }\n            });\n            return maxValue;\n        };\n\n    } else {\n        throw new Error();\n    }\n    const isSelectionEmpty = selection.size === 0;\n    for (let i = 0, n = index.length; i < n; i++) {\n        const indices = index[i];\n        const summarizedValue = summarize(isSelectionEmpty ? indices : indices.filter(item => selection.has(item)));\n        newValues.push(summarizedValue);\n    }\n\n    return newValues;\n}\n\nexport function createEmbeddingDensity(xcoords, ycoords) {\n    const nbins = xcoords.length > 18367 ? Math.floor(Math.sqrt(xcoords.length / 1000)) * 14 : 60;\n    const xscale = scaleLinear().domain(extent(xcoords)).range([0, nbins - 1]);\n    const yscale = scaleLinear().domain(extent(ycoords)).range([0, nbins - 1]);\n    const binMap = new Map();\n    for (let i = 0, n = xcoords.length; i < n; i++) {\n        const xcoordNew = Math.floor(xscale(xcoords[i]));\n        const ycoordNew = Math.floor(yscale(ycoords[i]));\n        const bin = xcoordNew * nbins + ycoordNew;\n        let binValue = binMap.get(bin);\n        if (binValue === undefined) {\n            binValue = {indices: [], x: xcoordNew, y: ycoordNew};\n            binMap.set(bin, binValue);\n        }\n        binValue.indices.push(i);\n    }\n    const xvalues = [];\n    const yvalues = [];\n    const newIndexToOriginalIndices = [];\n    binMap.forEach((binValue, bin) => {\n        xvalues.push(binValue.x);\n        yvalues.push(binValue.y);\n        newIndexToOriginalIndices.push(binValue.indices);\n    });\n    return {x: xvalues, y: yvalues, mode: 'density', nbins: nbins, index: newIndexToOriginalIndices};\n}\n\nexport function scaleConstantRange(value) {\n\n    function scale(x) {\n        return value;\n    }\n\n    scale.invert = scale;\n    scale.domain = scale.range = function (_) {\n        return arguments.length ? (value = _[0]) : [value, value];\n    };\n\n    scale.copy = function () {\n        return scaleConstantRange(value);\n    };\n\n\n    return scale;\n}\n\nexport function copyToClipboard(text) {\n    const container = document.activeElement;\n    const fakeElem = document.createElement('textarea');\n    const isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n    fakeElem.style.fontSize = '12pt';\n    fakeElem.style.border = '0';\n    fakeElem.style.padding = '0';\n    fakeElem.style.margin = '0';\n    // Move element out of screen horizontally\n    fakeElem.style.position = 'absolute';\n    fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n    fakeElem.setAttribute('readonly', '');\n    // Move element to the same position vertically\n    let yPosition = window.pageYOffset || document.documentElement.scrollTop;\n    fakeElem.style.top = yPosition + 'px';\n    fakeElem.value = text;\n    container.appendChild(fakeElem);\n\n    fakeElem.select();\n    fakeElem.setSelectionRange(0, fakeElem.value.length);\n\n    document.execCommand('copy');\n\n    const fakeHandlerCallback = (event) => {\n        document.activeElement.blur();\n        window.getSelection().removeAllRanges();\n        container.removeChild(fakeElem);\n        container.removeEventListener('click', fakeHandlerCallback);\n    };\n    container.addEventListener('click', fakeHandlerCallback);\n}\n\nexport function stripTrailingZeros(s) {\n    let index = s.lastIndexOf('.');\n    let ending = s.substring(index + 1);\n    let allZeros = true;\n    for (let i = 0, n = ending.length; i < n; i++) {\n        if (ending[i] !== '0') {\n            allZeros = false;\n            break;\n        }\n    }\n    if (allZeros) {\n        s = s.substring(0, s.lastIndexOf('.'));\n    }\n    return s;\n}\n\n/**\n *\n * @param array. Array of format,data\n */\nexport function setClipboardData(clipboardData) {\n    const container = document.activeElement;\n    const isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n    const fakeElem = document.createElement('div');\n    fakeElem.contentEditable = true;\n\n    // Prevent zooming on iOS\n    fakeElem.style.fontSize = '12pt';\n    // Reset box model\n\n    fakeElem.style.border = '0';\n    fakeElem.style.padding = '0';\n    fakeElem.style.margin = '0';\n    // Move element out of screen horizontally\n    fakeElem.style.position = 'absolute';\n    fakeElem.style[isRTL ? 'right' : 'left'] = '-999999px';\n    // Move element to the same position vertically\n    fakeElem.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n    fakeElem.setAttribute('readonly', '');\n    //fakeElem.innerHTML = html;\n    const copyListener = (e) => {\n\n        clipboardData.forEach(function (elem) {\n            e.clipboardData.setData(elem.format, elem.data);\n        });\n\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        fakeElem.removeEventListener('copy', copyListener);\n    };\n    fakeElem.addEventListener('copy', copyListener);\n\n    container.appendChild(fakeElem);\n\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(fakeElem);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    const fakeHandlerCallback = (event) => {\n        container.removeChild(fakeElem);\n        container.removeEventListener('click', fakeHandlerCallback);\n    };\n    document.execCommand('copy');\n    container.addEventListener('click', fakeHandlerCallback);\n}\n\nfunction getColorsRgba(trace) {\n    const RGBA_NUM_ELEMENTS = 4;\n    const rgbScale = getRgbScale();\n\n\n    let colorScale = trace.colorScale;\n    const npoints = trace.x.length;\n    const colors = new Float32Array(npoints * RGBA_NUM_ELEMENTS);\n\n    function rescaleRgb(c) {\n        c.r = rgbScale(c.r);\n        c.g = rgbScale(c.g);\n        c.b = rgbScale(c.b);\n        return c;\n    }\n\n    if (!trace.continuous) {\n        const categories = colorScale.domain();\n        const category2color = new Map();\n        categories.forEach(category => {\n            category2color.set(category, rescaleRgb(color(colorScale(category))));\n        });\n        for (let i = 0, dst = 0; i < npoints; ++i) {\n            const c = category2color.get(trace.values[i]);\n            colors[dst++] = c.r;\n            colors[dst++] = c.g;\n            colors[dst++] = c.b;\n            colors[dst++] = 1;\n        }\n    } else {\n        const ncolors = 500;\n        const colorBins = [];\n        const domain = colorScale.domain();\n        //const unknown  = colorScale.unknown();\n        const binScale = scaleLinear().domain(domain).range([0, ncolors - 1]);\n        for (let i = 0; i < ncolors; ++i) {\n            const value = binScale.invert(i);\n            colorBins.push(rescaleRgb(color(colorScale(value))));\n        }\n        for (let i = 0, dst = 0; i < npoints; ++i) {\n            const value = trace.values[i];\n            let bin = Math.ceil(binScale(value));\n            if (bin < 0) {\n                bin = 0;\n            } else if (bin >= ncolors) {\n                bin = ncolors - 1;\n            }\n            const c = colorBins[bin];\n            colors[dst++] = c.r;\n            colors[dst++] = c.g;\n            colors[dst++] = c.b;\n            colors[dst++] = 1;\n        }\n    }\n\n    return colors;\n}\n\nexport function updateTraceColors(traceInfo) {\n    if (traceInfo.type === TRACE_TYPE_IMAGE) {\n        let colors = [];\n        let colorScale = traceInfo.colorScale;\n        const colorMapper = rgb => rgb.formatHex();\n        for (let i = 0, n = traceInfo.x.length; i < n; i++) {\n            let rgb = color(colorScale(traceInfo.values[i]));\n            colors.push(colorMapper(rgb));\n        }\n        traceInfo.colors = colors;\n    } else if (traceInfo.type === TRACE_TYPE_SCATTER) {\n        traceInfo.colors = getColorsRgba(traceInfo);\n    } else if (traceInfo.type === TRACE_TYPE_META_IMAGE) {\n        let colorScale = traceInfo.colorScale;\n        const svgNode = traceInfo.source;\n        const galleryNode = traceInfo.gallerySource;\n        const categoryToStats = traceInfo.categoryToStats;\n        if (traceInfo.name !== '__count') {\n            for (const category in categoryToStats) {\n                const stats = categoryToStats[category];\n                const query = category.replaceAll(' ', '_'); // FIXME\n                svgNode.querySelectorAll('[id=\"' + query + '\"]').forEach(node => {\n                    const color = stats.value === undefined ? '#f0f0f0' : colorScale(stats.value);\n                    node.style.fill = color;\n                });\n\n                galleryNode.querySelectorAll('[id=\"' + query + '\"]').forEach(node => {\n                    const color = stats.value === undefined ? '#f0f0f0' : colorScale(stats.value);\n                    node.style.fill = color;\n                });\n            }\n        } else {\n            for (const category in categoryToStats) {\n                const stats = categoryToStats[category];\n                const query = category.replaceAll(' ', '_'); // FIXME\n                svgNode.querySelectorAll('[id=\"' + query + '\"]').forEach(node => {\n                    if (stats.n === 0) {\n                        if (node.dataset.fill === undefined) {\n                            node.dataset.fill = node.style.fill;\n                        }\n                        node.style.fill = '#f0f0f0';\n                    } else if (node.dataset.fill !== undefined) {\n                        node.style.fill = node.dataset.fill;\n                    }\n                });\n\n                galleryNode.querySelectorAll('[id=\"' + query + '\"]').forEach(node => {\n                    if (stats.n === 0) {\n                        if (node.dataset.fill === undefined) {\n                            node.dataset.fill = node.style.fill;\n                        }\n                        node.style.fill = '#f0f0f0';\n                    } else if (node.dataset.fill !== undefined) {\n                        node.style.fill = node.dataset.fill;\n                    }\n                });\n            }\n        }\n    }\n}\n\n\n/**\n * Computes the rank using the given index array. The index array can be\n * obtained from the indexSort method. Does not handle ties.\n *\n */\nexport function rankIndexArray(index) {\n    const n = index.length;\n    const rank = new Uint32Array(n);\n    for (let j = 0; j < n; j++) {\n        rank[index[j]] = j + 1;\n    }\n    return rank;\n}\n\nexport function indexSort(array, ascending) {\n    const pairs = [];\n    for (let i = 0, length = array.length; i < length; i++) {\n        pairs.push({\n            value: array[i],\n            position: i\n        });\n    }\n    return indexSortPairs(pairs, ascending);\n}\n\nfunction resolveTie(ranks, tiesTrace, tiesStrategy = TIES_STRATEGY_AVERAGE) {\n\n    // constant value of ranks over tiesTrace\n    const c = ranks[tiesTrace[0]];\n\n    // length of sequence of tied ranks\n    const length = tiesTrace.length;\n\n    switch (tiesStrategy) {\n        case  TIES_STRATEGY_AVERAGE:  // Replace ranks with average\n            fill(ranks, tiesTrace, (2 * c + length - 1) / 2.0);\n            break;\n        case TIES_STRATEGY_MAXIMUM:   // Replace ranks with maximum values\n            fill(ranks, tiesTrace, c + length - 1);\n            break;\n        case TIES_STRATEGY_MINIMUM:   // Replace ties with minimum\n            fill(ranks, tiesTrace, c);\n            break;\n        case TIES_STRATEGY_SEQUENTIAL:  // Fill sequentially from c to c + length - 1\n            // walk and fill\n\n            const f = Math.round(c);\n            for (let i = 0, n = tiesTrace.length; i < n; i++) {\n                ranks[tiesTrace[i]] = f + i;\n            }\n            break;\n        default:\n            throw new Error();\n    }\n}\n\n/**\n * Sets<code>data[i] = value</code> for each i in <code>tiesTrace.</code>\n *\n * @param data array to modify\n * @param tiesTrace list of index values to set\n * @param value value to set\n */\nfunction fill(data, tiesTrace, value) {\n    for (let i = 0, n = tiesTrace.length; i < n; i++) {\n        data[tiesTrace[i]] = value;\n    }\n}\n\nexport function rankdata(values) {\n    const ranks = [];\n    for (let i = 0, n = values.length; i < n; i++) {\n        ranks.push({\n            value: values[i],\n            position: i\n        });\n    }\n\n    ranks.sort(function (a, b) {\n        return (a.value < b.value ? -1 : (a.value === b.value ? (a.position < b.position ? -1 : 1) : 1));\n    });\n\n    // Walk the sorted array, filling output array using sorted positions,\n    // resolving ties as we go\n    const out = new Array(ranks.length);\n    let pos = 1;  // position in sorted array\n    out[ranks[0].position] = pos;\n    let tiesTrace = [];\n    tiesTrace.push(ranks[0].position);\n    for (let i = 1; i < ranks.length; i++) {\n        if (ranks[i].value > ranks[i - 1].value) {\n            // tie sequence has ended (or had length 1)\n            pos = i + 1;\n            if (tiesTrace.length > 1) {  // if seq is nontrivial, resolve\n                resolveTie(out, tiesTrace);\n            }\n            tiesTrace = [];\n            tiesTrace.push(ranks[i].position);\n        } else {\n            // tie sequence continues\n            tiesTrace.push(ranks[i].position);\n        }\n        out[ranks[i].position] = pos;\n    }\n    if (tiesTrace.length > 1) {  // handle tie sequence at end\n        resolveTie(out, tiesTrace);\n    }\n    return out;\n}\n\nfunction indexSortPairs(ranks, ascending) {\n    if (ascending) {\n        ranks.sort(function (a, b) {\n            return (a.value < b.value ? -1 : (a.value === b.value ? (a.position < b.position ? -1 : 1) : 1));\n        });\n    } else {\n        ranks.sort(function (a, b) {\n            return (a.value < b.value ? 1 : (a.value === b.value ? (a.position < b.position ? 1 : -1) : -1));\n        });\n    }\n\n    const indices = new Uint32Array(ranks.length);\n    for (let i = 0, n = ranks.length; i < n; i++) {\n        indices[i] = ranks[i].position;\n    }\n    return indices;\n}\n\nexport function randomSeq(n, start = 0) {\n    const indices = new Uint32Array(n);\n    for (let i = 0; i < n; i++, start++) {\n        indices[i] = start;\n    }\n    shuffle(indices);\n    return indices;\n}\n\n/**\n * Computes the False Discovery Rate using the BH procedure.\n *\n * @param nominalPValues\n *            Array of nominal p-values.\n */\nexport function fdr(nominalPValues) {\n    const size = nominalPValues.length;\n    const pValueIndices = indexSort(nominalPValues, true);\n    const ranks = rankIndexArray(pValueIndices);\n\n    // check for ties\n    for (let i = pValueIndices.length - 1; i > 0; i--) {\n        const bigPValue = nominalPValues[pValueIndices[i]];\n        const smallPValue = nominalPValues[pValueIndices[i - 1]];\n        if (bigPValue === smallPValue) {\n            ranks[pValueIndices[i - 1]] = ranks[pValueIndices[i]];\n        }\n    }\n\n    const fdr = new Float32Array(size);\n    for (let i = 0; i < size; i++) {\n        const rank = ranks[i];\n        const p = nominalPValues[i];\n        fdr[i] = (p * size) / rank;\n    }\n\n    // ensure fdr is monotonically decreasing\n    const pIndices = indexSort(nominalPValues, false);\n    for (let i = 0; i < pIndices.length - 1; i++) {\n        const highIndex = pIndices[i];\n        const lowIndex = pIndices[i + 1];\n        fdr[lowIndex] = Math.min(fdr[lowIndex], fdr[highIndex]);\n    }\n    for (let i = 0; i < size; i++) {\n        fdr[i] = Math.min(fdr[i], 1);\n    }\n    return fdr;\n}\n\nexport function isPointInside(point, vs) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    const x = point.x, y = point.y;\n\n    let inside = false;\n    for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        const xi = vs[i].x, yi = vs[i].y;\n        const xj = vs[j].x, yj = vs[j].y;\n\n        const intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n\n    return inside;\n}\n\n\nexport function arrayToSvgPath(lassoPathArray) {\n    if (lassoPathArray.length > 1) {\n        lassoPathArray = simplify(lassoPathArray);\n    }\n    let svgPath = 'M ' + lassoPathArray[0].x + ' ' + lassoPathArray[0].y;\n    for (let i = 1; i < lassoPathArray.length; i++) {\n        svgPath += ' L ' + lassoPathArray[i].x + ' ' + lassoPathArray[i].y;\n    }\n    svgPath += ' Z';\n    return svgPath;\n}\n\nexport function getRgbScale() {\n    return scaleLinear().domain([0, 255]).range([0, 1]);\n}\n\nexport function fixInterpolatorName(name) {\n    if (!name.startsWith(\"interpolate\")) {\n        name = \"interpolate\" + name;\n    }\n    return name;\n}\n\nexport function getInterpolator(name) {\n    return scaleChromatic[fixInterpolatorName(name)];\n}\n\nexport function createColorScale(colorScaleDef) {\n    const scale = scaleSequential(colorScaleDef.value).clamp(true).unknown('#f0f0f0');\n    if (colorScaleDef.reversed) {\n        const interpolator = scale.interpolator();\n        const mirror = t => interpolator(1 - t);\n        scale.interpolator(mirror);\n    }\n    return scale;\n}\n\nexport function convertIndicesToBins(points, bins) {\n    let selectedBins = [];\n    for (let i = 0, n = points.length; i < n; i++) {\n        selectedBins.push(bins[points[i]]);\n    }\n    return selectedBins;\n}\n\nexport function convertBinsToIndices(bins, selectedBins) {\n    let points = [];\n    selectedBins = new Set(selectedBins);\n    for (let i = 0, n = bins.length; i < n; i++) {\n        if (selectedBins.has(bins[i])) {\n            points.push(i);\n        }\n    }\n\n    return points;\n}\n\n// add to X, maintaining insertion order\nexport function addFeatureSetsToX(featureSets, X) {\n    const uniqueX = new Set(X);\n    featureSets.forEach(featureSet => {\n        let features = featureSet.features;\n        if (features) {\n            features.forEach(feature => {\n                if (!uniqueX.has(feature)) {\n                    X.push(feature);\n                    uniqueX.add(feature);\n                }\n            });\n        }\n\n    });\n}\n\nexport function getFeatureSets(markers, featureSets) {\n    const filteredFeatureSets = [];\n    if (featureSets.length > 0) {\n        let markerIdToMarker = new Map();\n        markers.forEach(m => {\n            markerIdToMarker.set(m.id, m);\n        });\n\n        featureSets.forEach(featureSet => {\n            const featureSetId = isString(featureSet) ? featureSet : featureSet.value;\n            const m = markerIdToMarker.get(featureSetId);\n            if (m != null) {\n                filteredFeatureSets.push(m);\n            }\n        });\n    }\n    return filteredFeatureSets;\n}\n\n","export class Vector {\n    constructor(name, values) {\n        this.name = name;\n        this.values = values;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    size() {\n        return this.values.length;\n    }\n\n    get(i) {\n        return this.values[i];\n    }\n\n    asArray() {\n        return this.values;\n    }\n\n    isSparse() {\n        return false;\n    }\n\n    [Symbol.iterator]() {\n        let index = 0;\n        const size = this.values.length;\n        return {\n            next: () => {\n                if (index < size) {\n                    return {value: this.values[index++], done: false};\n                } else {\n                    return {done: true};\n                }\n            }\n        };\n    }\n}\n","import {isObject} from 'lodash';\n\nimport {getPassingFilterIndices} from './dataset_filter';\nimport {SlicedVector} from './SlicedVector';\nimport {FEATURE_TYPE, NATSORT} from './util';\nimport {Vector} from './Vector';\n\nexport function getVarNameType(key) {\n    let index = key.indexOf('/');\n    if (index === -1) {\n        return {name: key, type: FEATURE_TYPE.X};\n    } else {\n        let key_type = key.substring(0, index);\n        let name = key.substring(index + 1);\n        return {name: name, type: key_type};\n    }\n}\n\nfunction getStats(dimensionVectors, measureVectors) {\n    const results = {};\n    dimensionVectors.forEach(v => {\n        results[v.getName()] = valueCounts(v);\n    });\n    measureVectors.forEach(v => {\n        results[v.getName()] = stats(v);\n    });\n\n    return results;\n}\n\n\nexport function getVectors(cachedData, names, indices = null) {\n    let vectors = [];\n    names.forEach(name => {\n        let array = cachedData[name];\n        if (array == null) {\n            throw new Error(name + \" not found\");\n        }\n        let v = new Vector(name, array);\n        if (indices != null) {\n            v = new SlicedVector(v, indices);\n        }\n        vectors.push(v);\n    });\n    return vectors;\n}\n\nexport function cacheValues(result, cachedData) {\n    if (result.embeddings != null) {\n        result.embeddings.forEach(embedding => {\n            if (embedding.coordinates && Object.keys(embedding.coordinates).length > 0) {\n                cachedData[embedding.name] = embedding.coordinates;\n            }\n            if (embedding.values) { // binned values\n                for (let feature in embedding.values) {\n                    cachedData[feature + '_' + embedding.name] = embedding.values[feature];\n                }\n            }\n        });\n    }\n    if (result.values) {\n        for (let feature in result.values) {\n            cachedData[feature] = result.values[feature];\n        }\n    }\n}\n\n\nexport function getTypeToMeasures(measures) {\n    let typeToMeasures = {X: [], obs: []};\n    for (let i = 0; i < measures.length; i++) {\n        const {name, type} = getVarNameType(measures[i]);\n        let typeMeasures = typeToMeasures[type];\n        if (typeMeasures === undefined) {\n            typeMeasures = [];\n            typeToMeasures[type] = typeMeasures;\n        }\n        typeMeasures.push(name);\n\n    }\n    return typeToMeasures;\n}\n\nexport function getBasis(basis, dimensions = 2, mode = null) {\n    dimensions = parseInt(dimensions);\n    let coordinate_columns = [];\n    for (let i = 0; i < dimensions; i++) {\n        coordinate_columns.push(basis + '_' + i + 1);\n    }\n    let full_name = basis + '_' + dimensions;\n    if (mode != null) {\n        full_name = full_name + '_' + mode;\n    }\n    return {\n        name: basis,\n        dimensions: dimensions,\n        coordinate_columns: coordinate_columns,\n        mode: mode,\n        full_name: full_name\n    };\n}\n\nexport function splitDataFilter(data_filter) {\n    let var_keys = new Set();\n    let obs_keys = new Set();\n    let basis_list = [];\n    if (data_filter) {\n        let user_filters = data_filter.filters || [];\n        for (let i = 0; i < user_filters.length; i++) {\n            let user_filter = user_filters[i];\n            let key = user_filter[0];\n            if (isObject(key)) {\n                basis_list.push(key);\n            } else {\n                const {name, type} = getVarNameType(key);\n                user_filter[0] = name;\n                if (type === 'X') {\n                    var_keys.add(name);\n                } else {\n                    obs_keys.add(name);\n                }\n            }\n        }\n    }\n    return {basis: basis_list, X: Array.from(var_keys), obs: Array.from(obs_keys)};\n//    return list(var_keys), list(obs_keys), basis_list\n}\n\n\nexport function computeDerivedStats(result, q, cachedData) {\n    if (q.stats) {\n        const dimensions = q.stats.dimensions || [];\n        const measures = q.stats.measures || [];\n        const typeToMeasures = getTypeToMeasures(measures);\n\n        let measureVectors = [];\n        Object.values(typeToMeasures).forEach(fields => {\n            measureVectors = measureVectors.concat(getVectors(cachedData, fields));\n        });\n\n        result.summary = getStats(getVectors(cachedData, dimensions), measureVectors);\n    }\n\n    if (q.groupedStats) {\n        const dimensions = q.groupedStats.dimensions || []; // array of arrays to support multiple groupings in the future\n        const measures = q.groupedStats.measures || [];\n        const typeToMeasures = getTypeToMeasures(measures);\n        if (dimensions.length > 0) {\n            // TODO, currently we only handle dimensions[0]\n            const groupDimensionInfo = groupDimensions(getVectors(cachedData, dimensions[0]));\n            const distribution = {};\n            for (const key in typeToMeasures) {\n                const measures = typeToMeasures[key];\n                if (measures.length > 0) {\n                    distribution[key] = groupedStats(groupDimensionInfo, getVectors(cachedData, measures));\n                }\n            }\n            result.distribution = distribution;\n        }\n    }\n\n    if (q.selection) {\n        const dimensions = q.selection.dimensions || [];\n        const measures = q.selection.measures || [];\n        const typeToMeasures = getTypeToMeasures(measures);\n        result.selection = {};\n        result.selection.indices = getPassingFilterIndices(cachedData, q.selection.filter);\n        const selectedIndices = Array.from(result.selection.indices);\n        const dimensionVectors = getVectors(cachedData, dimensions, selectedIndices);\n        if (dimensions.length > 0) {\n            const groupDimensionInfo = groupDimensions(dimensionVectors);\n            const distribution = {};\n            for (const key in typeToMeasures) {\n                const measures = typeToMeasures[key];\n                if (measures.length > 0) {\n                    distribution[key] = groupedStats(groupDimensionInfo, getVectors(cachedData, measures, selectedIndices));\n                }\n            }\n            result.selection.distribution = distribution;\n        }\n        let measureVectors = [];\n        Object.values(typeToMeasures).forEach(fields => {\n            measureVectors = measureVectors.concat(getVectors(cachedData, fields, selectedIndices));\n        });\n        result.selection.summary = getStats(dimensionVectors, measureVectors);\n    }\n}\n\n\nexport function valueCounts(v) {\n    let valueToCount = new Map();\n    for (let i = 0, size = v.size(); i < size; i++) {\n        const key = v.get(i);\n        let count = valueToCount.get(key) || 0;\n        valueToCount.set(key, count + 1);\n    }\n    const keys = Array.from(valueToCount.keys());\n    keys.sort(NATSORT);\n    const counts = keys.map(key => valueToCount.get(key));\n    return {categories: keys, counts: counts};\n}\n\n\nexport function groupDimensions(dimensions) {\n    const keyToIndices = {};\n    const ndim = dimensions.length;\n    const size = dimensions[0].size();\n    const tmp = [];\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < ndim; j++) {\n            tmp[j] = dimensions[j].get(i);\n        }\n        const key = tmp.join(', ');\n        let value = keyToIndices[key];\n        if (value === undefined) {\n            value = {key: tmp.slice(), indices: []};\n            keyToIndices[key] = value;\n        }\n        value.indices.push(i);\n    }\n    let categories = Object.keys(keyToIndices);\n    const dimensionNames = [];\n    for (let j = 0; j < ndim; j++) {\n        dimensionNames[j] = dimensions[j].getName();\n    }\n    const dimensionName = dimensionNames.join('-');\n    return {categories, keyToIndices, dimensionName, dimensionNames};\n}\n\nexport function groupedStats(groupDimensionInfo, vectors) {\n    let result = [];\n    groupDimensionInfo.categories.forEach(category => {\n        const value = groupDimensionInfo.keyToIndices[category];\n        vectors.forEach((v) => {\n            const categoryVector = new SlicedVector(v, value.indices);\n            const categoryStats = stats(categoryVector);\n            const entry = {\n                dimension: groupDimensionInfo.dimensionName,\n                dimensions: groupDimensionInfo.dimensionNames,\n                categories: value.key,\n                feature: v.getName(),\n                mean: categoryStats.mean,\n                n: categoryVector.size(),\n                percentExpressed: 100 * (categoryStats.numExpressed / categoryVector.size()),\n                vector: categoryVector\n            };\n            result.push(entry);\n        });\n    });\n    return result;\n\n}\n\nexport function toArray(v) {\n    const result = new Array(v.size());\n    for (let i = 0, n = v.size(); i < n; i++) {\n        result[i] = v.get(i);\n    }\n    return result;\n}\n\nexport function toFloatArray(v) {\n    const result = new Float32Array(v.size());\n    for (let i = 0, n = v.size(); i < n; i++) {\n        result[i] = v.get(i);\n    }\n    return result;\n}\n\nexport function variance(v, mean) {\n    const size = v.size();\n    if (size <= 1) {\n        return NaN;\n    }\n    let ss = 0;\n    for (let j = 0; j < size; j++) {\n        let x = v.get(j);\n        let diff = x - mean;\n        diff = diff * diff;\n        ss += diff;\n    }\n    let n = size - 1;\n    if (n < 1) {\n        n = 1;\n    }\n    return ss / n;\n}\n\n\nexport function stats(v) {\n\n    if (v.size() === 0) {\n        return {\n            min: Number.NaN,\n            max: Number.NaN,\n            sum: Number.NaN,\n            mean: Number.NaN,\n            numExpressed: Number.NaN,\n            logSum: Number.NaN\n        };\n    }\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    let sum = 0;\n    let numExpressed = 0;\n    let logSum = 0;\n    for (let i = 0, size = v.size(); i < size; i++) {\n        const value = v.get(i);\n        min = value < min ? value : min;\n        max = value > max ? value : max;\n        sum += value;\n        logSum += Math.expm1(value);\n        if (value !== 0) {\n            numExpressed++;\n        }\n    }\n\n    const mean = sum / v.size();\n    return {\n        min: min, max: max, sum: sum, mean: mean, numExpressed: numExpressed, n: v.size(), logSum: logSum\n    };\n}\n\n\n\n","import {isObject} from 'lodash';\n\nimport {getVarNameType} from './VectorUtil';\n\nfunction combine(a, b, op) {\n    return op === 'or' ? new Set([...a, ...b]) : new Set(\n        [...a].filter(x => b.has(x)));\n}\n\nfunction getIndices(array, f) {\n    let result = new Set();\n    for (let i = 0, size = array.length; i < size; i++) {\n        if (f(array[i])) {\n            result.add(i);\n        }\n    }\n    return result;\n}\n\nexport function createFilterFunction(filter) {\n    const op = filter[1];\n    let value = filter[2];\n    let applyFunction;\n    if (op === 'in') {\n        value = new Set(value);\n        applyFunction = (d) => value.has(d);\n    } else if (op === '>') {\n        applyFunction = (d) => d > value;\n    } else if (op === '=') {\n        applyFunction = (d) => d === value;\n    } else if (op === '<') {\n        applyFunction = (d) => d < value;\n    } else if (op === '!=') {\n        applyFunction = (d) => d !== value;\n    } else if (op === '>=') {\n        applyFunction = (d) => d >= value;\n    } else if (op === '<=') {\n        applyFunction = (d) => d <= value;\n    } else {\n        throw new Error('Unknown filter: ' + op);\n    }\n    return applyFunction;\n}\n\nexport function getPassingFilterIndices(cachedData, data_filter) {\n    let passingIndices = null;\n    if (data_filter) {\n        let user_filters = data_filter.filters || [];\n        let combine_filters = data_filter.combine || 'and';\n        for (let i = 0; i < user_filters.length; i++) {\n            let filterObject = user_filters[i];\n            let filterField = filterObject[0];\n            let filterValue = filterObject[2];\n            let keep = null;\n\n            if (isObject(filterField)) { // selection box or lasso\n                if (filterValue.indices) { // Set of passing indices\n                    keep = filterValue.indices;\n                } else {\n                    let selection_keep;\n                    let path = filterValue.path;\n                    const coords = cachedData[filterField.name];\n                    for (let j = 0; j < path.length; j++) {\n                        let p = path[j];\n                        let xKeep = getIndices(cachedData[coords[0]], (val) => val >= p.x && val <= p.x + p.width);\n                        let yKeep = getIndices(cachedData[coords[1]], (val) => val >= p.y && val <= p.y + p.height);\n                        selection_keep = combine(xKeep, yKeep, 'and');\n                        if (p.z) {  // 3d\n                            let zKeep = getIndices(cachedData[coords[2]], (val) => val >= p.z && val <= p.z + p.depth);\n                            selection_keep = combine(selection_keep, zKeep, 'and');\n                        }\n                    }\n                    keep = keep ? combine(selection_keep, keep, combine_filters) : selection_keep;\n                }\n            } else {\n                if (filterField === '__index') {\n                    keep = new Set(filterValue); // [__index, in, indices]\n                } else {\n                    const nameType = getVarNameType(filterField);\n                    let series = cachedData[nameType.name];\n                    keep = getIndices(series, createFilterFunction(filterObject));\n                }\n            }\n\n\n            if (passingIndices) {\n                passingIndices = combine(passingIndices, keep, combine_filters);\n            } else {\n                passingIndices = keep;\n            }\n        }\n    }\n\n    return passingIndices;\n}\n","import {isArray} from 'lodash';\nimport {getPassingFilterIndices} from './dataset_filter';\nimport {SlicedVector} from './SlicedVector';\nimport {Vector} from './Vector';\nimport {cacheValues, computeDerivedStats, getTypeToMeasures, splitDataFilter} from './VectorUtil';\n\n\nexport class DirectAccessDataset {\n\n    init(id, url) {\n        this.id = id;\n        this.key2data = {};\n        this.format = \"json\";\n        this.schema = null;\n        if (url.endsWith(\".jsonl\") || url.endsWith(\".jsonl.gz\")) {\n            this.format = \"jsonl\";\n        }\n        if (this.format === 'json' && !url.endsWith('.json') && !url.endsWith('.json.gz')) {\n            url = url + 'schema.json';\n        }\n        this.url = url;\n        this.baseUrl = this.url.substring(0, this.url.lastIndexOf('/') + 1);\n        return Promise.resolve();\n    }\n\n\n    getByteRange(key) {\n        let range = this.key2bytes[key];\n        if (!range) {\n            throw new Error(key + ' not found');\n        }\n        return {headers: {'Range': 'bytes=' + range[0] + '-' + range[1]}};\n    }\n\n    _fetchJson(key) {\n        return fetch(this.baseUrl + key + '.json').then(r => r.json());\n    }\n\n    _fetchJsonl(key) {\n        return fetch(this.url, this.getByteRange(key)).then(r => r.json()).then(r => r[key]);\n    }\n\n    _fetch(key) {\n        return this.format === 'json' ? this._fetchJson(key) : this._fetchJsonl(key);\n    }\n\n    fetchData(keys) {\n        let promises = [];\n        keys.forEach(key => {\n            if (this.key2data[key] == null && key !== '__count') {\n                let p = this._fetch(key).then(data => {\n                    if (isArray(data)) { // continuous value\n                        this.key2data[key] = data;\n                    } else {\n                        if (data.indices || data.index) {  // sparse\n                            const indices = data.indices || data.index;\n                            const sparseValues = data.values || data.value;\n                            let values = new Float32Array(this.schema.shape[0]);\n                            for (let i = 0, n = sparseValues.length; i < n; i++) {\n                                values[indices[i]] = sparseValues[i];\n                            }\n                            this.key2data[key] = values;\n                        } else if (data.categories) {  // category\n                            let values = new Array(this.schema.shape[0]);\n                            for (let i = 0, n = data.values.length; i < n; i++) {\n                                values[i] = data.categories[data.values[i]];\n                            }\n                            this.key2data[key] = values;\n                        } else if (data.value) {\n                            this.key2data[key] = data.value;\n                        } else {\n                            this.key2data[key] = data; // object for coordinates\n                        }\n                    }\n                });\n                promises.push(p);\n            }\n        });\n        return new Promise(resolve => {\n            Promise.all(promises).then(() => resolve());\n        });\n\n\n    }\n\n    getSelectedIdsPromise(q) {\n        const dataFilter = q.filter;\n        const {basis, X, obs} = splitDataFilter(dataFilter);\n        let keys = [];\n        basis.forEach(embedding => {\n            keys.push(embedding.name);\n        });\n        keys.push('index');\n\n        keys = keys.concat(X).concat(obs);\n        return new Promise(resolve => {\n            this.fetchData(keys).then(() => {\n                const indices = Array.from(getPassingFilterIndices(this.key2data, dataFilter));\n                let idVector = this.getVector('index', indices);\n                let ids = [];\n                for (let i = 0, n = idVector.size(); i < n; i++) {\n                    ids.push(idVector.get(i));\n                }\n                resolve({ids: ids});\n            });\n        });\n    }\n\n    getDataPromise(q, cachedData) {\n        const queryKeys = ['stats', 'groupedStats', 'selection', 'values'];\n        const results = {};\n        let dimensions = [];\n        let measures = [];\n        let basisKeys = new Set();\n        if (q.embedding) {\n            q.embedding.forEach(embedding => {\n                const key = embedding.name;\n                basisKeys.add(key);\n                embedding.name = key;\n            });\n        }\n        queryKeys.forEach(key => {\n            if (key in q) {\n                let values = q[key];\n                if (!isArray(values)) {\n                    values = [values];\n                }\n                values.forEach(item => {\n                    if (item.dimensions) {\n                        // groupedStats dimensions is array of arrays\n                        if (isArray(item.dimensions)) {\n                            item.dimensions.forEach(dim => {\n                                dimensions = dimensions.concat(dim);\n                            });\n                        } else {\n                            dimensions = dimensions.concat(item.dimensions);\n                        }\n                    }\n                    if (item.measures) {\n                        measures = measures.concat(item.measures);\n                    }\n                });\n            }\n        });\n\n        const typeToMeasures = getTypeToMeasures(measures);\n\n        if (q.selection) { // get any embeddings that we're filtering on\n            const dataFilter = q.selection.filter;\n            const {basis, X, obs} = splitDataFilter(dataFilter);\n            dimensions = dimensions.concat(obs);\n            measures = measures.concat(X);\n            const embeddings = q.selection.embeddings || [];\n            embeddings.forEach(embedding => {\n                const key = embedding.name;\n                basisKeys.add(key);\n            });\n        }\n\n        return new Promise(resolve => {\n\n            this.fetchData(dimensions.concat(typeToMeasures.obs).concat(typeToMeasures.X).concat(Array.from(basisKeys))).then(() => {\n                if (q.embedding) {\n                    results.embeddings = [];\n                    q.embedding.forEach(embedding => {\n                        const key = embedding.name;\n                        let coordinates = this.getVector(key).asArray();\n                        results.embeddings.push({name: key, coordinates: coordinates});\n                    });\n                }\n                if (q.values) {\n                    const dimensions = q.values.dimensions || [];\n                    const measures = q.values.measures || [];\n                    const typeToMeasures = getTypeToMeasures(measures);\n                    const values = {};\n                    dimensions.concat(typeToMeasures.obs).concat(typeToMeasures.X).forEach(key => {\n                        if (key === '__count') {\n                            values[key] = new Int8Array(this.schema.shape[0]);\n                            values[key].fill(1);\n                        } else {\n                            values[key] = this.getVector(key).asArray();\n                        }\n                    });\n                    results.values = values;\n                }\n                cacheValues(results, cachedData);\n                computeDerivedStats(results, q, cachedData);\n                resolve(results);\n            });\n        });\n    }\n\n    getSchemaPromise() {\n        if (this.schema != null) {\n            return Promise.resolve(this.schema);\n        }\n        const url = this.url;\n        const _this = this;\n        if (this.format === 'jsonl') {\n            return new Promise((resolve, reject) => {\n                fetch(url + '.idx.json').then(r => r.json()).then(result => {\n                    _this.key2bytes = result.index;\n                }).then(() => {\n                    fetch(url, _this.getByteRange('schema')).then(response => {\n                        return response.json();\n                    }).then(result => {\n                        _this.schema = result[\"schema\"];\n                        resolve(_this.schema);\n                    });\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                fetch(url).then(r => r.json()).then(result => {\n                    _this.schema = result;\n                    resolve(result);\n                });\n            });\n        }\n\n    }\n\n    getVector(key, indices = null) {\n        let array = this.key2data[key];\n        let v = new Vector(key, array);\n        if (indices != null) {\n            v = new SlicedVector(v, indices);\n        }\n        return v;\n    }\n\n    getFileUrl(file) {\n        return this.baseUrl + file;\n    }\n\n    getJob(id) {\n        return fetch(this.baseUrl + 'uns/' + id + '.json').then(r => r.json());\n    }\n\n    getJobParams(id) {\n        return Promise.resolve({});\n    }\n\n    getJobs() {\n        return Promise.resolve([]);\n    }\n\n    getVectors(keys, indices = null) {\n        let result = [];\n        keys.forEach(key => {\n            let v = this.getVector(key, indices);\n            result.push(v);\n        });\n        return result;\n    }\n\n\n}\n\n\n\n\n","import {SvgIcon, Tooltip} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport BorderInnerIcon from '@mui/icons-material/BorderInner';\nimport CloudQueueIcon from '@mui/icons-material/CloudQueue';\nimport ExposureIcon from '@mui/icons-material/Exposure';\nimport FontDownloadIcon from '@mui/icons-material/FontDownload';\nimport HomeIcon from '@mui/icons-material/Home';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport PhotoLibraryIcon from '@mui/icons-material/PhotoLibrary';\nimport PhotoSizeSelectSmallIcon from '@mui/icons-material/PhotoSizeSelectSmall';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\nimport ZoomOutIcon from '@mui/icons-material/ZoomOut';\nimport React, {useState} from 'react';\n\nconst active = 'cirro-active';\n\n\n//\"zoom\" | \"pan\" | \"select\" | \"lasso\" | \"orbit\" | \"turntable\"\nexport default function ChartToolbar(props) {\n\n    const [saveImageEl, setSaveImageEl] = useState(null);\n\n\n    function setDragMode(mode) {\n        props.onDragMode(mode);\n    }\n\n    function onShowLabels() {\n        props.onShowLabels();\n    }\n\n    function onShowAxis() {\n        props.onShowAxis();\n    }\n\n\n    function onShowFog() {\n        props.onShowFog();\n    }\n\n\n    function onGallery() {\n        props.onGallery();\n    }\n\n    function handleMoreOptions() {\n        props.onMoreOptions();\n    }\n\n    function setEditSelection() {\n        props.onEditSelection();\n    }\n\n    function handleSaveImageMenu(event) {\n        setSaveImageEl(event.currentTarget);\n\n    }\n\n    function handleSaveImageMenuClose(event) {\n        setSaveImageEl(null);\n    }\n\n    function handleSaveImage(format) {\n        setSaveImageEl(null);\n        props.onSaveImage(format);\n    }\n\n\n    const {dragmode, editSelection, showLabels, showAxis} = props;\n    return <>\n\n        {props.onZoomIn && <Tooltip title={\"Zoom In\"}>\n            <IconButton edge={false} size={'small'}\n                        aria-label=\"Zoom In\" onClick={props.onZoomIn}>\n                <ZoomInIcon/>\n            </IconButton>\n        </Tooltip>}\n\n        {props.onZoomOut && <Tooltip title={\"Zoom Out\"}>\n            <IconButton edge={false} size={'small'}\n                        aria-label=\"Zoom In\" onClick={props.onZoomOut}>\n                <ZoomOutIcon/>\n            </IconButton>\n        </Tooltip>}\n\n        {props.onHome && <Tooltip title={\"Home\"}>\n            <IconButton edge={false} size={'small'}\n                        aria-label=\"Home\" onClick={props.onHome}>\n                <HomeIcon/>\n            </IconButton>\n        </Tooltip>}\n\n        {props.onDragMode && <Tooltip title={\"Lasso Select\"}>\n            <IconButton edge={false} size={'small'} className={dragmode === 'lasso' ? active : ''}\n                        aria-label=\"Lasso Select\" onClick={() => setDragMode('lasso')}>\n                <SvgIcon width=\"24\" height=\"21\" viewBox=\"0 0 1031 1000\">\n                    <path\n                        d=\"m1018 538c-36 207-290 336-568 286-277-48-473-256-436-463 10-57 36-108 76-151-13-66 11-137 68-183 34-28 75-41 114-42l-55-70 0 0c-2-1-3-2-4-3-10-14-8-34 5-45 14-11 34-8 45 4 1 1 2 3 2 5l0 0 113 140c16 11 31 24 45 40 4 3 6 7 8 11 48-3 100 0 151 9 278 48 473 255 436 462z m-624-379c-80 14-149 48-197 96 42 42 109 47 156 9 33-26 47-66 41-105z m-187-74c-19 16-33 37-39 60 50-32 109-55 174-68-42-25-95-24-135 8z m360 75c-34-7-69-9-102-8 8 62-16 128-68 170-73 59-175 54-244-5-9 20-16 40-20 61-28 159 121 317 333 354s407-60 434-217c28-159-121-318-333-355z\"\n                        transform=\"matrix(1 0 0 -1 0 850)\"></path>\n\n                </SvgIcon>\n            </IconButton>\n        </Tooltip>}\n\n        {props.onDragMode && <Tooltip title={\"Box Select\"}>\n            <IconButton edge={false} size={'small'}\n                        aria-label=\"Box Select\" onClick={() => setDragMode('select')}>\n                <PhotoSizeSelectSmallIcon className={dragmode === 'select' ? active : ''}/>\n            </IconButton>\n        </Tooltip>}\n\n        {props.onEditSelection && <Tooltip title={\"Append to selection\"}>\n            <IconButton edge={false} size={'small'} aria-label=\"Append to selection\"\n                        onClick={setEditSelection}>\n                <ExposureIcon className={editSelection ? active : ''}/>\n            </IconButton>\n        </Tooltip>}\n\n        {props.is3d && <Tooltip title={props.animating ? 'Pause' : 'Animate'}>\n            <IconButton edge={false} size={'small'}\n                        aria-label={props.animating ? 'Pause' : 'Animate'}\n                        onClick={props.toggleAnimation}>\n                {!props.animating && <PlayArrowIcon/>}\n                {props.animating && <PauseIcon/>}\n            </IconButton>\n        </Tooltip>}\n\n        {props.onDragMode && <Tooltip title={\"Pan\"}>\n            <IconButton edge={false} size={'small'} className={dragmode === 'pan' ? active : ''}\n                        aria-label=\"Pan\" onClick={() => setDragMode('pan')}>\n                <SvgIcon viewBox=\"0 0 1000 1000\" height=\"16\" width=\"16\">\n                    <path\n                        d=\"m1000 350l-187 188 0-125-250 0 0 250 125 0-188 187-187-187 125 0 0-250-250 0 0 125-188-188 186-187 0 125 252 0 0-250-125 0 187-188 188 188-125 0 0 250 250 0 0-126 187 188z\"\n                        transform=\"matrix(1 0 0 -1 0 850)\"></path>\n                </SvgIcon>\n            </IconButton>\n        </Tooltip>}\n\n        {props.onShowLabels && <Tooltip title={\"Show Categorical Labels\"}>\n            <IconButton edge={false} size={'small'} className={showLabels ? active : ''}\n                        aria-label=\"Show Labels\" onClick={() => onShowLabels()}>\n                <FontDownloadIcon/>\n            </IconButton>\n        </Tooltip>}\n\n\n        {props.is3d && props.onShowAxis && <Tooltip title={\"Show Axis\"}>\n            <IconButton edge={false} size={'small'} className={showAxis ? active : ''}\n                        aria-label=\"Show Axis\" onClick={() => onShowAxis()}>\n                <BorderInnerIcon/>\n            </IconButton>\n        </Tooltip>}\n\n\n        {props.is3d && props.onShowFog && <Tooltip title={\"Show Fog\"}>\n            <IconButton edge={false} size={'small'} className={props.showFog ? active : ''}\n                        aria-label=\"Show Fog\" onClick={() => onShowFog()}>\n                <CloudQueueIcon/>\n            </IconButton>\n        </Tooltip>}\n\n\n        {/*<Tooltip title={\"Zoom\"}>*/}\n        {/*    <IconButton className={dragmode === 'zoom' ? active : ''}*/}\n        {/*                aria-label=\"Zoom\" onClick={() => setDragMode('zoom')}>*/}\n        {/*        <svg viewBox=\"0 0 1000 1000\" height=\"16\" width=\"16\">*/}\n        {/*            <path*/}\n        {/*                d=\"m1000-25l-250 251c40 63 63 138 63 218 0 224-182 406-407 406-224 0-406-182-406-406s183-406 407-406c80 0 155 22 218 62l250-250 125 125z m-812 250l0 438 437 0 0-438-437 0z m62 375l313 0 0-312-313 0 0 312z\"*/}\n        {/*                transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n        {/*        </svg>*/}\n        {/*    </IconButton>*/}\n        {/*</Tooltip>*/}\n        {/*<IconButton className={dragmode === ChartToolbar.MODE_ZOOM_OUT ? active : ''}*/}\n        {/*            aria-label=\"Zoom Out\" onClick={onZoomOut}>*/}\n        {/*    <svg viewBox=\"0 0 875 1000\" height=\"16\" width=\"16\">*/}\n        {/*        <path d=\"m0 788l0-876 875 0 0 876-875 0z m688-500l-500 0 0 125 500 0 0-125z\"*/}\n        {/*              transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n        {/*    </svg>*/}\n        {/*</IconButton>*/}\n\n        <Tooltip title={\"Save Image\"}>\n            <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false} size={'small'}\n                        aria-label=\"Save Image\" onClick={handleSaveImageMenu}>\n                <PhotoCameraIcon/>\n            </IconButton>\n        </Tooltip>\n\n        <Menu\n            id=\"save-image-menu\"\n            anchorEl={saveImageEl}\n            keepMounted\n            open={Boolean(saveImageEl)}\n            onClose={handleSaveImageMenuClose}\n        >\n            <MenuItem onClick={e => handleSaveImage('png')}>PNG</MenuItem>\n            <MenuItem onClick={e => handleSaveImage('svg')}>SVG</MenuItem>\n\n        </Menu>\n\n\n        {props.onMoreOptions && <Tooltip title={\"More Options\"}>\n            <IconButton edge={false} size={'small'}\n                        aria-label=\"More Options\" onClick={handleMoreOptions}>\n                <SettingsIcon/>\n            </IconButton>\n        </Tooltip>}\n\n\n        <Tooltip title={\"Scroll To Gallery\"}>\n            <IconButton edge={false} size={'small'}\n                        aria-label=\"Scroll To Gallery\" onClick={onGallery}>\n                <PhotoLibraryIcon/>\n            </IconButton>\n        </Tooltip>\n        {/*<Tooltip title={\"Copy Image\"}>*/}\n        {/*    <IconButton edge={false} size={'small'} aria-label=\"Copy Image\" onClick={props.onCopyImage}>*/}\n        {/*        <FileCopyIcon/>*/}\n        {/*    </IconButton>*/}\n        {/*</Tooltip>*/}\n\n        {/*<Tooltip title={*/}\n        {/*    <>*/}\n        {/*        <h6>3D controls</h6>*/}\n        {/*        <b>Rotate</b> Mouse left click.*/}\n        {/*        <b>Pan</b> Mouse right click.*/}\n        {/*        <b>Zoom</b> Mouse wheel.*/}\n        {/*        Holding <b>ctrl</b> reverses the mouse clicks.*/}\n        {/*        <h6>2D controls</h6>*/}\n        {/*        <b>Pan</b> Mouse left click.*/}\n        {/*        <b>Zoom</b> Mouse wheel.*/}\n        {/*    </>*/}\n        {/*}>*/}\n        {/*    <IconButton edge={false} size={'small'} aria-label=\"Help\">*/}\n        {/*        <HelpIcon/>*/}\n        {/*    </IconButton>*/}\n        {/*</Tooltip>*/}\n        {/*<Tooltip title={\"Reset\"}>*/}\n        {/*    <IconButton aria-label=\"Reset\" onClick={props.onHome}>*/}\n        {/*        <svg viewBox=\"0 0 928.6 1000\" height=\"16\" width=\"16\">*/}\n        {/*            <path*/}\n        {/*                d=\"m786 296v-267q0-15-11-26t-25-10h-214v214h-143v-214h-214q-15 0-25 10t-11 26v267q0 1 0 2t0 2l321 264 321-264q1-1 1-4z m124 39l-34-41q-5-5-12-6h-2q-7 0-12 3l-386 322-386-322q-7-4-13-4-7 2-12 7l-35 41q-4 5-3 13t6 12l401 334q18 15 42 15t43-15l136-114v109q0 8 5 13t13 5h107q8 0 13-5t5-13v-227l122-102q5-5 6-12t-4-13z\"*/}\n        {/*                transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n\n        {/*        </svg>*/}\n        {/*    </IconButton>*/}\n        {/*</Tooltip>*/}\n    </>;\n\n}\n\n\n","import {format} from 'd3-format';\n\nexport const numberFormat = format('.1f');\nexport const numberFormat2f = format('.2f');\nexport const intFormat = format(',');\nexport const numberFormat0 = format('.0f');\n","import withStyles from '@mui/styles/withStyles';\nimport {select} from 'd3-selection';\nimport {zoom, zoomIdentity} from 'd3-zoom';\nimport React from 'react';\nimport {getEmbeddingKey} from './actions';\nimport ChartToolbar from './ChartToolbar';\nimport {intFormat, numberFormat2f} from './formatters';\nimport {stripTrailingZeros} from './util';\n\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4),\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0,\n        },\n        position: 'absolute',\n        zIndex: 1,\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    }\n});\n\nexport function createCategoryToStats(trace, selection) {\n    const categoryToStats = {};\n    const categoryToIndices = trace.categoryToIndices;\n    const selectionEmpty = selection.size === 0;\n    for (const category in categoryToIndices) {\n        const indices = categoryToIndices[category];\n        const valueToCount = {};\n        let sum = 0;\n        let n = 0;\n        for (let i = 0, nIndices = indices.length; i < nIndices; i++) {\n            const index = indices[i];\n            if (selectionEmpty || selection.has(index)) {\n                const val = trace.values[index];\n                if (!trace.continuous) {\n                    valueToCount[val] = (valueToCount[val] || 0) + 1;\n                } else {\n                    sum += val;\n                }\n                n++;\n            }\n        }\n        if (!trace.continuous) {\n            let maxCount = 0;\n            let maxValue;\n            for (let value in valueToCount) {\n                const count = valueToCount[value];\n                if (count > maxCount) {\n                    maxCount = count;\n                    maxValue = value;\n                }\n            }\n            categoryToStats[category] = {value: maxValue, n: n};\n        } else {\n            const mean = sum / n;\n            categoryToStats[category] = {value: n === 0 ? undefined : (mean - trace.mean) / trace.stdev, n: n};\n        }\n    }\n    return categoryToStats;\n}\n\nclass MetaEmbedding extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.containerElementRef = React.createRef();\n    }\n\n    onSaveImage = (format) => {\n        let context;\n        let canvas = null;\n        const {chartSize, trace} = this.props;\n        const totalSize = {width: chartSize.width, height: chartSize.height};\n        let name = trace.name;\n        if (name === '__count') {\n            name = 'count';\n        }\n        if (format !== 'svg') {\n            canvas = document.createElement('canvas');\n            canvas.width = totalSize.width * window.devicePixelRatio;\n            canvas.height = totalSize.height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            context.fillStyle = 'white';\n            context.fillRect(0, 0, totalSize.width, totalSize.height);\n            const xml = new XMLSerializer().serializeToString(trace.source);\n            const svg64 = btoa(xml);\n            const b64Start = 'data:image/svg+xml;base64,';\n            const image64 = b64Start + svg64;\n            context.fillStyle = 'black';\n            const img = new Image();\n            img.src = image64;\n            img.onload = function () {\n                context.drawImage(img, 0, 0);\n                canvas.toBlob(blob => {\n                    window.saveAs(blob, name + '.png', true);\n                });\n            };\n        } else {\n            let blob = new Blob([new XMLSerializer().serializeToString(trace.source)], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, name + '.svg');\n        }\n    };\n\n    updateSvg = () => {\n        const containerElement = this.containerElementRef.current;\n        containerElement.innerHTML = '';\n        const svg = this.props.trace.source;\n        svg.setAttribute('width', this.props.chartSize.width);\n        svg.setAttribute('height', this.props.chartSize.height);\n        containerElement.append(svg);\n        let g;\n        let childNodes = svg.childNodes || svg.children;\n        if (childNodes.length > 0 && childNodes[0].nodeName === \"g\" && childNodes[0].getAttribute(\"cirro-zoom\") === 'true') {\n            g = childNodes[0];\n        }\n        if (!g) {\n            const nodeNamesKeep = new Set(['defs', 'metadata', 'style']);\n            g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            g.setAttribute('cirro-zoom', 'true');\n            const svgChildren = svg.childNodes || svg.children;\n            if (!!svgChildren && svgChildren.length > 0) {\n                for (let i = svgChildren.length; i > 0; i--) {\n                    if (!nodeNamesKeep.has(svgChildren[svgChildren.length - i].nodeName)) {\n                        g.appendChild(svgChildren[svgChildren.length - i]);\n                    }\n                }\n            }\n            svg.appendChild(g);\n        }\n\n        function zoomed({transform}) {\n            g.setAttribute(\"transform\", transform);\n        }\n\n\n        const d3Zoom = zoom().scaleExtent([0.1, 10]).on(\"zoom\", zoomed);\n        this.d3Zoom = d3Zoom;\n        select(svg).call(d3Zoom);\n\n    };\n\n    onHome = () => {\n        select(this.props.trace.source).call(this.d3Zoom.transform, zoomIdentity.scale(1));\n    };\n\n    onZoomIn = () => {\n        select(this.props.trace.source).call(this.d3Zoom.scaleBy, 1.5);\n    };\n\n    onZoomOut = () => {\n        select(this.props.trace.source).call(this.d3Zoom.scaleBy, .5);\n    };\n\n    componentDidMount() {\n        this.updateSvg();\n        const containerElement = this.containerElementRef.current;\n        containerElement.addEventListener('mousemove', (e) => {\n            containerElement.style.cursor = null;\n            if (e.target.nodeName === 'path') {\n                const categoryToStats = this.props.trace.categoryToStats;\n                let category = e.target.id;\n                category = category.replaceAll('_', ' '); // FIXME\n                let tooltip = category;\n                if (categoryToStats) {\n                    containerElement.style.cursor = 'pointer';\n                    const stats = categoryToStats[category];\n                    if (stats) {\n                        const fullStats = this.props.trace.fullCategoryToStats[category];\n                        const showFull = stats !== fullStats;\n                        if (this.props.trace.name !== '__count') {\n                            if (!this.props.trace.continuous) {\n                                tooltip += ', mode: ' + stats.value + (showFull ? ' (' + fullStats.value + ')' : '');\n                            } else {\n                                tooltip += ', z-score: ' + stripTrailingZeros(numberFormat2f(stats.value)) + (showFull ? ' (' + stripTrailingZeros(numberFormat2f(fullStats.value)) + ')' : '');\n                            }\n                        }\n                        tooltip += ', # spots: ' + intFormat(stats.n) + (showFull ? ' / ' + intFormat(fullStats.n) : '');\n                    }\n                }\n                this.props.setTooltip(tooltip);\n            } else {\n                this.props.setTooltip('');\n            }\n        });\n        containerElement.addEventListener('mouseleave', (e) => {\n            this.props.setTooltip('');\n        });\n        containerElement.addEventListener('click', (e) => {\n            if (e.target.nodeName === 'path') {\n                const categoryToIndices = this.props.trace.categoryToIndices;\n                let category = e.target.id;\n                category = category.replaceAll('_', ' '); // FIXME\n                const indices = categoryToIndices[category];\n                if (indices && indices.length > 0) {\n                    this.props.onSelected({\n                        name: getEmbeddingKey(this.props.trace.embedding),\n                        clear: !e.metaKey && !e.ctrlKey,\n                        value: {basis: this.props.trace.embedding, indices: new Set(indices), id: category}\n                    });\n                } else {\n                    this.props.onSelected({name: getEmbeddingKey(this.props.trace.embedding)});\n                }\n            } else {\n                this.props.onSelected({name: getEmbeddingKey(this.props.trace.embedding)});\n            }\n        });\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.setTooltip('');\n        if (this.props.trace.source !== prevProps.trace.source) {\n            select(prevProps.trace.source).on(\".zoom\", null);\n            this.updateSvg();\n        } else if (this.props.chartSize.width !== prevProps.chartSize.width || this.props.chartSize.height !== prevProps.chartSize.height) {\n            const svg = this.props.trace.source;\n            svg.setAttribute('width', this.props.chartSize.width);\n            svg.setAttribute('height', this.props.chartSize.height);\n            select(svg).call(this.d3Zoom.transform, zoomIdentity.scale(1));\n        }\n    }\n\n    render() {\n        return <>\n            <div className={this.props.classes.root}>\n                <ChartToolbar\n                    // dragmode={this.props.chartOptions.dragmode}\n                    // editSelection={this.props.chartOptions.editSelection}\n                    // onMoreOptions={this.props.onMoreOptions}\n                    onGallery={this.props.onGallery}\n                    animating={false}\n                    onZoomIn={this.onZoomIn}\n                    onZoomOut={this.onZoomOut}\n                    is3d={false}\n                    onHome={this.onHome}\n                    onSaveImage={this.onSaveImage}\n                    // onDragMode={this.onDragMode}\n                    // onEditSelection={this.onEditSelection}\n                >\n                </ChartToolbar>\n            </div>\n\n            <div style={{\n                display: 'inline-block',\n                // width: this.props.chartSize.width,\n                // height: this.props.chartSize.height\n            }}\n                 ref={this.containerElementRef}>\n            </div>\n        </>;\n    }\n}\n\n\nexport default withStyles(styles)(MetaEmbedding);\n","import {API, getIdToken} from './actions';\nimport {getPassingFilterIndices} from './dataset_filter';\nimport {cacheValues, computeDerivedStats} from './VectorUtil';\n\nfunction reshapeDistributionResult(distribution) {\n    const results = [];\n    distribution.forEach(distributionResult => {\n        const categories = distributionResult.categories;\n        const dimension = distributionResult.name;\n        for (let i = 0; i < distributionResult.values.length; i++) {\n            results.push({\n                dimension: dimension,\n                name: categories[i],\n                feature: distributionResult.values[i].name,\n                mean: distributionResult.values[i].mean,\n                percentExpressed: distributionResult.values[i].percentExpressed\n            });\n        }\n    });\n    return results;\n}\n\nexport class RestDataset {\n\n    /**\n     *\n     * @param id Dataset id\n     * param url Dataset URL\n     * @param local Whether stats should be computed locally or by the server\n     * @returns {Promise<void>}\n     */\n    init(id, url, local = true) {\n        this.id = id;\n        this.local = local;\n        return Promise.resolve();\n    }\n\n    getSelectedIdsPromise(q, cachedData) {\n        q.id = this.id;\n        if (this.local) {\n            if (cachedData['index'] == null) {\n                return this.getDataPromise({values: {dimensions: ['index']}}, cachedData).then(() => {\n                    const selectedIndices = Array.from(getPassingFilterIndices(cachedData, q.filter));\n                    const ids = [];\n                    const index = cachedData['index'];\n                    for (let i = 0, n = selectedIndices.length; i < n; i++) {\n                        ids.push(index[selectedIndices[i]]);\n                    }\n                    return {ids: ids};\n                });\n            }\n        } else {\n            return fetch(API + '/selected_ids',\n                {\n                    body: JSON.stringify(q),\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()}\n                }).then(result => result.json());\n        }\n    }\n\n    getFileUrl(file) {\n        return API + '/file?id=' + this.id + '&file=' + file + '&access_token=' + getIdToken();\n    }\n\n    getJob(id) {\n        return fetch(API + '/job?c=result&id=' + id + '&ds=' + this.id, {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        });\n    }\n\n    getJobParams(id) {\n        return fetch(API + '/job?c=params&id=' + id, {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        });\n    }\n\n    getJobStatus(id) {\n        return fetch(API + '/job?c=status&id=' + id, {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        });\n    }\n\n    getJobs(id) {\n        return fetch(API + '/jobs?id=' + id, {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        });\n    }\n\n    deleteJob(id) {\n        return fetch(API + '/job',\n            {\n                body: JSON.stringify(\n                    {id: id}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()}\n            });\n    }\n\n    getDataPromise(data, cachedData) {\n        data.id = this.id;\n        let dataSend = data;\n        const local = this.local;\n\n        if (local) {\n            dataSend = {};\n            //  ['stats', 'groupedStats', 'embedding', 'selection', 'values'];\n            if (data.embedding || data.values) {\n                dataSend.id = this.id;\n                dataSend.embedding = data.embedding;\n                dataSend.values = data.values;\n            }\n        }\n        let jsonData = JSON.stringify(dataSend);\n        let p = jsonData !== '{}' ? fetch(API + '/data',\n            {\n                body: jsonData,\n                method: 'POST',\n                headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()}\n            }).then(r => r.json()).then(result => {\n            // convert sparse to dense\n            if (result.values) {\n                for (let key in result.values) {\n                    let data = result.values[key];\n                    if (data.indices) {  // sparse\n                        let values = new Float32Array(this.schema.shape[0]);\n                        for (let i = 0, n = data.indices.length; i < n; i++) {\n                            values[data.indices[i]] = data.values[i];\n                        }\n                        result.values[key] = values;\n                    } else if (data.categories) {  // category\n                        let values = new Array(this.schema.shape[0]);\n                        for (let i = 0, n = data.values.length; i < n; i++) {\n                            values[i] = data.categories[data.values[i]];\n                        }\n                        result.values[key] = values;\n                    }\n                }\n            }\n            cacheValues(result, cachedData);\n            return result;\n        }) : Promise.resolve({});\n        return p.then(result => {\n            if (local) {\n                computeDerivedStats(result, data, cachedData);\n            } else {\n                if (result.distribution) {\n                    result.distribution = reshapeDistributionResult(result.distribution);\n                }\n                if (result.selection && result.selection.distribution) {\n                    result.selection.distribution = reshapeDistributionResult(result.selection.distribution);\n                }\n            }\n            return result;\n        });\n    }\n\n    getSchemaPromise() {\n        if (this.schema != null) {\n            return Promise.resolve(this.schema);\n        }\n        return fetch(API + '/schema?id=' + this.id, {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        }).then(result => {\n            this.schema = result;\n            return result;\n        });\n    }\n}\n\n\n\n\n\n","export class StaticServerApi {\n\n    getDatasetsPromise() {\n        return fetch('/datasets.json')\n            .then(response => {\n                const results = response.json();\n                for (let i = 0; i < results.length; i++) {\n                    results[i].access = 'direct';\n                }\n                return results;\n            });\n    }\n\n    getCategoryNamesPromise() {\n        return Promise.resolve([]);\n    }\n\n    getViewsPromise() {\n        return Promise.resolve([]);\n    }\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\nimport {Camera, Color, LinearFilter, Texture, Vector3} from 'three';\nimport {Point2D, Vector} from './types';\n\n\n/** Projects a 3d point into screen space */\nexport function vector3DToScreenCoords(\n    cam: Camera,\n    w: number,\n    h: number,\n    v: Vector3\n): Point2D {\n    let dpr = window.devicePixelRatio;\n    let pv = new Vector3().copy(v).project(cam);\n\n    // The screen-space origin is at the middle of the screen, with +y up.\n    let coords: Point2D = [\n        ((pv.x + 1) / 2) * w * dpr,\n        -(((pv.y - 1) / 2) * h) * dpr,\n    ];\n    return coords;\n}\n\n/** Loads 3 contiguous elements from a packed xyz array into a Vector3. */\nexport function vector3FromPackedArray(\n    a: Float32Array,\n    pointIndex: number\n): Vector3 {\n    const offset = pointIndex * 3;\n    return new Vector3(a[offset], a[offset + 1], a[offset + 2]);\n}\n\n/**\n * Gets the camera-space z coordinates of the nearest and farthest points.\n * Ignores points that are behind the camera.\n */\nexport function getNearFarPoints(\n    worldSpacePoints: Float32Array,\n    cameraPos: Vector3,\n    cameraTarget: Vector3\n): [number, number] {\n    let shortestDist: number = Infinity;\n    let furthestDist: number = 0;\n    const camToTarget = new Vector3().copy(cameraTarget).sub(cameraPos);\n    const camPlaneNormal = new Vector3().copy(camToTarget).normalize();\n    const n = worldSpacePoints.length / 3;\n    let src = 0;\n    let p = new Vector3();\n    let camToPoint = new Vector3();\n    for (let i = 0; i < n; i++) {\n        p.x = worldSpacePoints[src];\n        p.y = worldSpacePoints[src + 1];\n        p.z = worldSpacePoints[src + 2];\n        src += 3;\n\n        camToPoint.copy(p).sub(cameraPos);\n        const dist = camPlaneNormal.dot(camToPoint);\n        if (dist < 0) {\n            continue;\n        }\n        furthestDist = dist > furthestDist ? dist : furthestDist;\n        shortestDist = dist < shortestDist ? dist : shortestDist;\n    }\n    return [shortestDist, furthestDist];\n}\n\nfunction prepareTexture(\n    texture: Texture,\n    needsUpdate = true\n): Texture {\n    texture.needsUpdate = needsUpdate;\n    // Used if the texture isn't a power of 2.\n    texture.minFilter = LinearFilter;\n    texture.generateMipmaps = false;\n    texture.flipY = false;\n    return texture;\n}\n\n/**\n * Generate a texture from a canvas and sets some initial params\n */\nexport function createTextureFromCanvas(\n    image: HTMLCanvasElement\n): Texture {\n    const texture = new Texture(image);\n    return prepareTexture(texture);\n}\n\n/**\n * Generate a texture from an image and sets some initial params\n */\nexport function createTextureFromImage(\n    image: HTMLImageElement,\n    onImageLoad: () => void\n): Texture {\n    const texture = new Texture(image);\n    image.onload = () => {\n        texture.needsUpdate = true;\n        onImageLoad();\n    };\n    return prepareTexture(texture, false);\n}\n\n/** Checks to see if the browser supports webgl. */\nexport function hasWebGLSupport(): boolean {\n    try {\n        let c = document.createElement('canvas');\n        let gl = c.getContext('webgl') || c.getContext('experimental-webgl');\n        return gl != null;\n    } catch (e) {\n        return false;\n    }\n}\n\n/** Compute the extent [minimum, maximum] of an array of numbers. */\nexport function extent(data: Vector) {\n    let minimum = Infinity;\n    let maximum = -Infinity;\n    for (let i = 0; i < data.length; i++) {\n        const item = data[i];\n        if (item < minimum) minimum = item;\n        if (item > maximum) maximum = item;\n    }\n    return [minimum, maximum];\n}\n\n/** Scale a value linearly within a domain and range */\nexport function scaleLinear(value: number, domain: number[], range: number[]) {\n    const domainDifference = domain[1] - domain[0];\n    const rangeDifference = range[1] - range[0];\n\n    const percentDomain = (value - domain[0]) / domainDifference;\n    return percentDomain * rangeDifference + range[0];\n}\n\n/** Scale a value exponentially within a domain and range */\nexport function scaleExponential(\n    value: number,\n    domain: number[],\n    range: number[]\n) {\n    const domainDifference = domain[1] ** Math.E - domain[0] ** Math.E;\n    const rangeDifference = range[1] - range[0];\n\n    const percentDomain = (value ** Math.E - domain[0]) / domainDifference;\n    return percentDomain * rangeDifference + range[0];\n}\n\nexport function packRgbIntoUint8Array(\n    rgbArray: Uint8Array,\n    labelIndex: number,\n    r: number,\n    g: number,\n    b: number\n) {\n    rgbArray[labelIndex * 3] = r;\n    rgbArray[labelIndex * 3 + 1] = g;\n    rgbArray[labelIndex * 3 + 2] = b;\n}\n\nexport function styleRgbFromHexColor(\n    hex: number | string\n): [number, number, number] {\n    const c = new Color(hex as string);\n    return [(c.r * 255) | 0, (c.g * 255) | 0, (c.b * 255) | 0];\n}\n\nconst toPercent = (percent: number) => `${100 * percent}%`;\n\nexport function getDefaultPointInPolylineColor(\n    index: number,\n    totalPoints: number,\n    startHue: number,\n    endHue: number,\n    saturation: number,\n    lightness: number\n): Color {\n    let hue = startHue + ((endHue - startHue) * index) / totalPoints;\n\n    const hsl = `hsl(${hue}, ${toPercent(saturation)}, ${toPercent(lightness)})`;\n    return new Color(hsl);\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\nexport const RGB_NUM_ELEMENTS = 3;\nexport const RGBA_NUM_ELEMENTS = 4;\nexport const XYZ_NUM_ELEMENTS = 3;\nexport const UV_NUM_ELEMENTS = 2;\nexport const INDEX_NUM_ELEMENTS = 1;\nexport const SCATTER_PLOT_CUBE_LENGTH = 2;\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n\n\nimport {Camera, Vector3} from \"three\";\n\n/**\n * LabelRenderParams describes the set of points that should have labels\n * rendered next to them.\n */\nexport class LabelRenderParams {\n  constructor(\n    public pointIndices: Float32Array,\n    public labelStrings: string[],\n    public scaleFactors: Float32Array,\n    public useSceneOpacityFlags: Int8Array,\n    public defaultFontSize: number,\n    public fillColors: Uint8Array,\n    public strokeColors: Uint8Array\n  ) {}\n}\n\n/** Details about the camera projection being used to render the scene. */\nexport enum CameraType {\n  Perspective,\n  Orthographic,\n}\n\n/**\n * RenderContext contains all of the state required to color and render the data\n * set. ScatterPlot passes this to every attached visualizer as part of the\n * render callback.\n * TODO(@charlesnicholson): This should only contain the data that's changed between\n * each frame. Data like colors / scale factors / labels should be reapplied\n * only when they change.\n */\nexport class RenderContext {\n  constructor(\n    public camera: Camera,\n    public cameraType: CameraType,\n    public cameraTarget: Vector3,\n    public screenWidth: number,\n    public screenHeight: number,\n    public nearestCameraSpacePointZ: number,\n    public farthestCameraSpacePointZ: number,\n    public backgroundColor: string,\n    public pointColors: Float32Array,\n    public pointScaleFactors: Float32Array,\n    public labels: LabelRenderParams | undefined,\n    public polylineColors: {[polylineIndex: number]: Float32Array},\n    public polylineOpacities: Float32Array,\n    public polylineWidths: Float32Array\n  ) {}\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n\nimport {\n    BufferAttribute,\n    BufferGeometry,\n    Color,\n    Fog,\n    NormalBlending,\n    PerspectiveCamera,\n    Points,\n    Scene,\n    ShaderChunk,\n    ShaderMaterial,\n    Texture\n} from 'three';\nimport {ScatterPlotVisualizer} from './scatter_plot_visualizer';\nimport {RenderContext} from './render';\nimport {Styles} from './styles';\nimport * as util from './util';\nimport {INDEX_NUM_ELEMENTS, RGBA_NUM_ELEMENTS, XYZ_NUM_ELEMENTS,} from './constants';\n\nexport interface SpriteSheetParams {\n    spritesheetImage: HTMLImageElement | string;\n    spriteDimensions: [number, number];\n    spriteIndices: Float32Array;\n    onImageLoad: () => void;\n}\n\nconst VERTEX_SHADER = `\n    // Index of the specific vertex (passed in as bufferAttribute), and the\n    // variable that will be used to pass it to the fragment shader.\n    attribute float spriteIndex;\n    attribute vec4 color;\n    attribute float scaleFactor;\n\n    varying vec4 vColor;\n\n    uniform bool sizeAttenuation;\n    uniform float pointSize;\n    uniform float zoomFactor;\n    uniform bool zoomFactorSpecified;\n    \n    varying float fogDepth;\n\n    void main() {\n      // Pass index and color values to fragment shader.\n      vColor = color;\n\n      // Transform current vertex by modelViewMatrix (model world position and\n      // camera world position matrix).\n      vec4 cameraSpacePos = modelViewMatrix * vec4(position, 1.0);\n\n      // Project vertex in camera-space to screen coordinates using the camera's\n      // projection matrix.\n      gl_Position = projectionMatrix * cameraSpacePos;\n\n      // Create size attenuation (if we're in 3D mode) by making the size of\n      // each point inversely proportional to its distance to the camera.\n      float outputPointSize = pointSize;\n      if (sizeAttenuation) {\n        outputPointSize = -pointSize / cameraSpacePos.z;\n        fogDepth = pointSize / outputPointSize * 1.2;\n      } else {  // Create size attenuation (if we're in 2D mode)\n        const float PI = 3.1415926535897932384626433832795;\n        const float minScale = 0.1;  // minimum scaling factor\n        const float outSpeed = 2.0;  // shrink speed when zooming out\n        const float outNorm = (1. - minScale) / atan(outSpeed);\n        const float maxScale = 15.0;  // maximum scaling factor\n        const float inSpeed = 0.02;  // enlarge speed when zooming in\n        const float zoomOffset = 0.3;  // offset zoom pivot\n        float m = projectionMatrix[0][0];\n        if (zoomFactorSpecified) {\n          m = zoomFactor;\n        } \n        float zoom = m + zoomOffset;  // zoom pivot\n        float scale = zoom < 1. ? 1. + outNorm * atan(outSpeed * (zoom - 1.)) :\n                      1. + 2. / PI * (maxScale - 1.) * atan(inSpeed * (zoom - 1.));\n        outputPointSize = pointSize * scale;\n      }\n      gl_PointSize = outputPointSize * scaleFactor;\n    }`;\n\nconst FRAGMENT_SHADER_POINT_TEST_CHUNK = `\n    bool point_in_unit_circle(vec2 spriteCoord) {\n      vec2 centerToP = spriteCoord - vec2(0.5, 0.5);\n      return dot(centerToP, centerToP) < (0.5 * 0.5);\n    }\n\n    bool point_in_unit_equilateral_triangle(vec2 spriteCoord) {\n      vec3 v0 = vec3(0, 1, 0);\n      vec3 v1 = vec3(0.5, 0, 0);\n      vec3 v2 = vec3(1, 1, 0);\n      vec3 p = vec3(spriteCoord, 0);\n      float p_in_v0_v1 = cross(v1 - v0, p - v0).z;\n      float p_in_v1_v2 = cross(v2 - v1, p - v1).z;\n      return (p_in_v0_v1 > 0.0) && (p_in_v1_v2 > 0.0);\n    }\n\n    bool point_in_unit_square(vec2 spriteCoord) {\n      return true;\n    }\n  `;\n\nconst FRAGMENT_SHADER = `\n    \n    varying vec4 vColor;\n\n    ${ShaderChunk['common']}\n    ${FRAGMENT_SHADER_POINT_TEST_CHUNK}\n    uniform vec3 fogColor;\n    varying float fogDepth;\n\t\tuniform float fogNear;\n    uniform float fogFar;\n\n    void main() {\n      bool inside = point_in_unit_circle(gl_PointCoord);\n      if (!inside) {\n        discard;\n      }\n      gl_FragColor = vColor;\n      float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n      gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n    }`;\n\n\n/**\n * Uses GL point sprites, either generated or from a spritesheet image to\n * render the dataset.\n */\nexport class ScatterPlotVisualizerSprites implements ScatterPlotVisualizer {\n    public id = 'SPRITES';\n\n    private scene!: Scene;\n    private fog!: Fog;\n    private renderMaterial: ShaderMaterial;\n    private points!: Points;\n    private worldSpacePointPositions = new Float32Array(0);\n    private renderColors = new Float32Array(0);\n    private standinTextureForPoints: Texture;\n    private zoomFactor: number = NaN;\n\n    constructor(private styles: Styles, spriteSheetParams?: SpriteSheetParams) {\n        this.renderMaterial = this.createRenderMaterial();\n        this.standinTextureForPoints = util.createTextureFromCanvas(\n            document.createElement('canvas')\n        );\n    }\n\n    private createUniforms(): any {\n        return {\n            texture: {type: 't'},\n            zoomFactor: {type: 'f'},\n            zoomFactorSpecified: {type: 'bool'},\n            fogColor: {type: 'c'},\n            fogNear: {type: 'f'},\n            fogFar: {type: 'f'},\n            isImage: {type: 'bool'},\n            sizeAttenuation: {type: 'bool'},\n            pointSize: {type: 'f'},\n        };\n    }\n\n    private createRenderMaterial(): ShaderMaterial {\n        const uniforms = this.createUniforms();\n        return new ShaderMaterial({\n            uniforms: uniforms,\n            vertexShader: VERTEX_SHADER,\n            fragmentShader: FRAGMENT_SHADER,\n            transparent: true,\n            fog: true,\n            depthTest: true,\n            depthWrite: true,\n            blending: NormalBlending,\n        });\n    }\n\n\n    private calculatePointSize(sceneIs3D: boolean): number {\n        const n =\n            this.worldSpacePointPositions != null\n                ? this.worldSpacePointPositions.length / XYZ_NUM_ELEMENTS\n                : 1;\n        const SCALE = 200;\n        const LOG_BASE = 8;\n        const DIVISOR = 1.5;\n        // Scale point size inverse-logarithmically to the number of points.\n        const pointSize = SCALE / Math.log(n) / Math.log(LOG_BASE);\n        return sceneIs3D ? pointSize : pointSize / DIVISOR;\n    }\n\n    /**\n     * Create points, set their locations and actually instantiate the\n     * geometry.\n     */\n    private createPointSprites(scene: Scene, positions: Float32Array) {\n        const pointCount =\n            positions != null ? positions.length / XYZ_NUM_ELEMENTS : 0;\n        const geometry = this.createGeometry(pointCount);\n\n        this.fog = new Fog(0xffffff); // unused value, gets overwritten.\n        this.points = new Points(geometry, this.renderMaterial);\n        this.points.frustumCulled = false;\n        scene.add(this.points);\n    }\n\n    /**\n     * Set up buffer attributes to be used for the points/images.\n     */\n    private createGeometry(pointCount: number): BufferGeometry {\n        const n = pointCount;\n\n        const geometry = new BufferGeometry();\n        geometry.setAttribute(\n            'position',\n            new BufferAttribute(new Float32Array([]), XYZ_NUM_ELEMENTS)\n        );\n        geometry.setAttribute(\n            'color',\n            new BufferAttribute(new Float32Array([]), RGBA_NUM_ELEMENTS)\n        );\n        geometry.setAttribute(\n            'scaleFactor',\n            new BufferAttribute(new Float32Array([]), INDEX_NUM_ELEMENTS)\n        );\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n\n    private setFogDistances(\n        sceneIs3D: boolean,\n        nearestPointZ: number,\n        farthestPointZ: number\n    ) {\n        const {threshold, enabled} = this.styles.fog;\n\n        if (sceneIs3D && enabled) {\n            const n = this.worldSpacePointPositions.length / XYZ_NUM_ELEMENTS;\n            this.fog.near = nearestPointZ;\n            // If there are fewer points we want less fog. We do this\n            // by making the \"far\" value (that is, the distance from the camera to the\n            // far edge of the fog) proportional to the number of points.\n            let multiplier = 2 - Math.min(n, threshold) / threshold;\n            this.fog.far = farthestPointZ * multiplier;\n        } else {\n            this.fog.near = Infinity;\n            this.fog.far = Infinity;\n        }\n    }\n\n    dispose() {\n        this.disposeGeometry();\n        this.disposeSpriteSheet();\n    }\n\n    private disposeGeometry() {\n        if (this.points != null) {\n            this.scene.remove(this.points);\n            this.points.geometry.dispose();\n            (this.points as any) = null;\n            (this.worldSpacePointPositions as any) = null;\n        }\n    }\n\n    private disposeSpriteSheet() {\n\n        (this.renderMaterial as any) = null;\n    }\n\n    setScene(scene: Scene) {\n        this.scene = scene;\n    }\n\n\n    onPointPositionsChanged(newPositions: Float32Array) {\n        if (this.points != null) {\n            if (this.worldSpacePointPositions.length !== newPositions.length) {\n                this.disposeGeometry();\n            }\n        }\n\n        this.worldSpacePointPositions = newPositions;\n        if (this.points == null) {\n            this.createPointSprites(this.scene, newPositions);\n        }\n        this.renderMaterial = this.createRenderMaterial();\n\n        const positions = (this.points\n            .geometry as BufferGeometry).getAttribute(\n            'position'\n        ) as BufferAttribute;\n        positions.array = newPositions;\n        positions.count = newPositions.length / XYZ_NUM_ELEMENTS;\n        positions.needsUpdate = true;\n    }\n\n\n    onRender(rc: RenderContext) {\n        const sceneIs3D: boolean = rc.camera instanceof PerspectiveCamera;\n        this.setFogDistances(\n            sceneIs3D,\n            rc.nearestCameraSpacePointZ,\n            rc.farthestCameraSpacePointZ\n        );\n        this.scene.fog = this.fog;\n        this.scene.fog.color = new Color(rc.backgroundColor);\n        this.renderMaterial.uniforms.fogColor.value = this.scene.fog.color;\n        this.renderMaterial.uniforms.fogNear.value = this.fog.near;\n        this.renderMaterial.uniforms.fogFar.value = this.fog.far;\n        this.renderMaterial.uniforms.texture.value = this.standinTextureForPoints;\n        this.renderMaterial.uniforms.sizeAttenuation.value = sceneIs3D;\n        this.renderMaterial.uniforms.zoomFactor.value = this.zoomFactor;\n        this.renderMaterial.uniforms.zoomFactorSpecified.value = !isNaN(this.zoomFactor);\n        this.renderMaterial.uniforms.pointSize.value = this.calculatePointSize(\n            sceneIs3D\n        );\n        this.points.material = this.renderMaterial;\n        let colors = (this.points.geometry as BufferGeometry).getAttribute(\n            'color'\n        ) as BufferAttribute;\n        this.renderColors = rc.pointColors;\n        colors.array = this.renderColors;\n        colors.count = this.renderColors.length / RGBA_NUM_ELEMENTS;\n        colors.needsUpdate = true;\n        let scaleFactors = (this.points\n            .geometry as BufferGeometry).getAttribute(\n            'scaleFactor'\n        ) as BufferAttribute;\n        scaleFactors.array = rc.pointScaleFactors;\n        scaleFactors.count = rc.pointScaleFactors.length / INDEX_NUM_ELEMENTS;\n        scaleFactors.needsUpdate = true;\n    }\n\n    onResize(newWidth: number, newHeight: number) {\n    }\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\nexport type Vector = Float32Array | number[];\nexport type Point2D = [number, number];\nexport type Point3D = [number, number, number];\n\nexport enum InteractionMode {\n    PAN = 'PAN',\n    SELECT = 'SELECT',\n}\n\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\nimport {Styles} from './styles';\nimport simplify from 'simplify-js';\n\n\nexport enum SelectionMode {\n    BOX = 'BOX',\n    LASSO = 'LASSO',\n}\n\nexport interface ScatterBoundingBox {\n    // The bounding box (x, y) position refers to the bottom left corner of the\n    // rect.\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Point {\n    x: number;\n    y: number;\n}\n\n\n/**\n * A class that manages and renders a data selection rectangle.\n */\nexport class ScatterPlotRectangleSelector {\n    private svgElement: SVGElement;\n    private rectElement: SVGRectElement;\n    private lassoElement: SVGPathElement;\n\n    private isMouseDown: boolean;\n    private appendToSelection: boolean;\n    private startCoordinates: [number, number] = [0, 0];\n    private lastBoundingBox!: ScatterBoundingBox;\n    private lassoPath: Point[] = [];\n    private selectionMode: SelectionMode = SelectionMode.BOX;\n    private selectionCallback: (boundingBox: ScatterBoundingBox, appendToSelection: boolean) => void;\n    private lassoCallback: (lassoPoints: Point[], appendToSelection: boolean) => void;\n\n    /**\n     * @param container The container HTML element that the selection SVG rect\n     *     will be a child of.\n     * @param selectionCallback The callback that accepts a bounding box to be\n     *     called when selection changes. Currently, we only call the callback on\n     *     mouseUp.\n     * @param styles The styles object.\n     */\n    constructor(\n        container: HTMLElement,\n        selectionCallback: (boundingBox: ScatterBoundingBox, appendToSelection: boolean) => void,\n        lassoCallback: (lassoPoints: Point[], appendToSelection: boolean) => void,\n        styles: Styles\n    ) {\n        this.svgElement = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'svg'\n        );\n        this.svgElement.style.display = 'none';\n        this.svgElement.style.height = '100%';\n        this.svgElement.style.width = '100%';\n        this.svgElement.style.position = 'absolute';\n        this.svgElement.dataset.testid = 'svg-selection'\n        container.insertAdjacentElement('afterbegin', this.svgElement);\n\n        this.rectElement = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'rect'\n        );\n        this.lassoElement = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'path'\n        );\n\n        [this.rectElement, this.lassoElement].forEach(element => {\n            element.style.pointerEvents = 'none';\n            element.style.stroke = styles.select.stroke;\n            element.style.strokeDasharray = styles.select.strokeDashArray;\n            element.style.strokeWidth = `${styles.select.strokeWidth}`;\n            element.style.fill = styles.select.fill;\n            element.style.fillOpacity = `${styles.select.fillOpacity}`;\n            this.svgElement.appendChild(element);\n        });\n\n        this.selectionCallback = selectionCallback;\n        this.lassoCallback = lassoCallback;\n        this.isMouseDown = false;\n        this.appendToSelection = false;\n    }\n\n    setSelectionMode(selectionMode: SelectionMode) {\n        this.selectionMode = selectionMode;\n    }\n\n    onMouseDown(offsetX: number, offsetY: number, appendToSelection: boolean) {\n        this.isMouseDown = true;\n        this.appendToSelection = appendToSelection;\n        if (this.selectionMode === SelectionMode.BOX) {\n            this.rectElement.style.display = 'block';\n        } else {\n            this.lassoElement.style.display = 'block';\n        }\n        this.svgElement.style.display = 'block';\n\n        if (this.selectionMode === SelectionMode.BOX) {\n            this.startCoordinates = [offsetX, offsetY];\n            this.lastBoundingBox = {\n                x: this.startCoordinates[0],\n                y: this.startCoordinates[1],\n                width: 1,\n                height: 1,\n            };\n        } else {\n            this.lassoPath = [{x: offsetX, y: offsetY}];\n        }\n    }\n\n    onMouseMove(offsetX: number, offsetY: number) {\n        if (!this.isMouseDown) {\n            return;\n        }\n\n        if (this.selectionMode === SelectionMode.BOX) {\n            this.lastBoundingBox.x = Math.min(offsetX, this.startCoordinates[0]);\n            this.lastBoundingBox.y = Math.max(offsetY, this.startCoordinates[1]);\n            this.lastBoundingBox.width =\n                Math.max(offsetX, this.startCoordinates[0]) - this.lastBoundingBox.x;\n            this.lastBoundingBox.height =\n                this.lastBoundingBox.y - Math.min(offsetY, this.startCoordinates[1]);\n\n            this.rectElement.setAttribute('x', '' + this.lastBoundingBox.x);\n            this.rectElement.setAttribute(\n                'y',\n                '' + (this.lastBoundingBox.y - this.lastBoundingBox.height)\n            );\n            this.rectElement.setAttribute('width', '' + this.lastBoundingBox.width);\n            this.rectElement.setAttribute('height', '' + this.lastBoundingBox.height);\n        } else {\n            this.lassoPath.push({x: offsetX, y: offsetY});\n            let points = this.lassoPath.length > 3 ? simplify(this.lassoPath, 0.1) : this.lassoPath;\n            let d = ['M', points[0].x, points[0].y];\n            for (let i = 1; i < points.length; i++) {\n                d.push('L');\n                d.push(points[i].x);\n                d.push(points[i].y)\n            }\n            d.push('Z')\n            this.lassoElement.setAttribute('d', d.join(' '));\n        }\n    }\n\n    onMouseUp() {\n        this.isMouseDown = false;\n        this.svgElement.style.display = 'none';\n        this.rectElement.style.display = 'none';\n        this.lassoElement.style.display = 'none';\n        const rect = {\n            x: this.rectElement.x.baseVal.value,\n            y: this.rectElement.y.baseVal.value,\n            width: this.rectElement.width.baseVal.value,\n            height: this.rectElement.height.baseVal.value\n        };\n        this.lassoElement.setAttribute('d', '');\n        this.rectElement.setAttribute('width', '0');\n        this.rectElement.setAttribute('height', '0');\n        if (this.selectionMode === SelectionMode.BOX) {\n            this.selectionCallback(rect, this.appendToSelection);\n        } else {\n            let points = this.lassoPath.length > 3 ? simplify(this.lassoPath, 0.1) : this.lassoPath;\n            this.lassoCallback(points, this.appendToSelection);\n            this.lassoPath = [];\n        }\n    }\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\n\nimport {CameraType, LabelRenderParams, RenderContext} from './render';\nimport {Styles} from './styles';\nimport {InteractionMode, Point2D, Point3D} from './types';\nimport * as util from './util';\n\nimport {ScatterPlotVisualizer} from './scatter_plot_visualizer';\nimport {Point, ScatterBoundingBox, ScatterPlotRectangleSelector} from './scatter_plot_rectangle_selector';\nimport {\n    AxesHelper,\n    Camera,\n    MOUSE,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    PointLight,\n    Scene,\n    Vector3,\n    WebGLRenderer,\n} from 'three';\n\n/**\n * The length of the cube (diameter of the circumscribing sphere) where all the\n * points live.\n */\nconst CUBE_LENGTH = 2;\nconst MAX_ZOOM = 5 * CUBE_LENGTH;\nconst MIN_ZOOM = 0.025 * CUBE_LENGTH;\n\n// Constants relating to the camera parameters.\nconst PERSP_CAMERA_FOV_VERTICAL = 70;\nconst PERSP_CAMERA_NEAR_CLIP_PLANE = 0.01;\nconst PERSP_CAMERA_FAR_CLIP_PLANE = 100;\nconst ORTHO_CAMERA_FRUSTUM_HALF_EXTENT = 1.2;\n\nconst START_CAMERA_POS_3D = new Vector3(0.45, 0.9, 1.6);\nconst START_CAMERA_TARGET_3D = new Vector3(0, 0, 0);\nconst START_CAMERA_POS_2D = new Vector3(0, 0, 4);\nconst START_CAMERA_TARGET_2D = new Vector3(0, 0, 0);\n\nconst ORBIT_MOUSE_ROTATION_SPEED = 1;\nconst ORBIT_ANIMATION_ROTATION_CYCLE_IN_SECONDS = 7;\nconst ORBIT_ZOOM_SPEED = 1.125;\n\nexport type OnCameraMoveListener = (\n    cameraPosition: Vector3,\n    cameraTarget: Vector3\n) => void;\n\n/** Defines a camera, suitable for serialization. */\nexport interface CameraDef {\n    orthographic: boolean;\n    position: Point3D;\n    target: Point3D;\n    zoom: number;\n}\n\nexport type CameraParams = Partial<Pick<CameraDef, 'position' | 'target' | 'zoom'>>;\n\nexport interface ScatterPlotParams {\n    camera?: CameraParams;\n    onClick?: (point: number | null) => void;\n    onHover?: (point: number | null) => void;\n    onSelect?: (points: number[], boundingBox?: ScatterBoundingBox) => void;\n    selectEnabled?: boolean;\n    styles: Styles;\n    interactive?: boolean;\n}\n\n/**\n * Maintains a js instantiation and context,\n * animation state, and all other logic that's\n * independent of how a 3D scatter plot is actually rendered. Also holds an\n * array of visualizers and dispatches application events to them.\n */\nexport class ScatterPlot {\n    private container: HTMLElement;\n    private styles: Styles;\n    private interactive: boolean = true;\n    private hoverPoint: Point = {x: 0, y: 0};\n    private hoverCallback: (point: Point | null) => void = () => {\n    };\n    private clickCallback: (point: Point | null, appendToSelection: boolean) => void = () => {\n    };\n    private boxCallback: (boundingBox: ScatterBoundingBox, appendToSelection: boolean) => void = () => {\n    };\n    private lassoCallback: (points: Point[], appendToSelection: boolean) => void = () => {\n    };\n\n    private cameraCallback: (eventName: string, cameraPosition: Vector3, cameraTarget: Vector3) => void = () => {\n    };\n    // Array of visualizers\n    private visualizers: ScatterPlotVisualizer[] = [];\n\n    private height = 0;\n    private width = 0;\n    private dimensions = 3;\n\n    private interactionMode = InteractionMode.PAN;\n\n    private renderer: WebGLRenderer;\n\n    private scene: Scene;\n\n    private light: PointLight;\n\n    private camera!: Camera;\n    private orbitAnimationOnNextCameraCreation: boolean = false;\n    private orbitCameraControls: any;\n    private orbitAnimationId: number | null = null;\n\n    private worldSpacePointPositions = new Float32Array(0);\n    private pointColors = new Float32Array(0);\n    private pointScaleFactors = new Float32Array(0);\n    private labels?: LabelRenderParams;\n    private polylineColors: { [polylineIndex: number]: Float32Array } = {};\n    private polylineOpacities = new Float32Array(0);\n    private polylineWidths = new Float32Array(0);\n\n    private selecting = false;\n    private mouseIsDown = false;\n    private isDragSequence = false;\n    private rectangleSelector!: ScatterPlotRectangleSelector;\n\n    constructor(containerElement: HTMLElement, params: ScatterPlotParams, premultipliedAlpha: boolean = false) {\n        this.container = containerElement;\n        this.styles = params.styles;\n        this.interactive = params.interactive || false;\n\n        this.computeLayoutValues();\n\n        this.scene = new Scene();\n        this.renderer = new WebGLRenderer({\n            alpha: true,\n            premultipliedAlpha: premultipliedAlpha,\n            antialias: false,\n        });\n\n\n        this.renderer.setClearColor(this.styles.backgroundColor, 1);\n        this.container.appendChild(this.renderer.domElement);\n        this.light = new PointLight(0xffecbf, 1, 0);\n        this.scene.add(this.light);\n\n        if (params.interactive) {\n            this.rectangleSelector = new ScatterPlotRectangleSelector(\n                this.container,\n                this.selectBoundingBox.bind(this),\n                this.selectLasso.bind(this),\n                this.styles\n            );\n            this.addInteractionListeners();\n        }\n        this.setDimensions(3);\n        this.makeCamera(params.camera);\n        this.resize();\n    }\n\n    private addInteractionListeners() {\n        this.container.addEventListener('pointerout', this.onPointerOut.bind(this));\n        this.container.addEventListener('pointerenter', this.onPointerOut.bind(this));\n        this.container.addEventListener('pointermove', this.onPointerMove.bind(this));\n        this.container.addEventListener('pointerdown', this.onPointerDown.bind(this));\n        this.container.addEventListener('pointerup', this.onPointerUp.bind(this));\n        // this.container.addEventListener('click', this.onClick.bind(this));\n        window.addEventListener('keydown', this.onKeyDown.bind(this), false);\n        window.addEventListener('keyup', this.onKeyUp.bind(this), false);\n    }\n\n    private addCameraControlsEventListeners(cameraControls: any) {\n        if (!this.interactive) {\n            return;\n        }\n        // Start is called when the user stars interacting with\n        // controls.\n        cameraControls.addEventListener('start', () => {\n            this.stopOrbitAnimation();\n            this.cameraCallback('start', this.camera.position, cameraControls.target);\n        });\n\n        // Change is called everytime the user interacts with the controls.\n        cameraControls.addEventListener('change', () => {\n            this.render();\n            this.cameraCallback('change', this.camera.position, cameraControls.target);\n        });\n\n        // End is called when the user stops interacting with the\n        // controls (e.g. on mouse up, after dragging).\n        cameraControls.addEventListener('end', () => {\n            this.cameraCallback('end', this.camera.position, cameraControls.target);\n        });\n    }\n\n    private makeOrbitControls(camera: Camera, cameraIs3D: boolean) {\n        if (this.orbitCameraControls != null) {\n            this.orbitCameraControls.dispose();\n        }\n\n        const occ = new OrbitControls(camera, this.renderer.domElement);\n\n        occ.zoomSpeed = ORBIT_ZOOM_SPEED;\n        occ.enableRotate = cameraIs3D;\n        occ.autoRotate = false;\n        occ.enableKeys = false;\n        occ.rotateSpeed = ORBIT_MOUSE_ROTATION_SPEED;\n        if (cameraIs3D) {\n            occ.mouseButtons.LEFT = MOUSE.LEFT; // Orbit\n            occ.mouseButtons.RIGHT = MOUSE.RIGHT; // Pan\n        } else {\n            occ.mouseButtons.LEFT = MOUSE.RIGHT; // Orbit\n            occ.mouseButtons.RIGHT = MOUSE.LEFT; //Pan\n        }\n        occ.reset();\n\n        this.camera = camera;\n        this.orbitCameraControls = occ;\n\n        this.addCameraControlsEventListeners(this.orbitCameraControls);\n    }\n\n    private makeCamera(cameraParams: CameraParams = {}) {\n        const def = this.makeDefaultCameraDef(this.dimensions, cameraParams);\n        this.recreateCamera(def);\n\n        if (this.dimensions === 3 && this.styles.axesVisible) {\n            this.add3dAxes();\n        } else {\n            this.remove3dAxesFromScene();\n        }\n    }\n\n    private makeCamera3D(cameraDef: CameraDef, w: number, h: number) {\n        let camera: PerspectiveCamera;\n        {\n            const aspectRatio = w / h;\n            camera = new PerspectiveCamera(\n                PERSP_CAMERA_FOV_VERTICAL,\n                aspectRatio,\n                PERSP_CAMERA_NEAR_CLIP_PLANE,\n                PERSP_CAMERA_FAR_CLIP_PLANE\n            );\n            camera.position.set(\n                cameraDef.position[0],\n                cameraDef.position[1],\n                cameraDef.position[2]\n            );\n            const at = new Vector3(\n                cameraDef.target[0],\n                cameraDef.target[1],\n                cameraDef.target[2]\n            );\n            camera.lookAt(at);\n            camera.zoom = cameraDef.zoom;\n            camera.updateProjectionMatrix();\n        }\n        this.camera = camera;\n\n        this.makeOrbitControls(camera, true);\n\n    }\n\n    private makeCamera2D(cameraDef: CameraDef, w: number, h: number) {\n        let camera: OrthographicCamera;\n        const target = new Vector3(\n            cameraDef.target[0],\n            cameraDef.target[1],\n            cameraDef.target[2]\n        );\n        {\n            const aspectRatio = w / h;\n            let left = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n            let right = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n            let bottom = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n            let top = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n            // Scale up the larger of (w, h) to match the aspect ratio.\n            if (aspectRatio > 1) {\n                left *= aspectRatio;\n                right *= aspectRatio;\n            } else {\n                top /= aspectRatio;\n                bottom /= aspectRatio;\n            }\n            camera = new OrthographicCamera(\n                left,\n                right,\n                top,\n                bottom,\n                -1000,\n                1000\n            );\n            camera.position.set(\n                cameraDef.position[0],\n                cameraDef.position[1],\n                cameraDef.position[2]\n            );\n            // The orbit controls pan up operation is tied to the z dimension\n            camera.up = new Vector3(0, 0, 1);\n            camera.lookAt(target);\n            camera.zoom = cameraDef.zoom;\n            camera.updateProjectionMatrix();\n        }\n        this.camera = camera;\n        this.makeOrbitControls(camera, false);\n    }\n\n    private makeDefaultCameraDef(\n        dimensions: number,\n        cameraParams: CameraParams = {}\n    ): CameraDef {\n        const orthographic = dimensions === 2;\n        const position = orthographic ? START_CAMERA_POS_2D : START_CAMERA_POS_3D;\n        const target = orthographic\n            ? START_CAMERA_TARGET_2D\n            : START_CAMERA_TARGET_3D;\n        const def: CameraDef = {\n            orthographic,\n            zoom: 1.0,\n            position: [position.x, position.y, position.z],\n            target: [target.x, target.y, target.z],\n        };\n\n        if (cameraParams.zoom) def.zoom = cameraParams.zoom;\n        if (cameraParams.position) def.position = cameraParams.position;\n        if (cameraParams.target) def.target = cameraParams.target;\n\n        return def;\n    }\n\n    /** Recreate the scatter plot camera from a definition structure. */\n    recreateCamera(cameraDef: CameraDef) {\n        if (cameraDef.orthographic) {\n            this.makeCamera2D(cameraDef, this.width, this.height);\n        } else {\n            this.makeCamera3D(cameraDef, this.width, this.height);\n        }\n        if (this.interactive) {\n            this.orbitCameraControls.minDistance = MIN_ZOOM;\n            this.orbitCameraControls.maxDistance = MAX_ZOOM;\n            this.orbitCameraControls.update();\n            if (this.orbitAnimationOnNextCameraCreation) {\n                this.startOrbitAnimation();\n            }\n        }\n    }\n\n    setInteractionMode(interactionMode: InteractionMode) {\n        this.interactionMode = interactionMode;\n        if (interactionMode === InteractionMode.SELECT) {\n            this.selecting = true;\n            this.container.style.cursor = 'crosshair';\n        } else {\n            this.selecting = false;\n            this.container.style.cursor = 'default';\n        }\n        this.orbitCameraControls.enabled = !this.selecting;\n    }\n\n\n    private onPointerDown(e: PointerEvent) {\n        this.isDragSequence = false;\n        this.mouseIsDown = true;\n        if (this.selecting) {\n            this.orbitCameraControls.enabled = false;\n            this.rectangleSelector.onMouseDown(e.offsetX, e.offsetY, e.ctrlKey || e.metaKey);\n            // this.setNearestPointToMouse(e);\n        } else if (\n            !e.ctrlKey &&\n            this.sceneIs3D() &&\n            this.orbitCameraControls.mouseButtons.ORBIT === MOUSE.RIGHT\n        ) {\n            // The user happened to press the ctrl key when the tab was active,\n            // unpressed the ctrl when the tab was inactive, and now he/she\n            // is back to the projector tab.\n            this.orbitCameraControls.mouseButtons.ORBIT = MOUSE.LEFT;\n            this.orbitCameraControls.mouseButtons.PAN = MOUSE.RIGHT;\n        } else if (\n            e.ctrlKey &&\n            this.sceneIs3D() &&\n            this.orbitCameraControls.mouseButtons.ORBIT === MOUSE.LEFT\n        ) {\n            // Similarly to the situation above.\n            this.orbitCameraControls.mouseButtons.ORBIT = MOUSE.RIGHT;\n            this.orbitCameraControls.mouseButtons.PAN = MOUSE.LEFT;\n        }\n    }\n\n    /** When we stop dragging/zooming, return to normal behavior. */\n    private onPointerUp(e: PointerEvent) {\n        if (this.selecting) {\n            this.rectangleSelector.onMouseUp();\n        } else {\n            this.hoverPoint.x = e.offsetX;\n            this.hoverPoint.y = e.offsetY;\n            this.clickCallback(this.hoverPoint, e.metaKey || e.ctrlKey);\n        }\n        this.mouseIsDown = false;\n    }\n\n\n    /**\n     * When the mouse moves, find the nearest point (if any) and send it to the\n     * hoverlisteners (usually called from embedding.ts)\n     */\n    private onPointerMove(e: PointerEvent) {\n        this.isDragSequence = this.mouseIsDown;\n        // Depending if we're selecting or just navigating, handle accordingly.\n        if (this.selecting && this.mouseIsDown) {\n            this.rectangleSelector.onMouseMove(e.offsetX, e.offsetY);\n            // this.render();\n        } else if (!this.mouseIsDown) {\n            // this.setNearestPointToMouse(e);\n            this.hoverPoint.x = e.offsetX;\n            this.hoverPoint.y = e.offsetY;\n            this.hoverCallback(this.hoverPoint);\n        }\n    }\n\n    private onPointerOut(e: PointerEvent) {\n        if (!this.selecting) {\n            this.hoverCallback(null);\n        }\n    }\n\n\n    /** For using ctrl + left click as right click, and for circle select */\n    private onKeyDown(e: KeyboardEvent) {\n        // If ctrl is pressed, use left click to orbit\n        if (this.sceneIs3D() && e.shiftKey) {\n            this.orbitCameraControls.mouseButtons.ORBIT = MOUSE.RIGHT;\n            this.orbitCameraControls.mouseButtons.PAN = MOUSE.LEFT;\n        }\n\n        // If shift is pressed, start selecting\n        // if (e.keyCode === SHIFT_KEY && this.selectEnabled) {\n        //     this.selecting = true;\n        //     this.container.style.cursor = 'crosshair';\n        // }\n    }\n\n    /** For using ctrl + left click as right click, and for circle select */\n    private onKeyUp(e: KeyboardEvent) {\n        if (this.sceneIs3D() && e.shiftKey) {\n            this.orbitCameraControls.mouseButtons.ORBIT = MOUSE.LEFT;\n            this.orbitCameraControls.mouseButtons.PAN = MOUSE.RIGHT;\n        }\n\n        // If shift is released, stop selecting\n        // if (e.keyCode === SHIFT_KEY && this.selectEnabled) {\n        //     this.selecting = false;\n        //     this.container.style.cursor = 'default';\n        //     this.render();\n        // }\n    }\n\n\n    private selectBoundingBox(boundingBox: ScatterBoundingBox, appendToSelection: boolean) {\n        this.boxCallback(boundingBox, appendToSelection);\n    }\n\n    private selectLasso(points: Point[], appendToSelection: boolean) {\n        this.lassoCallback(points, appendToSelection);\n    }\n\n\n    private computeLayoutValues(): Point2D {\n        this.width = this.container.offsetWidth;\n        this.height = Math.max(1, this.container.offsetHeight);\n        return [this.width, this.height];\n    }\n\n    private sceneIs3D(): boolean {\n        return this.dimensions === 3;\n    }\n\n    private remove3dAxesFromScene(): Object3D | undefined {\n        const axes = this.scene.getObjectByName('axes');\n        if (axes != null) {\n            this.scene.remove(axes);\n        }\n        return axes;\n    }\n\n    private add3dAxes() {\n        const axes = new AxesHelper();\n        axes.name = 'axes';\n        this.scene.add(axes);\n    }\n\n    /** Set 2d vs 3d mode. */\n    setDimensions(dimensions: number) {\n        if (dimensions !== 2 && dimensions !== 3) {\n            throw new RangeError('dimensions must be 2 or 3');\n        }\n\n        if (this.dimensions !== dimensions) {\n            this.dimensions = dimensions;\n            this.makeCamera();\n        }\n    }\n\n    /** Gets the current camera position. */\n    getCameraPosition(): Point3D {\n        const currPos = this.camera.position;\n        return [currPos.x, currPos.y, currPos.z];\n    }\n\n    /** Gets the current camera target. */\n    getCameraTarget(): Point3D {\n        let currTarget = this.orbitCameraControls.target;\n        return [currTarget.x, currTarget.y, currTarget.z];\n    }\n\n    /** Sets up the camera from given position and target coordinates. */\n    setCameraPositionAndTarget(position: Point3D, target: Point3D) {\n        this.stopOrbitAnimation();\n        this.camera.position.set(position[0], position[1], position[2]);\n        this.orbitCameraControls.target.set(target[0], target[1], target[2]);\n        this.orbitCameraControls.update();\n        this.render();\n    }\n\n    /** Starts orbiting the camera around its current lookat target. */\n    startOrbitAnimation() {\n        if (!this.sceneIs3D()) {\n            return;\n        }\n        if (this.orbitAnimationId != null) {\n            this.stopOrbitAnimation();\n        }\n        this.orbitCameraControls.autoRotate = true;\n        this.orbitCameraControls.rotateSpeed = ORBIT_ANIMATION_ROTATION_CYCLE_IN_SECONDS;\n        this.updateOrbitAnimation();\n    }\n\n    orbitIsAnimating() {\n        return this.orbitAnimationId != null;\n    }\n\n    private updateOrbitAnimation() {\n        this.orbitCameraControls.update();\n        this.orbitAnimationId = requestAnimationFrame(() =>\n            this.updateOrbitAnimation()\n        );\n    }\n\n    /** Stops the orbiting animation on the camera. */\n    stopOrbitAnimation() {\n        this.orbitCameraControls.autoRotate = false;\n        this.orbitCameraControls.rotateSpeed = ORBIT_MOUSE_ROTATION_SPEED;\n        if (this.orbitAnimationId != null) {\n            cancelAnimationFrame(this.orbitAnimationId);\n            this.orbitAnimationId = null;\n        }\n    }\n\n    getActiveVisualizers(): ScatterPlotVisualizer[] {\n        return this.visualizers;\n    }\n\n    setActiveVisualizers(visualizers: ScatterPlotVisualizer[]) {\n        this.visualizers.forEach(visualizer => {\n            if (visualizers.indexOf(visualizer) === -1) {\n                visualizer.dispose();\n            }\n        });\n        this.visualizers = visualizers;\n        this.visualizers.forEach(visualizer => {\n            visualizer.setScene(this.scene);\n            visualizer.onResize(this.width, this.height);\n            if (this.worldSpacePointPositions) {\n                visualizer.onPointPositionsChanged(this.worldSpacePointPositions);\n            }\n        });\n    }\n\n    /** Disposes all visualizers attached to this scatter plot. */\n    dispose() {\n        this.visualizers.forEach(v => v.dispose());\n        this.visualizers = [];\n    }\n\n    /** Update scatter plot with a new array of packed xyz point positions. */\n    setPointPositions(worldSpacePointPositions: Float32Array) {\n        this.worldSpacePointPositions = worldSpacePointPositions;\n        this.visualizers.forEach(v =>\n            v.onPointPositionsChanged(worldSpacePointPositions)\n        );\n    }\n\n    render() {\n        {\n            const lightPos = this.camera.position.clone();\n            lightPos.x += 1;\n            lightPos.y += 1;\n            this.light.position.set(lightPos.x, lightPos.y, lightPos.z);\n        }\n\n        const cameraType =\n            this.camera instanceof PerspectiveCamera\n                ? CameraType.Perspective\n                : CameraType.Orthographic;\n\n        let cameraSpacePointExtents: [number, number] = [0, 0];\n        if (this.worldSpacePointPositions != null) {\n            cameraSpacePointExtents = util.getNearFarPoints(\n                this.worldSpacePointPositions,\n                this.camera.position,\n                this.orbitCameraControls.target\n            );\n        }\n\n        const rc = new RenderContext(\n            this.camera,\n            cameraType,\n            this.orbitCameraControls.target,\n            this.width,\n            this.height,\n            cameraSpacePointExtents[0],\n            cameraSpacePointExtents[1],\n            this.styles.backgroundColor,\n            this.pointColors,\n            this.pointScaleFactors,\n            this.labels,\n            this.polylineColors,\n            this.polylineOpacities,\n            this.polylineWidths\n        );\n\n\n        // Render second pass to color buffer, to be displayed on the canvas.\n        this.visualizers.forEach(v => v.onRender(rc));\n\n        this.renderer.setRenderTarget(null);\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    /** Set the colors for every data point. (RGB triplets) */\n    setPointColors(colors: Float32Array) {\n        this.pointColors = colors;\n    }\n\n    /** Set the scale factors for every data point. (scalars) */\n    setPointScaleFactors(scaleFactors: Float32Array) {\n        this.pointScaleFactors = scaleFactors;\n    }\n\n    /** Set the labels to rendered */\n    setLabels(labels: LabelRenderParams) {\n        this.labels = labels;\n    }\n\n    /** Set the colors for every data polyline. (RGB triplets) */\n    setPolylineColors(colors: { [polylineIndex: number]: Float32Array }) {\n        this.polylineColors = colors;\n    }\n\n    setPolylineOpacities(opacities: Float32Array) {\n        this.polylineOpacities = opacities;\n    }\n\n    setPolylineWidths(widths: Float32Array) {\n        this.polylineWidths = widths;\n    }\n\n    resetZoom() {\n        this.recreateCamera(this.makeDefaultCameraDef(this.dimensions));\n        this.render();\n    }\n\n    setDayNightMode(isNight: boolean) {\n        const canvases = this.container.querySelectorAll('canvas');\n        const filterValue = isNight ? 'invert(100%)' : '';\n        for (let i = 0; i < canvases.length; i++) {\n            canvases[i].style.filter = filterValue;\n        }\n    }\n\n    resize(render = true) {\n        const [oldW, oldH] = [this.width, this.height];\n        const [newW, newH] = this.computeLayoutValues();\n\n        if (this.dimensions === 3) {\n            const camera = this.camera as PerspectiveCamera;\n            camera.aspect = newW / newH;\n            camera.updateProjectionMatrix();\n        } else {\n            const camera = this.camera as OrthographicCamera;\n            // Scale the ortho frustum by however much the window changed.\n            const scaleW = newW / oldW;\n            const scaleH = newH / oldH;\n            const newCamHalfWidth = ((camera.right - camera.left) * scaleW) / 2;\n            const newCamHalfHeight = ((camera.top - camera.bottom) * scaleH) / 2;\n            camera.top = newCamHalfHeight;\n            camera.bottom = -newCamHalfHeight;\n            camera.left = -newCamHalfWidth;\n            camera.right = newCamHalfWidth;\n            camera.updateProjectionMatrix();\n        }\n\n        // Accouting for retina displays.\n        const dpr = window.devicePixelRatio || 1;\n        this.renderer.setPixelRatio(dpr);\n        this.renderer.setSize(newW, newH);\n\n\n        this.visualizers.forEach(v => v.onResize(newW, newH));\n\n        if (render) {\n            this.render();\n        }\n    }\n\n    updateFromCameraDef(cameraDef: any) {\n        if (cameraDef.position) {\n            this.camera.position.set(\n                cameraDef.position[0],\n                cameraDef.position[1],\n                cameraDef.position[2]\n            );\n        }\n\n        if (cameraDef.target) {\n            const at = new Vector3(\n                cameraDef.target[0],\n                cameraDef.target[1],\n                cameraDef.target[2]\n            );\n            this.camera.lookAt(at);\n        }\n\n\n        if (cameraDef.zoom != null) {\n            // @ts-ignore\n            this.camera.zoom = cameraDef.zoom;\n        }\n        // @ts-ignore\n        this.camera.updateProjectionMatrix();\n    }\n\n    getCameraDef() {\n        const def: any = {};\n        const pos = this.camera.position;\n        const tgt = this.orbitCameraControls.target;\n        def.position = [pos.x, pos.y, pos.z];\n        def.target = [tgt.x, tgt.y, tgt.z];\n        def.zoom = (this.camera as any).zoom;\n        return def;\n    }\n\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\nexport type Color = string;\n\nexport interface LabelStyles {\n  fontSize: number;\n  scaleDefault: number;\n  scaleLarge: number;\n  fillColorSelected: Color;\n  fillColorHover: Color;\n  strokeColorSelected: Color;\n  strokeColorHover: Color;\n  strokeWidth: number;\n  fillWidth: number;\n}\n\nexport interface Label3DStyles {\n  fontSize: number;\n  scale: number;\n  color: Color;\n  backgroundColor: Color;\n  colorUnselected: Color;\n  colorNoSelection: Color;\n}\n\nexport interface PointStyles {\n  colorUnselected: Color;\n  colorNoSelection: Color;\n  colorSelected: Color;\n  colorHover: Color;\n  scaleDefault: number;\n  scaleSelected: number;\n  scaleHover: number;\n}\n\nexport interface FogStyles {\n  color: Color;\n  enabled: boolean;\n  threshold: number;\n}\n\nexport interface PolylineStyles {\n  startHue: number;\n  endHue: number;\n  saturation: number;\n  lightness: number;\n  defaultOpacity: number;\n  defaultLineWidth: number;\n  selectedOpacity: number;\n  selectedLineWidth: number;\n  deselectedOpacity: number;\n}\n\nexport interface SelectStyles {\n  fill: Color;\n  fillOpacity: number;\n  stroke: Color;\n  strokeWidth: number;\n  strokeDashArray: string;\n}\n\nexport interface SpritesStyles {\n  minPointSize: number;\n  imageSize: number;\n  colorUnselected: Color;\n  colorNoSelection: Color;\n}\n\nexport interface Styles {\n  backgroundColor: Color;\n  axesVisible: boolean;\n  fog: FogStyles;\n  label: LabelStyles;\n  label3D: Label3DStyles;\n  point: PointStyles;\n  polyline: PolylineStyles;\n  select: SelectStyles;\n  sprites: SpritesStyles;\n}\n\nexport interface UserStyles {\n  backgroundColor?: number;\n  axesVisible?: boolean;\n  fog?: Partial<FogStyles>;\n  label?: Partial<LabelStyles>;\n  label3D?: Partial<Label3DStyles>;\n  point?: Partial<PointStyles>;\n  polyline?: Partial<PolylineStyles>;\n  select?: Partial<SelectStyles>;\n  sprites?: Partial<SpritesStyles>;\n}\n\nconst makeDefaultStyles = () => {\n  const defaultStyles: Styles = {\n    backgroundColor: '#ffffff',\n    axesVisible: true,\n\n    fog: {\n      color: '#ffffff',\n      enabled: true,\n      threshold: 5000,\n    },\n\n    label: {\n      fontSize: 10,\n      scaleDefault: 1,\n      scaleLarge: 2,\n      fillColorSelected: '#000000',\n      fillColorHover: '#000000',\n      strokeColorSelected: '#ffffff',\n      strokeColorHover: '#ffffff',\n      strokeWidth: 3,\n      fillWidth: 6,\n    },\n\n    label3D: {\n      fontSize: 80,\n      scale: 2.2, // at 1:1 texel/pixel ratio\n      color: 'black',\n      backgroundColor: '#ffffff',\n      colorUnselected: '#ffffff',\n      colorNoSelection: '#ffffff',\n    },\n\n    point: {\n      colorUnselected: 'rgba(227, 227, 227, 0.7)',\n      colorNoSelection: 'rgba(117, 117, 217, 0.7)',\n      colorSelected: 'rgba(250, 102, 102, 0.7)',\n      colorHover: 'rgba(118, 11, 79, 0.7)',\n      scaleDefault: 1.0,\n      scaleSelected: 1.2,\n      scaleHover: 1.2,\n    },\n\n    polyline: {\n      startHue: 60,\n      endHue: 360,\n      saturation: 1,\n      lightness: 0.3,\n      defaultOpacity: 0.2,\n      defaultLineWidth: 2,\n      selectedOpacity: 0.9,\n      selectedLineWidth: 3,\n      deselectedOpacity: 0.05,\n    },\n\n    select: {\n      fill: '#dddddd',\n      fillOpacity: 0.2,\n      stroke: '#aaaaaa',\n      strokeWidth: 2,\n      strokeDashArray: '10 5',\n    },\n\n    sprites: {\n      minPointSize: 5.0,\n      imageSize: 30,\n      colorUnselected: '#ffffff',\n      colorNoSelection: '#ffffff',\n    },\n  };\n  return defaultStyles;\n};\n\n/**\n * Merge default styles with user-supplied styles object.\n */\nexport function makeStyles(userStyles: UserStyles | undefined) {\n  const defaultStyles = makeDefaultStyles();\n\n  if (userStyles === undefined) {\n    return defaultStyles;\n  }\n  for (let key in defaultStyles) {\n    const _key = key as keyof Styles;\n    if (\n      typeof defaultStyles[_key] === 'object' &&\n      typeof userStyles[_key] === 'object'\n    ) {\n      (defaultStyles[_key] as any) = Object.assign(\n        defaultStyles[_key],\n        userStyles[_key]\n      );\n    } else if (userStyles[_key] !== undefined) {\n      (defaultStyles[_key] as any) = userStyles[_key];\n    }\n  }\n  return defaultStyles;\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n\nimport {ScatterPlotVisualizer} from './scatter_plot_visualizer';\nimport {RenderContext} from './render';\nimport {Styles} from './styles';\nimport * as util from './util';\nimport {RGB_NUM_ELEMENTS, RGBA_NUM_ELEMENTS, UV_NUM_ELEMENTS, XYZ_NUM_ELEMENTS,} from './constants';\nimport {BufferAttribute, BufferGeometry, Color, Mesh, Scene, ShaderMaterial, Texture} from \"three\";\n\nconst MAX_CANVAS_DIMENSION = 8192;\nconst NUM_GLYPHS = 256;\nconst VERTICES_PER_GLYPH = 2 * 3; // 2 triangles, 3 verts per triangle\n\n/**\n * Each label is made up of triangles (two per letter.) Each vertex, then, is\n * the corner of one of these triangles (and thus the corner of a letter\n * rectangle.)\n * Each has the following attributes:\n *    posObj: The (x, y) position of the vertex within the label, where the\n *            bottom center of the word is positioned at (0, 0);\n *    position: The position of the label in worldspace.\n *    vUv: The (u, v) coordinates that index into the glyphs sheet (range 0, 1.)\n *    color: The color of the label (matches the corresponding point's color.)\n *    wordShown: Boolean. Whether or not the label is visible.\n */\n\nconst makeVertexShader = (fontSize: number, scale: number) => `\n      attribute vec2 posObj;\n      attribute vec4 color;\n      varying vec2 vUv;\n      varying vec4 vColor;\n\n      void main() {\n        vUv = uv;\n        vColor = color;\n\n        // Rotate label to face camera.\n\n        vec4 vRight = vec4(\n          modelViewMatrix[0][0], modelViewMatrix[1][0], modelViewMatrix[2][0], 0);\n\n        vec4 vUp = vec4(\n          modelViewMatrix[0][1], modelViewMatrix[1][1], modelViewMatrix[2][1], 0);\n\n        vec4 vAt = -vec4(\n          modelViewMatrix[0][2], modelViewMatrix[1][2], modelViewMatrix[2][2], 0);\n\n        mat4 pointToCamera = mat4(vRight, vUp, vAt, vec4(0, 0, 0, 1));\n\n        vec2 scaledPos = posObj * ${1 / fontSize} * ${scale};\n\n        vec4 posRotated = pointToCamera * vec4(scaledPos, 0, 1);\n        vec4 mvPosition = modelViewMatrix * (vec4(position, 0) + posRotated);\n        gl_Position = projectionMatrix * mvPosition;\n      }`;\n\nconst FRAGMENT_SHADER = `\n      uniform sampler2D texture;\n      // uniform bool picking;\n      varying vec2 vUv;\n      varying vec4 vColor;\n\n      void main() {\n        // if (picking) {\n        //   gl_FragColor = vColor;\n        // } else {\n          vec4 fromTexture = texture2D(texture, vUv);\n          gl_FragColor = vColor * fromTexture;\n        // }\n      }`;\n\ntype GlyphTexture = {\n  texture: Texture;\n  lengths: Float32Array;\n  offsets: Float32Array;\n};\n\n/**\n * Renders the text labels as 3d geometry in the world.\n */\nexport class ScatterPlotVisualizer3DLabels implements ScatterPlotVisualizer {\n  public id = '3D_LABELS';\n\n  private scene!: Scene;\n  private labelStrings: string[] = [];\n  private geometry!: BufferGeometry;\n  private worldSpacePointPositions = new Float32Array(0);\n  // private pickingColors = new Float32Array(0);\n  private renderColors = new Float32Array(0);\n  private material!: ShaderMaterial;\n  private uniforms: any = {};\n  private labelsMesh!: Mesh;\n  private positions!: BufferAttribute;\n  private totalVertexCount = 0;\n  private labelVertexMap: number[][] = [];\n  private glyphTexture!: GlyphTexture;\n\n  constructor(private styles: Styles) {}\n\n  private createGlyphTexture(): GlyphTexture {\n    const {fontSize, backgroundColor, color} = this.styles.label3D;\n    const canvas = document.createElement('canvas');\n    canvas.width = MAX_CANVAS_DIMENSION;\n    canvas.height = fontSize;\n    const ctx = canvas.getContext('2d')!;\n    ctx.font = 'bold ' + fontSize + 'px Roboto Condensed';\n    ctx.textBaseline = 'top';\n    ctx.fillStyle = backgroundColor;\n    // ctx.rect(0, 0, canvas.width, canvas.height);\n    // ctx.fill();\n\n    ctx.fillStyle = color;\n    const spaceOffset = ctx.measureText(' ').width;\n    // For each letter, store length, position at the encoded index.\n    const glyphLengths = new Float32Array(NUM_GLYPHS);\n    const glyphOffset = new Float32Array(NUM_GLYPHS);\n    let leftCoord = 0;\n    for (let i = 0; i < NUM_GLYPHS; i++) {\n      const text = ' ' + String.fromCharCode(i);\n      const textLength = ctx.measureText(text).width;\n      glyphLengths[i] = textLength - spaceOffset;\n      glyphOffset[i] = leftCoord;\n      ctx.fillText(text, leftCoord - spaceOffset, 0);\n      leftCoord += textLength;\n    }\n    const tex = util.createTextureFromCanvas(canvas);\n    return {texture: tex, lengths: glyphLengths, offsets: glyphOffset};\n  }\n\n  private processLabelVerts(pointCount: number) {\n    let numTotalLetters = 0;\n    this.labelVertexMap = [];\n    for (let i = 0; i < pointCount; i++) {\n      const label = this.labelStrings[i];\n      let vertsArray: number[] = [];\n      for (let j = 0; j < label.length; j++) {\n        for (let k = 0; k < VERTICES_PER_GLYPH; k++) {\n          vertsArray.push(numTotalLetters * VERTICES_PER_GLYPH + k);\n        }\n        numTotalLetters++;\n      }\n      this.labelVertexMap.push(vertsArray);\n    }\n    this.totalVertexCount = numTotalLetters * VERTICES_PER_GLYPH;\n  }\n\n  private createColorBuffers(pointCount: number) {\n    // this.pickingColors = new Float32Array(\n    //   this.totalVertexCount * RGB_NUM_ELEMENTS\n    // );\n    this.renderColors = new Float32Array(\n      this.totalVertexCount * RGB_NUM_ELEMENTS\n    );\n    for (let i = 0; i < pointCount; i++) {\n      // const pickingColor = new Color(i);\n      this.labelVertexMap[i].forEach(j => {\n        // this.pickingColors[RGB_NUM_ELEMENTS * j] = pickingColor.r;\n        // this.pickingColors[RGB_NUM_ELEMENTS * j + 1] = pickingColor.g;\n        // this.pickingColors[RGB_NUM_ELEMENTS * j + 2] = pickingColor.b;\n        this.renderColors[RGB_NUM_ELEMENTS * j] = 1.0;\n        this.renderColors[RGB_NUM_ELEMENTS * j + 1] = 1.0;\n        this.renderColors[RGB_NUM_ELEMENTS * j + 2] = 1.0;\n\n      });\n    }\n  }\n\n  private createLabels() {\n    const {fontSize, scale} = this.styles.label3D;\n    if (this.labelStrings == null || this.worldSpacePointPositions == null) {\n      return;\n    }\n    const pointCount = this.worldSpacePointPositions.length / XYZ_NUM_ELEMENTS;\n    if (pointCount !== this.labelStrings.length) {\n      console.log(pointCount + '!=' +  this.labelStrings.length)\n      return;\n    }\n    this.glyphTexture = this.createGlyphTexture();\n\n    this.uniforms = {\n      texture: {type: 't'},\n      picking: {type: 'bool'},\n    };\n\n\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      transparent: true,\n      vertexShader: makeVertexShader(fontSize, scale),\n      fragmentShader: FRAGMENT_SHADER,\n      // polygonOffset: true,\n      // polygonOffsetFactor: -4,\n      depthWrite: false,\n      depthTest:false\n    });\n\n    this.processLabelVerts(pointCount);\n    this.createColorBuffers(pointCount);\n\n    let positionArray = new Float32Array(\n      this.totalVertexCount * XYZ_NUM_ELEMENTS\n    );\n    this.positions = new BufferAttribute(positionArray, XYZ_NUM_ELEMENTS);\n\n    let posArray = new Float32Array(this.totalVertexCount * XYZ_NUM_ELEMENTS);\n    let uvArray = new Float32Array(this.totalVertexCount * UV_NUM_ELEMENTS);\n    let colorsArray = new Float32Array(\n      this.totalVertexCount * RGB_NUM_ELEMENTS\n    );\n    let positionObject = new BufferAttribute(posArray, 2);\n    let uv = new BufferAttribute(uvArray, UV_NUM_ELEMENTS);\n    let colors = new BufferAttribute(colorsArray, RGB_NUM_ELEMENTS);\n\n    this.geometry = new BufferGeometry();\n    this.geometry.setAttribute('posObj', positionObject);\n    this.geometry.setAttribute('position', this.positions);\n    this.geometry.setAttribute('uv', uv);\n    this.geometry.setAttribute('color', colors);\n\n    let lettersSoFar = 0;\n    for (let i = 0; i < pointCount; i++) {\n      const label = this.labelStrings[i];\n      let leftOffset = 0;\n      // Determine length of word in pixels.\n      for (let j = 0; j < label.length; j++) {\n        let letterCode = label.charCodeAt(j);\n        leftOffset += this.glyphTexture.lengths[letterCode];\n      }\n      leftOffset /= -2; // centers text horizontally around the origin\n      for (let j = 0; j < label.length; j++) {\n        let letterCode = label.charCodeAt(j);\n        let letterWidth = this.glyphTexture.lengths[letterCode];\n        let scale = fontSize;\n        let right = (leftOffset + letterWidth) / scale;\n        let left = leftOffset / scale;\n        let top = fontSize / scale;\n\n        // First triangle\n        positionObject.setXY(lettersSoFar * VERTICES_PER_GLYPH + 0, left, 0);\n        positionObject.setXY(lettersSoFar * VERTICES_PER_GLYPH + 1, right, 0);\n        positionObject.setXY(lettersSoFar * VERTICES_PER_GLYPH + 2, left, top);\n\n        // Second triangle\n        positionObject.setXY(lettersSoFar * VERTICES_PER_GLYPH + 3, left, top);\n        positionObject.setXY(lettersSoFar * VERTICES_PER_GLYPH + 4, right, 0);\n        positionObject.setXY(lettersSoFar * VERTICES_PER_GLYPH + 5, right, top);\n\n        // Set UVs based on letter.\n        let uLeft = this.glyphTexture.offsets[letterCode];\n        let uRight = this.glyphTexture.offsets[letterCode] + letterWidth;\n        // Scale so that uvs lie between 0 and 1 on the texture.\n        uLeft /= MAX_CANVAS_DIMENSION;\n        uRight /= MAX_CANVAS_DIMENSION;\n        let vTop = 1;\n        let vBottom = 0;\n        uv.setXY(lettersSoFar * VERTICES_PER_GLYPH + 0, uLeft, vTop);\n        uv.setXY(lettersSoFar * VERTICES_PER_GLYPH + 1, uRight, vTop);\n        uv.setXY(lettersSoFar * VERTICES_PER_GLYPH + 2, uLeft, vBottom);\n        uv.setXY(lettersSoFar * VERTICES_PER_GLYPH + 3, uLeft, vBottom);\n        uv.setXY(lettersSoFar * VERTICES_PER_GLYPH + 4, uRight, vTop);\n        uv.setXY(lettersSoFar * VERTICES_PER_GLYPH + 5, uRight, vBottom);\n\n        lettersSoFar++;\n        leftOffset += letterWidth;\n      }\n    }\n\n    for (let i = 0; i < pointCount; i++) {\n      const p = util.vector3FromPackedArray(this.worldSpacePointPositions, i);\n      this.labelVertexMap[i].forEach(j => {\n        this.positions.setXYZ(j, p.x, p.y, p.z);\n      });\n    }\n\n    this.labelsMesh = new Mesh(this.geometry, this.material);\n    this.labelsMesh.name = '3d_labels_text';\n    this.labelsMesh.renderOrder = 999;\n    this.labelsMesh.frustumCulled = false;\n\n  }\n\n\n  private colorLabels() {\n    if (\n      this.labelStrings == null ||\n      this.geometry == null) {\n      return;\n    }\n    const colors = this.geometry.getAttribute('color') as BufferAttribute;\n    colors.array = this.renderColors;\n\n    const n = this.labelStrings.length;\n    let src = 0;\n    const c = new Color(\n        1,\n        1,\n        1\n    );\n    for (let i = 0; i < n; ++i) {\n      // const c = new Color(\n      //   pointColors[src],\n      //   pointColors[src + 1],\n      //   pointColors[src + 2]\n      // );\n\n      const m = this.labelVertexMap[i].length;\n      for (let j = 0; j < m; ++j) {\n        colors.setXYZ(this.labelVertexMap[i][j], c.r, c.g, c.b);\n      }\n      src += RGBA_NUM_ELEMENTS;\n    }\n    colors.needsUpdate = true;\n  }\n\n  setScene(scene: Scene) {\n    this.scene = scene;\n  }\n\n  dispose() {\n    if (this.labelsMesh) {\n      if (this.scene) {\n        this.scene.remove(this.labelsMesh);\n      }\n      (this.labelsMesh as any) = null;\n    }\n    if (this.geometry) {\n      this.geometry.dispose();\n      (this.geometry as any) = null;\n    }\n    if (this.glyphTexture != null && this.glyphTexture.texture != null) {\n      this.glyphTexture.texture.dispose();\n      (this.glyphTexture as any).texture = null;\n    }\n  }\n\n  onPickingRender(rc: RenderContext) {\n    // if (this.geometry == null) {\n    //   this.createLabels();\n    //   return;\n    // }\n    // this.material.uniforms.texture.value = this.glyphTexture.texture;\n    // this.material.uniforms.picking.value = true;\n    // const colors = this.geometry.getAttribute('color') as BufferAttribute;\n    // colors.array = this.pickingColors;\n    // colors.needsUpdate = true;\n    this.removeMesh();\n  }\n\n  private removeMesh() {\n    this.scene.remove(this.labelsMesh);\n  }\n  onRender(rc: RenderContext) {\n    if (this.geometry == null) {\n      this.createLabels();\n\n    }\n    this.removeMesh();\n    this.scene.add(this.labelsMesh);\n    this.colorLabels();\n    this.material.uniforms.texture.value = this.glyphTexture.texture;\n    this.material.uniforms.picking.value = false;\n    const colors = this.geometry.getAttribute('color') as BufferAttribute;\n    colors.array = this.renderColors;\n    colors.needsUpdate = true;\n  }\n\n  onPointPositionsChanged(newPositions: Float32Array) {\n    // ignore\n  }\n\n  setLabelStrings(labelStrings: string[]) {\n    this.labelStrings = labelStrings;\n    this.dispose();\n  }\n\n  setLabels(labelStrings: string[], positions: Float32Array) {\n    this.labelStrings = labelStrings;\n    this.worldSpacePointPositions = positions;\n    this.dispose();\n  }\n\n  onResize(newWidth: number, newHeight: number) {}\n}\n","/*\n@license\nCopyright 2019 Google LLC. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n\nimport {ScatterPlotVisualizer} from './scatter_plot_visualizer';\nimport {RenderContext} from './render';\nimport {Styles} from \"./styles\";\nimport {Vector3, Scene} from 'three';\n\n/**\n * Creates and maintains a 2d canvas on top of the GL canvas. All labels, when\n * active, are rendered to the 2d canvas as part of the visible render pass.\n */\nexport class ScatterPlotVisualizerSvgLabels\n    implements ScatterPlotVisualizer {\n    public id = 'SVG_LABELS';\n    private worldSpacePointPositions = new Float32Array(0);\n    private labelsActive: boolean = true;\n    private labelStrings: string[] = [];\n    private fillStyle: string = 'black';\n    private shadowColor: string = 'white';\n    private shadowStroke: number = 4;\n    private font: string = 'bold 14px Roboto Condensed';\n    private svgElement: SVGSVGElement;\n\n\n    constructor(container: HTMLElement, private styles: Styles) {\n        this.svgElement = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'svg'\n        );\n\n        this.svgElement.style.height = '100%';\n        this.svgElement.style.width = '100%';\n        this.svgElement.style.position = 'absolute';\n        this.svgElement.style.pointerEvents = 'none';\n        container.insertAdjacentElement('afterbegin', this.svgElement);\n\n\n    }\n\n    private clear() {\n        this.svgElement.innerHTML = '';\n    }\n\n    setLabels(labelStrings: string[], positions: Float32Array) {\n        this.labelStrings = labelStrings;\n        this.worldSpacePointPositions = positions;\n    }\n\n    private createLabel(pos: Vector3, text: string) {\n        const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        label.setAttribute('dominant-baseline', \"middle\");\n        label.setAttribute('text-anchor', \"middle\");\n        label.setAttribute('x', '' + pos.x)\n        label.setAttribute('y', '' + pos.y)\n        label.innerHTML = text;\n        return label;\n    }\n\n    private draw(rc: RenderContext) {\n\n        const camera = rc.camera;\n        const positions = this.worldSpacePointPositions;\n        const pos = new Vector3();\n        const labelStrings = this.labelStrings;\n        // @ts-ignore\n        const widthHalf = (this.svgElement.parentElement.clientWidth) / 2;\n        // @ts-ignore\n        const heightHalf = (this.svgElement.parentElement.clientHeight) / 2;\n        this.svgElement.style.font = this.font;\n        const textShadow = this.shadowColor + ' -2px -2px 0px, ' + this.shadowColor +\n            ' -2px 2px 0px, ' + this.shadowColor + ' 2px -2px 0px, ' + this.shadowColor + ' 2px 2px 0px';\n        for (let i = 0, k = 0; i < labelStrings.length; i++, k += 3) {\n            pos.x = positions[k];\n            pos.y = positions[k + 1];\n            pos.z = positions[k + 2];\n            pos.project(camera);\n            pos.x = (pos.x * widthHalf) + widthHalf;\n            pos.y = -(pos.y * heightHalf) + heightHalf;\n\n            // label.style.textShadow = textShadow; bug on safari\n            const shadowLabel = this.createLabel(pos, labelStrings[i]);\n            shadowLabel.style.fill = 'none';\n            shadowLabel.style.stroke = this.shadowColor;\n            shadowLabel.style.strokeWidth = this.shadowStroke + 'px';\n            this.svgElement.appendChild(shadowLabel);\n\n            const label = this.createLabel(pos, labelStrings[i]);\n            label.style.fill = this.fillStyle;\n            this.svgElement.appendChild(label);\n        }\n    }\n\n    onResize(newWidth: number, newHeight: number) {\n\n    }\n\n    onRender(rc: RenderContext) {\n        this.clear();\n        if (this.labelsActive) {\n            this.draw(rc);\n        }\n\n    }\n\n    dispose() {\n        // this.clear();\n    }\n\n    onPointPositionsChanged(newPositions: Float32Array) { // ignore\n\n    }\n\n    setScene(scene: Scene) {\n    }\n\n    onPickingRender(renderContext: RenderContext) {\n    }\n\n\n}\n","import {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {CANVAS_FONT} from './ChartUtil';\nimport {numberFormat} from './formatters';\n\nexport function drawColorScheme(context, colorScale, textColor = 'black', label = true, width = 150, height = 12) {\n    let domain = colorScale.domain();\n    if (domain[0] === domain[1]) {\n        return;\n    }\n\n    const nsteps = 10;\n    let gradient = context.createLinearGradient(0, 0, width, height);\n    let valueToFraction = scaleLinear().range([0, 1]).domain(domain).clamp(true);\n\n    let value = domain[0];\n    let stepSize = (domain[1] - domain[0]) / nsteps;\n    for (let i = 0; i < nsteps; i++) {\n        if (i === (nsteps - 1)) {\n            value = domain[1];\n        }\n        let f = valueToFraction(value);\n        if (!isNaN(f)) {\n            let color = colorScale(value);\n            gradient.addColorStop(f, color);\n        }\n        value += stepSize;\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    context.strokeStyle = 'LightGrey';\n    context.strokeRect(0, 0, width, height);\n    if (label) {\n\n        context.textBaseline = 'top';\n        context.fillStyle = textColor;\n\n        context.textAlign = 'left';\n        context.fillText(numberFormat(domain[0]), 0, height + 2);\n        context.textAlign = 'right';\n        context.fillText(numberFormat(domain[1]), width, height + 2);\n    }\n}\n\nclass ColorSchemeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n        const textColor = this.props.textColor || 'black';\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n\n        const colorScale = this.props.scale;\n        if (colorScale == null) {\n            return;\n        }\n\n        context.font = CANVAS_FONT;\n        drawColorScheme(context, colorScale, textColor, this.props.label, width, height);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    render() {\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            this.backingScale = window.devicePixelRatio;\n        }\n\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        return (\n            <canvas width={width * this.backingScale} height={height * this.backingScale} ref={this.ref}\n                    style={style}></canvas>\n        );\n\n    }\n}\n\nexport default ColorSchemeLegend;\n\n","import C2S from 'canvas2svg';\nimport {drawColorScheme} from './ColorSchemeLegend';\nimport {drawCategoricalLegend, getCategoricalLegendSize} from './LegendDrawer';\n\nexport const CANVAS_FONT = '12px Roboto Condensed,Helvetica,Arial,sans-serif';\nexport const SVG_FONT = '12px Helvetica,Arial,sans-serif';\n\nexport function saveImage(traceInfo, chartSize, draw, format) {\n\n    let context;\n    let canvas = null;\n    const totalSize = {width: chartSize.width, height: chartSize.height};\n    let name = traceInfo.name;\n    if (name === '__count') {\n        name = 'count';\n    }\n    if (format !== 'svg') {\n        canvas = document.createElement('canvas');\n        canvas.width = 100;\n        canvas.height = 100;\n        context = canvas.getContext('2d');\n    } else {\n        context = new C2S(100, 100);\n    }\n    if (!traceInfo.continuous) {\n        const legendSize = getCategoricalLegendSize(context, name, traceInfo.colorScale.domain());\n        totalSize.width += legendSize.width;\n        totalSize.height = Math.max(legendSize.height, chartSize.height);\n    } else {\n        totalSize.height += 150;\n\n    }\n    if (format === 'svg') {\n        context = new window.C2S(totalSize.width, totalSize.height);\n    } else {\n        canvas.width = totalSize.width * window.devicePixelRatio;\n        canvas.height = totalSize.height * window.devicePixelRatio;\n        context = canvas.getContext('2d');\n        context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, totalSize.width, totalSize.height);\n    }\n\n    draw(context, chartSize, format);\n\n    if (!traceInfo.continuous) {\n        context.translate(chartSize.width, 2);\n        drawCategoricalLegend(context, traceInfo.colorScale, name, traceInfo.colorScale.domain());\n    } else {\n        context.translate(chartSize.width / 2 - 75, chartSize.height + 2);\n        drawColorScheme(context, traceInfo.colorScale);\n    }\n\n    if (format === 'svg') {\n        let svg = context.getSerializedSvg();\n        // let prefix = [];\n        // prefix.push('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n');\n        // prefix.push('<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"' +\n        //     ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n        // svg = prefix.join('') + svg;\n        let blob = new Blob([svg], {\n            type: 'text/plain;charset=utf-8'\n        });\n        window.saveAs(blob, name + '.svg');\n    } else {\n        canvas.toBlob(blob => {\n            window.saveAs(blob, name + '.png', true);\n        });\n    }\n\n}\n","export function getCategoricalLegendSize(context, name, categories) {\n    context.font = '14px Helvetica';\n    let maxWidth = context.measureText(name).width;\n    categories.forEach(value => maxWidth = Math.max(maxWidth, context.measureText(value).width));\n    return {width: maxWidth + 14, height: categories.length * 12 + 4};\n}\n\nexport function drawCategoricalLegend(context, scale, name, categories) {\n\n    context.font = '14px Helvetica';\n    context.textAlign = 'left';\n    context.textBaseline = 'bottom';\n    const height = 12;\n    for (let i = 0; i < categories.length; i++) {\n        const category = categories[i];\n        context.fillStyle = scale(category);\n        context.fillRect(0, i * height, 10, 10);\n        context.fillStyle = 'black';\n        context.fillText('' + category, 12, i * height + height);\n    }\n}\n\n\n","import withStyles from '@mui/styles/withStyles';\nimport {scaleLinear} from 'd3-scale';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {Color, Vector3, Vector4} from 'three';\nimport {getEmbeddingKey} from './actions';\nimport ChartToolbar from './ChartToolbar';\nimport {saveImage} from './ChartUtil';\nimport {numberFormat2f} from './formatters';\nimport {\n    createScatterPlot,\n    getCategoryLabelsPositions,\n    getLabels,\n    POINT_VISUALIZER_ID,\n    updateScatterChart\n} from './ThreeUtil';\nimport {indexSort, isPointInside} from './util';\n\nfunction clamp(x, min_v, max_v) {\n    return Math.min(Math.max(x, min_v), max_v);\n}\n\nfunction smoothstep(edge0, edge1, x) {\n    const t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n    return t * t * (3 - 2 * t);\n}\n\nfunction mix(x, y, a) {\n    return x * (1.0 - a) + y * a;\n}\n\nexport function drawLabels(context, labels, positions, chartOptions, chartSize, camera) {\n    const pos = new Vector3();\n    context.fillStyle = chartOptions.darkMode ? 'white' : 'black';\n    context.strokeStyle = chartOptions.darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n    context.lineWidth = chartOptions.labelStrokeWidth;\n    context.textAlign = 'center';\n    context.textBaseline = \"middle\";\n    const width = chartSize.width;\n    const height = chartSize.height;\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    for (let i = 0, k = 0; i < labels.length; i++, k += 3) {\n        pos.x = positions[k];\n        pos.y = positions[k + 1];\n        pos.z = positions[k + 2];\n        pos.project(camera);\n        pos.x = (pos.x * widthHalf) + widthHalf;\n        pos.y = -(pos.y * heightHalf) + heightHalf;\n\n        context.strokeText(labels[i], pos.x, pos.y);\n        context.fillText(labels[i], pos.x, pos.y);\n    }\n}\n\nexport function getVisualizer(scatterPlot, id) {\n    for (let i = 0; i < scatterPlot.visualizers.length; i++) {\n        if (scatterPlot.visualizers[i].id === id) {\n            return scatterPlot.visualizers[i];\n        }\n    }\n}\n\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4)\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0\n        },\n        '& > .cirro-active': {\n            fill: 'rgb(220, 0, 78)',\n            color: 'rgb(220, 0, 78)'\n        },\n        '& > .cirro-inactive': {\n            fill: 'rgba(0, 0, 0, 0.26)',\n            color: 'rgba(0, 0, 0, 0.26)'\n        },\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden'\n    }\n});\n\nexport function setAxesColors(scatterPlot, darkMode) {\n    const axes = scatterPlot.scene.getObjectByName('axes');\n    if (axes) {\n        axes.setColors(darkMode ? new Color(\"rgb(255, 255, 255)\") : new Color(\"rgb(0, 0, 0)\"));\n    }\n}\n\nfunction ScatterChartThree(props) {\n    const containerElementRef = useRef();\n    const scatterPlotRef = useRef();\n    const lastHoverIndexRef = useRef();\n    const [forceUpdate, setForceUpdate] = useState(false);\n    const previousChartSizeRef = useRef();\n\n    function getSelectedIndex(point) {\n        const trace = props.trace;\n        const positions = trace.positions;\n        const camera = scatterPlotRef.current.camera;\n        const widthHalf = props.chartSize.width / 2;\n        const heightHalf = props.chartSize.height / 2;\n        const pos = new Vector3();\n        let selectedIndex = -1;\n        const tolerance = 2;\n        if (lastHoverIndexRef.current !== -1) {\n            pos.x = positions[lastHoverIndexRef.current * 3];\n            pos.y = positions[lastHoverIndexRef.current * 3 + 1];\n            pos.z = positions[lastHoverIndexRef.current * 3 + 2];\n            pos.project(camera);\n            pos.x = (pos.x * widthHalf) + widthHalf;\n            pos.y = -(pos.y * heightHalf) + heightHalf;\n            if (Math.abs(pos.x - point.x) <= tolerance && Math.abs(pos.y - point.y) <= tolerance) {\n                selectedIndex = lastHoverIndexRef.current;\n            }\n        }\n\n        if (selectedIndex === -1) {\n            // TODO get all hover points\n            for (let i = 0, k = 0, npoints = trace.x.length; i < npoints; i++, k += 3) {\n                pos.x = positions[k];\n                pos.y = positions[k + 1];\n                pos.z = positions[k + 2];\n                pos.project(camera);\n                pos.x = (pos.x * widthHalf) + widthHalf;\n                pos.y = -(pos.y * heightHalf) + heightHalf;\n                if (Math.abs(pos.x - point.x) <= tolerance && Math.abs(pos.y - point.y) <= tolerance) {\n                    selectedIndex = i;\n                    break;\n                }\n            }\n        }\n        lastHoverIndexRef.current = selectedIndex;\n        return selectedIndex;\n    }\n\n    useEffect(() => {\n        init();\n        if (previousChartSizeRef.current !== props.chartSize) {\n            scatterPlotRef.current.resize();\n        }\n        draw();\n        setAxesColors(scatterPlotRef.current, props.chartOptions.darkMode);\n        props.chartOptions.scatterPlot = scatterPlotRef.current;\n        if (props.chartOptions.camera) {\n            scatterPlotRef.current.updateFromCameraDef(props.chartOptions.camera);\n            props.chartOptions.camera = null;\n        }\n        previousChartSizeRef.current = props.chartSize;\n        scatterPlotRef.current.clickCallback = (point, append) => {\n            if (!props.trace.continuous) {\n                const selectedIndex = getSelectedIndex(point);\n                if (selectedIndex !== -1) {\n                    props.handleClick({\n                        name: props.trace.name,\n                        value: props.trace.values[selectedIndex],\n                        shiftKey: false,\n                        metaKey: append\n                    });\n                }\n                lastHoverIndexRef.current = selectedIndex;\n            }\n\n        };\n        scatterPlotRef.current.hoverCallback = (point) => {\n            if (point == null) {\n                props.setTooltip('');\n            } else {\n                const selectedIndex = getSelectedIndex(point);\n                if (selectedIndex !== -1) {\n                    const {trace} = props;\n                    let value = trace.values[selectedIndex];\n                    let categoryObject = props.categoricalNames[trace.name] || {};\n                    let renamedValue = categoryObject[value];\n                    if (renamedValue != null && renamedValue.newValue != null) {\n                        value = renamedValue.newValue;\n                    }\n\n                    if (typeof value === 'number') {\n                        value = numberFormat2f(value);\n                        if (value.endsWith('.00')) {\n                            value = value.substring(0, value.lastIndexOf('.'));\n                        }\n                    }\n                    props.setTooltip('' + value);\n                } else {\n                    props.setTooltip('');\n                }\n            }\n        };\n        scatterPlotRef.current.lassoCallback = (points, appendToSelection) => {\n            const trace = props.trace;\n            const positions = trace.positions;\n            const camera = scatterPlotRef.current.camera;\n            const widthHalf = props.chartSize.width / 2;\n            const heightHalf = props.chartSize.height / 2;\n            const pos = new Vector3();\n            const selectedIndices = new Set();\n\n            for (let i = 0, k = 0, npoints = trace.x.length; i < npoints; i++, k += 3) {\n                pos.x = positions[k];\n                pos.y = positions[k + 1];\n                pos.z = positions[k + 2];\n                pos.project(camera);\n                pos.x = (pos.x * widthHalf) + widthHalf;\n                pos.y = -(pos.y * heightHalf) + heightHalf;\n                if (isPointInside(pos, points)) {\n                    selectedIndices.add(i);\n                }\n            }\n            if (selectedIndices.size === 0) {\n                props.onSelected({name: getEmbeddingKey(trace.embedding)});\n            } else {\n                props.onSelected({\n                    name: getEmbeddingKey(trace.embedding),\n                    clear: !appendToSelection,\n                    value: {basis: trace.embedding, indices: selectedIndices}\n                });\n            }\n        };\n        scatterPlotRef.current.boxCallback = (rect, appendToSelection) => {\n            if (scatterPlotRef.current.interactionMode === 'PAN') {\n                return;\n            }\n            const trace = props.trace;\n            const positions = trace.positions;\n            const camera = scatterPlotRef.current.camera;\n            const widthHalf = props.chartSize.width / 2;\n            const heightHalf = props.chartSize.height / 2;\n            const pos = new Vector3();\n            const selectedIndices = new Set();\n\n            for (let i = 0, k = 0, npoints = trace.x.length; i < npoints; i++, k += 3) {\n                pos.x = positions[k];\n                pos.y = positions[k + 1];\n                pos.z = positions[k + 2];\n                pos.project(camera);\n                pos.x = (pos.x * widthHalf) + widthHalf;\n                pos.y = -(pos.y * heightHalf) + heightHalf;\n                if (pos.x >= rect.x && pos.x <= (rect.x + rect.width) && pos.y >= rect.y && pos.y <= (rect.y + rect.height)) {\n                    selectedIndices.add(i);\n                }\n            }\n\n            if (selectedIndices.size === 0) {\n                props.onSelected({name: getEmbeddingKey(trace.embedding)});\n            } else {\n                props.onSelected({\n                    name: getEmbeddingKey(trace.embedding),\n                    clear: !appendToSelection,\n                    value: {basis: trace.embedding, indices: selectedIndices}\n                });\n            }\n        };\n        scatterPlotRef.current.cameraCallback = (eventName) => {\n            if (scatterPlotRef.current.interactionMode === 'PAN' && props.trace.dimensions === 3) {\n                // repaint gallery charts with same embedding\n                if (eventName === 'end') {\n                    cameraCallback(eventName);\n                }\n            }\n        };\n    });\n\n    useEffect(() => {\n        return () => {\n            scatterPlotRef.current.dispose();\n        };\n    }, []);\n\n    function calculatePointSize(trace) {\n        const n = trace.x.length;\n        const SCALE = 200;\n        const LOG_BASE = 8;\n        const DIVISOR = 1.5;\n        // Scale point size inverse-logarithmically to the number of points.\n        const pointSize = SCALE / Math.log(n) / Math.log(LOG_BASE);\n        return trace.dimensions === 3 ? pointSize : pointSize / DIVISOR;\n    }\n\n    function drawContext(context, chartSize, format) {\n        const {\n            obsCat,\n            cachedData,\n            trace,\n            markerOpacity,\n            unselectedMarkerOpacity,\n            selection,\n            categoricalNames,\n            chartOptions\n        } = props;\n        const scatterPlot = scatterPlotRef.current;\n        const pointSize = calculatePointSize(trace);\n        const scaleFactor = props.pointSize;\n        const PI2 = 2 * Math.PI;\n        const colors = trace.colors;\n        const positions = trace.positions;\n        const camera = scatterPlot.camera;\n        const width = chartSize.width;\n        const height = chartSize.height;\n        if (chartOptions.darkMode) {\n            context.fillStyle = 'black';\n            context.fillRect(0, 0, width, height);\n        }\n        const widthHalf = width / 2;\n        const heightHalf = height / 2;\n        const colorScaleConverter = scaleLinear().domain([0, 1]).range([0, 255]);\n        const npoints = trace.x.length;\n        const is3d = trace.dimensions === 3;\n        let outputPointSize;\n        let fog = scatterPlot.scene.fog;\n        let spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n        // const zoomFactor = getScaleFactor(props.chartSize);\n        // const zoomFactorSpecified = false;\n\n        if (!is3d) {\n            const PI = 3.1415926535897932384626433832795;\n            const minScale = 0.1;  // minimum scaling factor\n            const outSpeed = 2.0;  // shrink speed when zooming out\n            const outNorm = (1. - minScale) / Math.atan(outSpeed);\n            const maxScale = 15.0;  // maximum scaling factor\n            const inSpeed = 0.02;  // enlarge speed when zooming in\n            const zoomOffset = 0.3;  // offset zoom pivot\n            let m = camera.projectionMatrix.elements[0];\n            // if (zoomFactorSpecified) {\n            //     m = zoomFactor;\n            // }\n            let zoom = m + zoomOffset;  // zoom pivot\n            let scale = zoom < 1. ? 1. + outNorm * Math.atan(outSpeed * (zoom - 1.)) :\n                1. + 2. / PI * (maxScale - 1.) * Math.atan(inSpeed * (zoom - 1.));\n            outputPointSize = pointSize * scale;\n        }\n        let gl_PointSize = (outputPointSize * scaleFactor);\n        gl_PointSize /= 2;\n        const pos = new Vector3();\n        let cameraSpacePos = new Vector4();\n        let object = spriteVisualizer.points;\n        let modelViewMatrix = object.modelViewMatrix.clone();\n        modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n        const showFog = chartOptions.showFog;\n        const isSelectionEmpty = selection.size === 0;\n        let pointOrder;\n        if (is3d) {\n            pointOrder = new Uint32Array(npoints);\n            for (let i = 0; i < npoints; i++) {\n                pointOrder[i] = i;\n            }\n        } else {\n            const z = new Float32Array(npoints);\n            for (let i = 0; i < npoints; i++) {\n                z[i] = positions[i * 3 + 2];\n            }\n            pointOrder = indexSort(z, true);\n        }\n        for (let j = 0; j < npoints; j++) {\n            const index = pointOrder[j];\n            const positionIndex = index * 3;\n            const colorIndex = index * 4;\n            const isSelected = isSelectionEmpty || selection.has(index);\n            pos.x = positions[positionIndex];\n            pos.y = positions[positionIndex + 1];\n            pos.z = positions[positionIndex + 2];\n            pos.project(camera);\n\n            let r = colors[colorIndex];\n            let g = colors[colorIndex + 1];\n            let b = colors[colorIndex + 2];\n            let a = isSelected ? markerOpacity : unselectedMarkerOpacity;\n            if (is3d) {\n                cameraSpacePos.x = positions[positionIndex];\n                cameraSpacePos.y = positions[positionIndex + 1];\n                cameraSpacePos.z = positions[positionIndex + 2];\n                cameraSpacePos.w = 1;\n                cameraSpacePos.applyMatrix4(modelViewMatrix);\n                outputPointSize = -pointSize / cameraSpacePos.z;\n                gl_PointSize = (outputPointSize * scaleFactor) / 4;\n                if (showFog) {\n                    const fogDepth = pointSize / outputPointSize * 1.2;\n                    const fogFactor = smoothstep(fog.near, fog.far, fogDepth);\n                    r = mix(r, fog.color.r, fogFactor);\n                    g = mix(g, fog.color.g, fogFactor);\n                    b = mix(b, fog.color.b, fogFactor);\n                }\n            }\n            pos.x = (pos.x * widthHalf) + widthHalf;\n            pos.y = -(pos.y * heightHalf) + heightHalf;\n\n            r = Math.round(colorScaleConverter(r));\n            g = Math.round(colorScaleConverter(g));\n            b = Math.round(colorScaleConverter(b));\n\n            context.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n            context.beginPath();\n            context.arc(pos.x, pos.y, gl_PointSize, 0, PI2);\n            context.closePath();\n            context.fill();\n        }\n        if (obsCat.length > 0) {\n            const labelsPositions = getCategoryLabelsPositions(trace.embedding, obsCat, cachedData);\n            let font = format === 'svg' ? 'serif' : 'Roboto Condensed';\n            context.font = 'bold ' + chartOptions.labelFontSize + 'px ' + font;\n            drawLabels(context, getLabels(obsCat, labelsPositions.labels, categoricalNames), labelsPositions.positions, chartOptions, chartSize, camera);\n        }\n    }\n\n    function onSaveImage(format) {\n        const {trace, chartSize} = props;\n        saveImage(trace, chartSize, drawContext, format);\n    }\n\n\n    function resetCamera() {\n        const scatterPlot = scatterPlotRef.current;\n        scatterPlot.resetZoom();\n        if (scatterPlot.interactionMode === 'PAN' && props.trace.dimensions === 3) {\n            props.onCamera('change', scatterPlot.getCameraDef());\n        }\n    }\n\n\n    function onShowAxis() {\n        const scatterPlot = scatterPlotRef.current;\n        const axes = scatterPlot.scene.getObjectByName('axes');\n        props.chartOptions.showAxis = !props.chartOptions.showAxis;\n        if (axes) {\n            axes.visible = props.chartOptions.showAxis;\n        }\n\n        props.setChartOptions(props.chartOptions);\n    }\n\n    function onShowFog() {\n        const scatterPlot = scatterPlotRef.current;\n        props.chartOptions.showFog = !props.chartOptions.showFog;\n        const spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n        spriteVisualizer.styles.fog.enabled = props.chartOptions.showFog;\n        props.setChartOptions(props.chartOptions);\n    }\n\n\n    function onDragMode(mode) {\n        const scatterPlot = scatterPlotRef.current;\n        if (mode === 'pan') {\n            scatterPlot.setInteractionMode('PAN');\n        } else if (mode === 'select') {\n            scatterPlot.setInteractionMode('SELECT');\n            scatterPlot.rectangleSelector.setSelectionMode('BOX');\n        } else if (mode === 'lasso') {\n            scatterPlot.rectangleSelector.setSelectionMode('LASSO');\n            scatterPlot.setInteractionMode('SELECT');\n        }\n        props.chartOptions.dragmode = mode;\n        props.setChartOptions(props.chartOptions);\n    }\n\n    function onToggleAnimation() {\n        const scatterPlot = scatterPlotRef.current;\n        if (scatterPlot.orbitIsAnimating()) {\n            scatterPlot.stopOrbitAnimation();\n            props.chartOptions.animating = false;\n        } else {\n            scatterPlot.startOrbitAnimation();\n            props.chartOptions.animating = true;\n        }\n        props.setChartOptions(props.chartOptions);\n\n    }\n\n    function cameraCallback(eventName) {\n        props.onCamera(eventName, scatterPlotRef.current.getCameraDef());\n    }\n\n    function init() {\n        if (scatterPlotRef.current == null) {\n            scatterPlotRef.current = createScatterPlot(containerElementRef.current, window.ApplePaySession, true);\n            if (props.chartOptions.dragmode === 'pan') {\n                scatterPlotRef.current.setInteractionMode('PAN');\n            } else if (props.chartOptions.dragmode === 'select') {\n                scatterPlotRef.current.setInteractionMode('SELECT');\n                scatterPlotRef.current.rectangleSelector.setSelectionMode('BOX');\n            } else if (props.chartOptions.dragmode === 'lasso') {\n                scatterPlotRef.current.setInteractionMode('SELECT');\n                scatterPlotRef.current.rectangleSelector.setSelectionMode('LASSO');\n            }\n            const axes = scatterPlotRef.current.scene.getObjectByName('axes');\n            if (axes) {\n                axes.visible = props.chartOptions.showAxis;\n                axes.setColors(props.chartOptions.darkMode ? new Color(\"rgb(255, 255, 255)\") : new Color(\"rgb(0, 0, 0)\"));\n            }\n            getVisualizer(scatterPlotRef.current, POINT_VISUALIZER_ID).styles.fog.enabled = props.chartOptions.showFog;\n            const canvas = containerElementRef.current.querySelector('canvas');\n            canvas.style.outline = '0px';\n            const webglcontextlost = (e) => {\n                console.log('lost webgl context');\n                e.preventDefault();\n                scatterPlotRef.current = null;\n            };\n            const webglcontextrestored = (e) => {\n                console.log('restored webgl context');\n                e.preventDefault();\n                setForceUpdate(!forceUpdate);\n            };\n            canvas.addEventListener('webglcontextlost', webglcontextlost);\n            canvas.addEventListener('webglcontextrestored', webglcontextrestored);\n            return true;\n        }\n        return false;\n\n    }\n\n\n    function draw() {\n        const {\n            obsCat,\n            cachedData,\n            trace,\n            markerOpacity,\n            unselectedMarkerOpacity,\n            selection,\n            pointSize,\n            chartOptions,\n            categoricalNames,\n            unselectedPointSize\n        } = props;\n        updateScatterChart(scatterPlotRef.current, trace, selection, markerOpacity, unselectedMarkerOpacity, pointSize, unselectedPointSize,\n            categoricalNames, chartOptions, obsCat, cachedData);\n    }\n\n\n    return <>\n        <div className={props.classes.root}>\n            <ChartToolbar\n                dragmode={props.chartOptions.dragmode}\n                // editSelection={props.chartOptions.editSelection}\n                onGallery={props.onGallery}\n                animating={props.chartOptions.animating}\n                showFog={props.chartOptions.showFog}\n                onShowFog={onShowFog}\n                is3d={props.trace && props.trace.z != null}\n                toggleAnimation={onToggleAnimation}\n                onSaveImage={onSaveImage}\n                onDragMode={onDragMode}\n                // onCopyImage={onCopyImage}\n                // onEditSelection={onEditSelection}\n                onShowAxis={onShowAxis}\n                onHome={resetCamera}\n                showAxis={props.chartOptions.showAxis}/>\n        </div>\n        <div data-testid=\"scatter-chart-three\" style={{\n            display: 'inline-block',\n            width: props.chartSize.width,\n            height: props.chartSize.height\n        }}\n             ref={containerElementRef}>\n        </div>\n    </>;\n\n}\n\nexport default withStyles(styles)(ScatterChartThree);\n\n\n","import {makeStyles, ScatterPlot, ScatterPlotVisualizerSprites, ScatterPlotVisualizerSvgLabels} from './scatter-gl';\nimport {Color, OrthographicCamera, Vector3} from 'three';\nimport {getEmbeddingKey} from './actions';\nimport {getVisualizer, setAxesColors} from './ScatterChartThree';\nimport {indexSort, randomSeq, rankIndexArray} from './util';\n\nexport const POINT_VISUALIZER_ID = 'SPRITES';\nconst SCATTER_PLOT_CUBE_LENGTH = 2;\nexport const LABELS_VISUALIZER_ID = 'SVG_LABELS';\n\nfunction scaleLinear(value, domain, range) {\n    const domainDifference = domain[1] - domain[0];\n    const rangeDifference = range[1] - range[0];\n    const percentDomain = (value - domain[0]) / domainDifference;\n    return percentDomain * rangeDifference + range[0];\n}\n\n\nexport function getScaleFactor(size) {\n    const ORTHO_CAMERA_FRUSTUM_HALF_EXTENT = 1.2;\n    const aspectRatio = size.width / size.height;\n    let left = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let right = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let bottom = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let top = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    // Scale up the larger of (w, h) to match the aspect ratio.\n    if (aspectRatio > 1) {\n        left *= aspectRatio;\n        right *= aspectRatio;\n    } else {\n        top /= aspectRatio;\n        bottom /= aspectRatio;\n    }\n    let camera = new OrthographicCamera(\n        left,\n        right,\n        top,\n        bottom,\n        -1000,\n        1000\n    );\n    camera.up = new Vector3(0, 0, 1);\n\n    camera.updateProjectionMatrix();\n    return camera.projectionMatrix.elements[0];\n}\n\nexport function createScatterPlot(containerElement, premultipliedAlpha, labels, interactive = true) {\n    const styles = makeStyles();\n    styles.label3D.fontSize = 40;\n\n    const scatterPlot = new ScatterPlot(containerElement, {\n        camera: {},\n        selectEnabled: false,\n        styles: styles,\n        interactive: interactive\n\n    }, premultipliedAlpha); // toDataUrl images are flipped on Safari when premultipliedAlpha is false\n    let visualizers = [new ScatterPlotVisualizerSprites(styles)];\n    if (labels) {\n        // visualizers.push(new ScatterPlotVisualizerCanvasLabels(containerElement, styles));\n        visualizers.push(new ScatterPlotVisualizerSvgLabels(containerElement, styles));\n    }\n    scatterPlot.setActiveVisualizers(visualizers);\n    return scatterPlot;\n}\n\n\nexport function getPositions(trace) {\n    let xExtent = [Infinity, -Infinity];\n    let yExtent = [Infinity, -Infinity];\n    let zExtent = [Infinity, -Infinity];\n    const npoints = trace.x.length;\n    const is3d = trace.z != null;\n    let ranks;\n    if (!is3d) {\n        ranks = !trace.isCategorical ? rankIndexArray(indexSort(trace.values, true)) : randomSeq(trace.values.length, 1);\n        // ranks go from 1 to values.length. Higher rank means higher value.\n        zExtent[0] = 0;\n        zExtent[1] = 1;\n    }\n    // Determine max and min of each axis of our data.\n    for (let i = 0; i < npoints; i++) {\n        const x = trace.x[i];\n        if (x < xExtent[0]) {\n            xExtent[0] = x;\n        }\n        if (x > xExtent[1]) {\n            xExtent[1] = x;\n        }\n\n        const y = trace.y[i];\n        if (y < yExtent[0]) {\n            yExtent[0] = y;\n        }\n        if (y > yExtent[1]) {\n            yExtent[1] = y;\n        }\n        if (is3d) {\n            const z = trace.z[i];\n            if (z < zExtent[0]) {\n                zExtent[0] = z;\n            }\n            if (z > zExtent[1]) {\n                zExtent[1] = z;\n            }\n        }\n    }\n\n    const getRange = (extent) => Math.abs(extent[1] - extent[0]);\n    const xRange = getRange(xExtent);\n    const yRange = getRange(yExtent);\n    const zRange = getRange(zExtent);\n    const maxRange = Math.max(xRange, yRange, zRange);\n    const halfCube = SCATTER_PLOT_CUBE_LENGTH / 2;\n    const makeScaleRange = (range, base) => [\n        -base * (range / maxRange),\n        base * (range / maxRange)\n    ];\n    const xScale = makeScaleRange(xRange, halfCube);\n    const yScale = makeScaleRange(yRange, halfCube);\n    const zScale = makeScaleRange(zRange, halfCube);\n    const positions = new Float32Array(npoints * 3);\n    let dst = 0;\n\n    for (let i = 0; i < npoints; i++) {\n        positions[dst++] = scaleLinear(trace.x[i], xExtent, xScale);\n        positions[dst++] = scaleLinear(trace.y[i], yExtent, yScale);\n        positions[dst++] = scaleLinear(is3d ? trace.z[i] : ranks[i] / (ranks.length + 1), zExtent, zScale);\n    }\n\n    return positions;\n\n}\n\nexport function getCategoryLabelsPositions(embedding, obsKeys, cachedData) {\n    const obsArrayOfArrays = [];\n    obsKeys.forEach(key => {\n        obsArrayOfArrays.push(cachedData[key]);\n    });\n    const embeddingKey = getEmbeddingKey(embedding);\n    const coordinates = cachedData[embeddingKey];\n    if (coordinates == null) {\n        throw new Error('Coordinates not found for ' + embedding.name);\n    }\n    const x = coordinates[embedding.name + '_1'];\n    const y = coordinates[embedding.name + '_2'];\n    const z = coordinates[embedding.name + '_3'];\n    const is3d = z != null;\n    const valueToCoords = {};\n    let ncategories = 0;\n    const isSpatial = embedding.spatial != null;\n    const npoints = x.length;\n    const nobs = obsKeys.length;\n    for (let i = 0; i < npoints; i++) {\n        let values = [];\n        for (let j = 0; j < nobs; j++) {\n            values.push(obsArrayOfArrays[j][i]);\n        }\n\n        const key = values.join(',');\n        let p = valueToCoords[key];\n        if (p === undefined) {\n            p = {x: [], y: [], z: [], array: values};\n            valueToCoords[key] = p;\n            ncategories++;\n        }\n        p.count++;\n        p.x.push(x[i]);\n        p.y.push(y[i]);\n        if (is3d) {\n            p.z.push(z[i]);\n        }\n    }\n\n    let xScale, yScale, zScale, xExtent, yExtent, zExtent;\n    if (!isSpatial) {\n        const getRange = (extent) => Math.abs(extent[1] - extent[0]);\n        xExtent = [Infinity, -Infinity];\n        yExtent = [Infinity, -Infinity];\n        zExtent = is3d ? [Infinity, -Infinity] : [0, 1];\n        // Determine max and min of each axis of our data.\n        for (let i = 0; i < npoints; i++) {\n            let value = x[i];\n            if (value < xExtent[0]) {\n                xExtent[0] = value;\n            }\n            if (value > xExtent[1]) {\n                xExtent[1] = value;\n            }\n\n            value = y[i];\n            if (value < yExtent[0]) {\n                yExtent[0] = value;\n            }\n            if (value > yExtent[1]) {\n                yExtent[1] = value;\n            }\n            if (is3d) {\n                value = z[i];\n                if (value < zExtent[0]) {\n                    zExtent[0] = value;\n                }\n                if (value > zExtent[1]) {\n                    zExtent[1] = value;\n                }\n            }\n        }\n        const xRange = getRange(xExtent);\n        const yRange = getRange(yExtent);\n        const zRange = getRange(zExtent);\n        const maxRange = Math.max(xRange, yRange, zRange);\n        const halfCube = SCATTER_PLOT_CUBE_LENGTH / 2;\n        const makeScaleRange = (range, base) => [\n            -base * (range / maxRange),\n            base * (range / maxRange)\n        ];\n        xScale = makeScaleRange(xRange, halfCube);\n        yScale = makeScaleRange(yRange, halfCube);\n        zScale = makeScaleRange(zRange, halfCube);\n    }\n\n    let labelValues = [];\n    let labelPositions = new Float32Array(ncategories * 3);\n    let positionIndex = 0;\n    for (let key in valueToCoords) {\n        let p = valueToCoords[key];\n        labelValues.push(p.array);\n        p.x.sort((a, b) => a - b);\n        p.y.sort((a, b) => a - b);\n        p.z.sort((a, b) => a - b);\n        const mid = p.x.length / 2;\n\n        let xmedian = mid % 1 ? p.x[mid - 0.5] : (p.x[mid - 1] + p.x[mid]) / 2;\n        let ymedian = mid % 1 ? p.y[mid - 0.5] : (p.y[mid - 1] + p.y[mid]) / 2;\n        let zmedian = mid % 1 ? p.z[mid - 0.5] : (p.z[mid - 1] + p.z[mid]) / 2;\n\n        if (!isSpatial) {\n            xmedian = scaleLinear(xmedian, xExtent, xScale);\n            ymedian = scaleLinear(ymedian, yExtent, yScale);\n            zmedian = scaleLinear(zmedian, zExtent, zScale);\n        }\n        labelPositions[positionIndex] = xmedian;\n        labelPositions[positionIndex + 1] = ymedian;\n        labelPositions[positionIndex + 2] = is3d ? zmedian : 0;\n        positionIndex += 3;\n    }\n    return {labels: labelValues, positions: labelPositions};\n}\n\nexport function updateScatterChart(scatterPlot, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, pointSize, unselectedPointSize, categoricalNames = {}, chartOptions, obsCatKeys, cachedData, cameraDef) {\n    const is3d = traceInfo.z != null;\n    const colors = traceInfo.colors;\n    let positions = traceInfo.positions;\n\n    const npoints = traceInfo.x.length;\n    const isSelectionEmpty = selection.size === 0;\n    const updateZ = !isSelectionEmpty && !is3d;\n    if (updateZ) {\n        positions = positions.slice();\n    }\n    const scale = new Float32Array(traceInfo.x.length);\n    scale.fill(pointSize);\n    for (let i = 0, j = 3, k = 2; i < npoints; i++, j += 4, k += 3) {\n        const isSelected = isSelectionEmpty || selection.has(i);\n        colors[j] = isSelected ? markerOpacity : unselectedMarkerOpacity;\n        if (!isSelected) {\n            scale[i] = unselectedPointSize;\n        }\n        if (updateZ && !isSelected) {\n            positions[k] = -1;\n        }\n    }\n    scatterPlot.scene.background = chartOptions.darkMode ? new Color(\"rgb(0, 0, 0)\") : null;\n    scatterPlot.setDimensions(traceInfo.dimensions);\n    if (cameraDef) {\n        scatterPlot.updateFromCameraDef(cameraDef);\n    }\n    let spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n    spriteVisualizer.styles.fog.enabled = chartOptions.showFog;\n    const axes = scatterPlot.scene.getObjectByName('axes');\n    if (axes) {\n        setAxesColors(scatterPlot, chartOptions.darkMode);\n        axes.visible = chartOptions.showAxis;\n    }\n    scatterPlot.setPointColors(colors);\n    scatterPlot.setPointPositions(positions);\n    scatterPlot.setPointScaleFactors(scale);\n\n    const showLabels = obsCatKeys.length > 0;\n    const labelsVisualizer = getVisualizer(scatterPlot, LABELS_VISUALIZER_ID);\n    if (labelsVisualizer) {\n        labelsVisualizer.labelsActive = showLabels;\n        if (showLabels) {\n            const labelKey = getEmbeddingKey(traceInfo.embedding) + '_' + obsCatKeys.join(',');\n            let labelsPositions = cachedData[labelKey];\n            if (labelsPositions == null) {\n                labelsPositions = getCategoryLabelsPositions(traceInfo.embedding, obsCatKeys, cachedData);\n                cachedData[labelKey] = labelsPositions;\n            }\n            labelsVisualizer.fillStyle = chartOptions.darkMode ? 'white' : 'black';\n            labelsVisualizer.shadowColor = chartOptions.darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n            labelsVisualizer.shadowStroke = chartOptions.labelStrokeWidth;\n            labelsVisualizer.font = 'bold ' + chartOptions.labelFontSize + 'px Roboto Condensed';\n            const labels = getLabels(obsCatKeys, labelsPositions.labels, categoricalNames);\n\n            labelsVisualizer.setLabels(labels, labelsPositions.positions);\n        }\n    }\n\n    scatterPlot.render();\n}\n\nexport function getLabels(obsCat, labels, categoricalNames) {\n    let labelStrings = [];\n    let renamedCategories = [];\n    obsCat.forEach(key => renamedCategories.push(categoricalNames[key] || {}));\n    for (let i = 0; i < labels.length; i++) {\n        let array = labels[i];\n        let value = [];\n        for (let j = 0; j < array.length; j++) {\n            const renamedValue = renamedCategories[j][array[j]];\n            value.push(renamedValue != null && renamedValue.newValue != null ? renamedValue.newValue : array[j]);\n        }\n        labelStrings.push(value.join(','));\n    }\n    return labelStrings;\n}\n","import {Checkbox, Table, TableBody, TableCell, TableHead, TableRow} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport withStyles from '@mui/styles/withStyles';\nimport React from 'react';\n\nconst styles = theme => ({\n    dot: {\n        borderRadius: '50%',\n        display: 'inlineBlock',\n        border: '1px solid lightgray'\n    },\n    table: {\n        borderCollapse: 'collapse',\n        position: 'relative',\n        width: 'unset'\n    },\n    tr: {\n        cursor: 'pointer'\n    },\n    deleteTr: {\n        cursor: 'pointer',\n        '& span': {\n            display: 'none'\n        },\n        '&:hover span': {\n            display: 'block',\n            position: 'absolute',\n            right: 0,\n            top: 0\n        }\n    },\n    rotateHeader: {\n        top: 0,\n        padding: 1,\n        background: 'transparent',\n        whiteSpace: 'nowrap'\n    },\n    checkbox: {\n        padding: 0\n    },\n    rotateHeaderDiv: {\n        /* place div at bottom left of the th parent */\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        /* Make sure short labels still meet the corner of the parent otherwise you'll get a gap */\n        textAlign: 'left',\n        /* Move the top left corner of the span's bottom-border to line up with the top left corner of the td's border-right border so that the border corners are matched\n         * Rotate 315 (-45) degrees about matched border corners */\n        transform: 'translate(calc(50%),0) rotate(315deg)',\n        transformOrigin: '0% calc(50%)',\n        width: '100%'\n    },\n    rotateHeaderSpan: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        pointerEvents: 'none',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    td: {\n        padding: 1,\n        whiteSpace: 'nowrap',\n        width: 27,\n        minWidth: 27,\n        maxWidth: 27\n    },\n    rowHeader: {\n        padding: 1,\n        whiteSpace: 'nowrap'\n    }\n});\n\n\nfunction DotPlotTable(props) {\n    const {\n        classes,\n        onRowClick,\n        onMouseMove,\n        onMouseOut,\n        toggleAll,\n        rows,\n        columns,\n        isRowSelected,\n        rowStart,\n        columnStart,\n        getRowId,\n        getColor,\n        getSize,\n        getTooltip,\n        sizeScale,\n        valueScale,\n        colorScale,\n        headerWidth,\n        rotateHeaders\n    } = props;\n\n    let selectAllChecked = true;\n    const maxSize = Math.max(sizeScale.range()[0], sizeScale.range()[1]);\n    for (let i = 0; i < rows.length; i++) {\n        const selected = isRowSelected(rows[i]);\n        if (!selected) {\n            selectAllChecked = false;\n            break;\n        }\n    }\n\n    return <div data-testid={'dot-plot-table'}>\n        <Box color=\"text.primary\">\n            <div>\n                {rows.length > 0 &&\n                <Table onMouseMove={onMouseMove} onMouseOut={onMouseOut} stickyHeader={true}\n                       className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.rowHeader} component=\"th\"\n                                       style={{backgroundColor: 'unset', textAlign: 'left'}}\n                                       key={'__id'}><Checkbox\n                                onClick={(event) => toggleAll(event, selectAllChecked)}\n                                className={classes.checkbox}\n                                checked={selectAllChecked}/></TableCell>\n                            {columns.map(column => {\n                                if (rotateHeaders) {\n                                    return <TableCell\n                                        title={column}\n                                        className={classes.rotateHeader}\n                                        key={column}>\n                                        <div className={classes.rotateHeaderDiv}><span\n                                            style={{width: headerWidth}}\n                                            className={classes.rotateHeaderSpan}>{column}</span></div>\n                                    </TableCell>;\n                                } else {\n                                    return <TableCell style={{backgroundColor: 'unset'}}\n                                                      className={classes.td}\n                                                      key={column}>{column}</TableCell>;\n                                }\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row, rowIndex) => {\n                            rowStart(row, rowIndex);\n                            const id = getRowId(row);\n                            const selected = isRowSelected(row);\n                            return <TableRow\n                                className={classes.tr}\n                                hover\n                                onClick={(event) => onRowClick(event, row)}\n                                role=\"checkbox\"\n                                tabIndex={-1}\n                                key={row}\n                            ><TableCell className={classes.rowHeader} component=\"th\"\n                                        key={'id'}><Checkbox className={classes.checkbox}\n                                                             checked={selected}/>{id}</TableCell>\n                                {columns.map((column, columnIndex) => {\n                                    columnStart(column, columnIndex);\n                                    const colorValue = getColor(row, column);\n                                    const sizeValue = getSize(row, column);\n                                    const title = getTooltip(row, column);\n                                    if (colorValue == null || isNaN(colorValue)) {\n                                        return <TableCell className={classes.td} data-title={title}\n                                                          key={column}/>;\n                                    }\n                                    const diameter = sizeScale(sizeValue);\n                                    const colorValueScaled = valueScale ? valueScale(colorValue) : colorValue;\n                                    const backgroundColor = colorScale(colorValueScaled);\n                                    return <TableCell className={classes.td} data-title={title}\n                                                      key={column}>\n                                        <div className={classes.dot}\n                                             style={{\n                                                 pointerEvents: 'none',\n                                                 marginLeft: (maxSize - diameter) / 2,\n                                                 width: diameter,\n                                                 height: diameter,\n                                                 backgroundColor: backgroundColor\n                                             }}></div>\n                                    </TableCell>;\n                                })}\n                            </TableRow>;\n                        })}\n                    </TableBody>\n                </Table>}\n            </div>\n        </Box>\n    </div>;\n}\n\nexport default withStyles(styles)((DotPlotTable));\n\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setSearchTokensDirectly} from './actions';\nimport {createFilterFunction} from './dataset_filter';\nimport {intFormat} from './formatters';\nimport {\n    createColorScale,\n    FEATURE_TYPE,\n    getInterpolator,\n    INTERPOLATOR_SCALING_MIN_MAX_CATEGORY,\n    INTERPOLATOR_SCALING_MIN_MAX_FEATURE,\n    INTERPOLATOR_SCALING_NONE,\n    NATSORT,\n    scaleConstantRange\n} from './util';\n\nimport DotPlotTable from './DotPlotTable';\nimport {Tooltip} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\n\n\nconst DEFAULT_DE_INTERPOLATOR = 'RdBu';\n\n\nexport function updateJob(jobResult) {\n    if (jobResult.options === undefined) {\n        jobResult.options = {};\n    }\n    if (jobResult.interpolator === undefined) {\n        jobResult.interpolator = {\n            name: DEFAULT_DE_INTERPOLATOR,\n            value: getInterpolator(DEFAULT_DE_INTERPOLATOR),\n            reversed: true,\n            scale: INTERPOLATOR_SCALING_NONE\n        };\n    }\n    const groups = jobResult.groups;\n    const data = jobResult.data;\n\n    if (jobResult.columns === undefined) {\n        const indices = new Array(groups.length);\n        for (let i = 0, n = jobResult.groups.length; i < n; i++) {\n            indices[i] = i;\n        }\n        jobResult.columns = indices;\n        jobResult.columns.sort((a, b) => {\n            return NATSORT(jobResult.groups[a], jobResult.groups[b]);\n        });\n    }\n\n    if (jobResult.rowFilters === undefined) {\n        const filters = [];\n        jobResult.fields.forEach(field => {\n            const fieldLowercase = field.toLowerCase();\n            filters.push([field, fieldLowercase.indexOf('pval') !== -1 || fieldLowercase.indexOf('p_val') !== -1 || fieldLowercase.indexOf('qval') !== -1 || fieldLowercase.indexOf('q_val') !== -1 || field.indexOf('fdr') !== -1 ? '<' : '>', NaN, '']);\n        });\n\n        jobResult.rowFilters = filters;\n    }\n    if (jobResult.ntop === undefined) {\n        const ntop = Math.min(10, jobResult.data.length);\n        jobResult.ntop = ntop;\n        jobResult.ntopUI = ntop;\n    }\n    if (jobResult.sortedRows === undefined) {\n        const indices = new Array(data.length);\n        for (let i = 0, n = data.length; i < n; i++) {\n            indices[i] = i;\n        }\n        jobResult.sortedRows = [];\n        for (let i = 0, n = groups.length; i < n; i++) {\n            jobResult.sortedRows.push(indices);\n        }\n    }\n    if (jobResult.byAscending === undefined) {\n        jobResult.byAscending = false;\n    }\n    if (jobResult.by === undefined) {\n        jobResult.by = jobResult.fields[0];\n        for (let i = 0; i < jobResult.fields.length; i++) {\n            if (jobResult.fields[i].toLowerCase().indexOf('score') !== -1) {\n                jobResult.by = jobResult.fields[i];\n                break;\n            }\n        }\n    }\n    if (jobResult.sortByGroup === undefined) {\n        jobResult.sortByGroup = jobResult.groups[0];\n    }\n    if (jobResult.color === undefined) {\n        jobResult.color = jobResult.fields[0];\n    }\n    if (jobResult.size === undefined) {\n        jobResult.size = jobResult.fields[0];\n    }\n    if (jobResult.rowSortOrder === undefined) {\n        jobResult.rowSortOrder = [];\n    }\n    if (jobResult.rows === undefined) {\n        sortAndFilterJobResult(jobResult);\n    }\n\n\n    function getRange(field) {\n        let min = Number.MAX_VALUE;\n        let max = -Number.MAX_VALUE;\n        for (let i = 0, n = data.length; i < n; i++) {\n            for (let j = 0; j < groups.length; j++) {\n                const group = groups[j];\n                const fullField = group + ':' + field;\n                const value = data[i][fullField];\n                if (value != null && !isNaN(value)) {\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                }\n            }\n        }\n        return [min, max];\n    }\n\n    // color='logfoldchanges', size='pvals_adj',\n    if (jobResult.colorScale === undefined) {\n        let domain;\n        if (jobResult.interpolator.scale !== INTERPOLATOR_SCALING_NONE) {\n            domain = [0, 1];\n        } else {\n            domain = getRange(jobResult.color);\n        }\n        // if (isNaN(jobResult.options.min) && isNaN(jobResult.options.max) && domain[0] < 0 && domain[1] > 0) {\n        //     const max = Math.max(Math.abs(domain[0]), Math.abs(domain[1]));\n        //     domain[0] = -max;\n        //     domain[1] = max;\n        // }\n        if (!isNaN(jobResult.options.min)) {\n            domain[0] = jobResult.options.min;\n        }\n        if (!isNaN(jobResult.options.max)) {\n            domain[1] = jobResult.options.max;\n        }\n        jobResult.colorScale = createColorScale(jobResult.interpolator).domain(domain);\n    }\n    if (jobResult.sizeScaleReversed === undefined) {\n        jobResult.sizeScaleReversed = jobResult.size != null && jobResult.size.indexOf('pval') !== -1;\n    }\n    if (jobResult.sizeScale === undefined) {\n        if (jobResult.size !== 'none') {\n            let domain = getRange(jobResult.size);\n            if (!isNaN(jobResult.options.minSize)) {\n                domain[0] = jobResult.options.minSize;\n            }\n            if (!isNaN(jobResult.options.maxSize)) {\n                domain[1] = jobResult.options.maxSize;\n            }\n            jobResult.sizeScale = scaleLinear().domain(domain).range(jobResult.sizeScaleReversed ? [18, 2] : [2, 18]).clamp(true);\n        } else {\n            jobResult.sizeScale = scaleConstantRange(18);\n        }\n    }\n}\n\nexport function sortAndFilterJobResult(jobResult) {\n    const by = jobResult.by;\n    const byAscending = jobResult.byAscending;\n    const groups = jobResult.groups;\n    const ngroups = groups.length;\n    jobResult.sortedRows = [];\n    // sort each group\n    for (let groupIndex = 0; groupIndex < ngroups; groupIndex++) {\n        const indices = [];\n        for (let i = 0, n = jobResult.data.length; i < n; i++) {\n            indices.push(i);\n        }\n\n        const group = groups[groupIndex];\n        const byField = group + ':' + by;\n        indices.sort((a, b) => {\n            const val1 = jobResult.data[a][byField];\n            const val2 = jobResult.data[b][byField];\n            const aNaN = (val1 == null || isNaN(val1));\n            const bNaN = (val2 == null || isNaN(val2));\n            if (aNaN && bNaN) {\n                return 0;\n            }\n            if (byAscending) {\n                if (aNaN) {\n                    return -1;\n                }\n                if (bNaN) {\n                    return 1;\n                }\n                return val1 - val2;\n            } else {\n                if (aNaN) {\n                    return 1;\n                }\n                if (bNaN) {\n                    return -1;\n                }\n                return val2 - val1;\n            }\n        });\n        jobResult.sortedRows.push(indices);\n    }\n\n    const rowFilters = jobResult.rowFilters;\n    const rowFilterFunctions = [];\n    rowFilters.forEach(filter => {\n        if (!isNaN(filter[2])) {\n            rowFilterFunctions.push({field: filter[0], f: createFilterFunction(filter)});\n        }\n    });\n\n    // apply filters separately per cluster\n    const nFilters = rowFilterFunctions.length;\n    // filter\n    jobResult.sortedFilteredRows = [];\n    for (let groupIndex = 0; groupIndex < ngroups; groupIndex++) {\n        const group = groups[groupIndex];\n        const filteredIndices = [];\n        const sortedIndices = jobResult.sortedRows[groupIndex];\n        for (let i = 0, n = sortedIndices.length; i < n; i++) {\n            let passesFilter = true;\n            const rowIndex = sortedIndices[i];\n            for (let filterIndex = 0; filterIndex < nFilters; filterIndex++) {\n                const filter = rowFilterFunctions[filterIndex];\n                const field = group + ':' + filter.field;\n                const value = jobResult.data[rowIndex][field];\n                if (!filter.f(value) || value == null || isNaN(value)) {\n                    passesFilter = false;\n                    break;\n                }\n            }\n            if (passesFilter) {\n                filteredIndices.push(rowIndex);\n            }\n        }\n        jobResult.sortedFilteredRows.push(filteredIndices);\n    }\n    updateTopNJobResult(jobResult);\n}\n\n\nexport function updateTopNJobResult(jobResult) {\n    let indices = new Set();\n    const index = jobResult.groups.indexOf(jobResult.sortByGroup);\n    const groupOrder = [index];\n    for (let i = 0; i < jobResult.groups.length; i++) {\n        if (i !== index) {\n            groupOrder.push(i);\n        }\n    }\n    for (let i = 0; i < jobResult.groups.length; i++) {\n        const groupIndices = jobResult.sortedFilteredRows[groupOrder[i]];\n        const ntop = Math.min(jobResult.ntop, groupIndices.length);\n        for (let featureIndex = 0; featureIndex < ntop; featureIndex++) {\n            indices.add(groupIndices[featureIndex]);\n        }\n    }\n    jobResult.rows = Array.from(indices);\n}\n\nfunction DotPlotJobResultsPanel(props) {\n    const {dataset, jobResult, setTooltip, searchTokens, onSearchTokens} = props;\n\n    function onMouseMove(event) {\n        setTooltip(event.target.dataset.title);\n    }\n\n    function onMouseOut(event) {\n        setTooltip('');\n    }\n\n\n    function exportJobResult(event) {\n        const output = [];\n        output.push('id');\n        jobResult.columns.forEach(columnIndex => {\n            const group = jobResult.groups[columnIndex];\n            jobResult.fields.forEach(field => {\n                output.push('\\t');\n                output.push(group + ':' + field);\n            });\n        });\n        output.push('\\n');\n        for (let i = 0; i < jobResult.data.length; i++) {\n            output.push(jobResult.data[i].index);\n            jobResult.columns.forEach(columnIndex => {\n                const group = jobResult.groups[columnIndex];\n                jobResult.fields.forEach(field => {\n                    const fieldName = group + ':' + field;\n                    const value = jobResult.data[i][fieldName];\n                    output.push('\\t');\n                    output.push(value);\n                });\n            });\n            output.push('\\n');\n        }\n        const blob = new Blob([output.join('')], {\n            type: 'text/plain;charset=utf-8'\n        });\n        window.saveAs(blob, jobResult.name + '.tsv');\n    }\n\n\n    function toggleAll(event, isSelected) {\n        event.stopPropagation();\n        isSelected = !isSelected;\n        const features = new Set();\n        for (let i = 0; i < jobResult.rows.length; i++) {\n            const feature = jobResult.data[jobResult.rows[i]]['index'];\n            features.add(feature);\n        }\n\n        let searchTokens = searchTokens;\n        if (!isSelected) {\n            searchTokens = searchTokens.filter(token => !features.has(token.value));\n        } else {\n            const dataset = dataset;\n            features.forEach(feature => {\n                let found = false;\n                for (let i = 0; i < searchTokens.length; i++) {\n                    if (searchTokens[i].value === feature) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    searchTokens.push({\n                        value: feature,\n                        type: dataset.obs.indexOf(feature) !== -1 ? FEATURE_TYPE.OBS : FEATURE_TYPE.X\n                    });\n                }\n            });\n        }\n        onSearchTokens(searchTokens.slice());\n    }\n\n    function onRowClick(event, row) {\n        event.stopPropagation();\n        const feature = jobResult.data[row]['index'];\n        let index = -1;\n        for (let i = 0; i < searchTokens.length; i++) {\n            if (searchTokens[i].value === feature) {\n                index = i;\n                break;\n            }\n        }\n        if (index === -1) {\n            searchTokens.push({\n                value: feature,\n                type: dataset.obs.indexOf(feature) !== -1 ? FEATURE_TYPE.OBS : FEATURE_TYPE.X\n            });\n        } else {\n            searchTokens.splice(index, 1);\n        }\n        onSearchTokens(searchTokens.slice());\n    }\n\n    function sortColumns() {\n        const sortOrder = jobResult.columnSortOrder;\n        const groups = jobResult.groups;\n        const data = jobResult.data;\n        const indices = new Array(groups.length);\n        for (let i = 0, n = groups.length; i < n; i++) {\n            indices[i] = i;\n        }\n        const nsortFields = sortOrder.length;\n        if (nsortFields.length > 0) { // sort by gene\n            const sortFieldRows = [];\n            for (let i = 0; i < nsortFields; i++) {\n                const field = sortOrder[i].field;\n                let index;\n                for (let j = 0; j < data.length; j++) {\n                    if (data[j]['index'] === field) {\n                        index = j;\n                        break;\n                    }\n                }\n                sortFieldRows.push(index);\n            }\n\n            indices.sort((a, b) => {\n                for (let i = 0; i < nsortFields; i++) {\n                    const row = sortFieldRows[i];\n                    const val = data[row][jobResult.color] - data[row][jobResult.color];\n                    if (val !== 0) {\n                        return val;\n                    }\n                    const val2 = data[row][jobResult.size] - data[row][jobResult.size];\n                    if (val2 !== 0) {\n                        return val2;\n                    }\n                }\n                return a - b;\n            });\n        }\n        jobResult.columns = indices;\n    }\n\n\n    const selectedFeatures = new Set();\n    searchTokens.forEach(token => {\n        if (token.type === FEATURE_TYPE.X) {\n            selectedFeatures.add(token.value);\n        }\n    });\n\n    let data;\n    let color;\n    let by;\n    let size;\n    let groups;\n    let rotateHeaders = false;\n    let rows;\n    let valueScale = null;\n    let isSizeScaled = true;\n    let domains;\n    let tooltipFields = null;\n    let headerHeight = 0;\n    let headerWidth = 0;\n    // let isSingleComparison = false;\n\n    let columns = jobResult.columns;\n    // isSingleComparison = columns.length === 1;\n    isSizeScaled = jobResult.size !== 'none';\n    data = jobResult.data;\n    color = jobResult.color;\n    by = jobResult.by;\n    size = jobResult.size;\n    groups = jobResult.groups;\n\n    // if (isSingleComparison) {\n    //     // min/max for each field\n    //     jobResult.fields.forEach(field => {\n    //         let min = Number.MAX_VALUE;\n    //         let max = -Number.MAX_VALUE;\n    //         const fieldName = 'comparison:' + field;\n    //         rows.forEach(row => {\n    //             const value = data[row][fieldName];\n    //             if (value != null && !isNaN(value)) {\n    //                 min = value < min ? value : min;\n    //                 max = value > max ? value : max;\n    //             }\n    //         });\n    //         domains.push([min, max]);\n    //     });\n    // }\n    tooltipFields = [];\n    tooltipFields.push(by);\n    rows = jobResult.rows;\n    if (color !== by) {\n        tooltipFields.push(color);\n    }\n    if (size !== by && isSizeScaled && size !== color) {\n        tooltipFields.push(size);\n    }\n\n    jobResult.fields.forEach(field => {\n        if (tooltipFields.indexOf(field) === -1) {\n            tooltipFields.push(field);\n        }\n    });\n\n\n    for (let i = 0; i < groups.length; i++) {\n        if (groups[i].length > 2) {\n            rotateHeaders = true;\n            break;\n        }\n    }\n\n    if (rotateHeaders) {\n        const d = document.createElement('span');\n        d.style.position = 'absolute';\n        d.style.left = '-1000000px';\n        d.className = '.MuiTableCell-head .MuiTableCell-root';\n        document.body.append(d);\n        for (let i = 0; i < groups.length; i++) {\n            d.innerText = groups[i];\n            headerWidth = Math.max(headerWidth, 2 + d.getBoundingClientRect().width);\n        }\n        d.remove();\n        headerWidth += 2; // prevent overflow\n        headerWidth = Math.min(headerWidth, 300);\n        headerHeight = Math.cos(45) * headerWidth;\n    }\n    if (jobResult.interpolator.scale !== INTERPOLATOR_SCALING_NONE) {\n        valueScale = scaleLinear().range([0, 1]);\n        domains = [];\n        // can scale colors globally, by row, or by column\n        if (jobResult.interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_FEATURE) {\n            rows.forEach(row => {\n                let min = Number.MAX_VALUE;\n                let max = -Number.MAX_VALUE;\n                columns.forEach(column => {\n                    const group = groups[column];\n                    const colorField = group + ':' + color;\n                    const colorValue = data[row][colorField];\n                    if (colorValue != null && !isNaN(colorValue)) {\n                        min = colorValue < min ? colorValue : min;\n                        max = colorValue > max ? colorValue : max;\n                    }\n                });\n                domains.push([min, max]);\n            });\n        } else if (jobResult.interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_CATEGORY) {\n            columns.forEach(column => {\n                let min = Number.MAX_VALUE;\n                let max = -Number.MAX_VALUE;\n                rows.forEach(row => {\n                    const group = groups[column];\n                    const colorField = group + ':' + color;\n                    const colorValue = data[row][colorField];\n                    if (colorValue != null && !isNaN(colorValue)) {\n                        min = colorValue < min ? colorValue : min;\n                        max = colorValue > max ? colorValue : max;\n                    }\n                });\n                domains.push([min, max]);\n            });\n        }\n    }\n\n\n    columns = jobResult.columns.map(column => groups[column]);\n    const isRowSelected = (row) => selectedFeatures.has(data[row].index);\n    const getRowId = (row) => data[row].index;\n    const getTooltip = (row, column) => {\n        let title = [];\n        tooltipFields.forEach(field => {\n            const value = data[row][column + ':' + field];\n            title.push(field + ': ' + value);\n        });\n        title = title.join(', ');\n        return title;\n    };\n\n\n    const getColor = (row, column) => data[row][column + ':' + color];\n    const getSize = (row, column) => data[row][column + ':' + size];\n\n    const rowStart = (row, rowIndex) => {\n        if (jobResult.interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_FEATURE) {\n            valueScale.domain(domains[rowIndex]);\n        }\n    };\n    const columnStart = (column, columnIndex) => {\n        if (jobResult.interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_CATEGORY) {\n            valueScale.domain(domains[columnIndex]);\n        }\n    };\n\n    return <Box color=\"text.primary\">\n        <Typography\n            style={{marginBottom: headerHeight + 8}}\n            component={\"h3\"}\n            color={\"textPrimary\"}><b>{jobResult.name}</b>&nbsp;\n            <small>{intFormat(rows.length) + ' / ' + intFormat(jobResult.data.length) + ' features'}</small></Typography>\n        <Tooltip title={\"Export\"}><IconButton edge={false} size={'small'} aria-label=\"Export\"\n                                              onClick={exportJobResult}><CloudDownloadIcon/></IconButton></Tooltip>\n        <div style={{paddingTop: 6}}>\n            {rows.length > 0 &&\n            <DotPlotTable isRowSelected={isRowSelected}\n                          rows={rows}\n                          columns={columns}\n                          onMouseMove={onMouseMove}\n                          onMouseOut={onMouseOut}\n                          getTooltip={getTooltip}\n                          sizeScale={jobResult.sizeScale}\n                          valueScale={valueScale}\n                          rowStart={rowStart}\n                          getColor={getColor}\n                          getSize={getSize}\n                          getRowId={getRowId}\n                          columnStart={columnStart}\n                          onRowClick={onRowClick}\n                          colorScale={jobResult.colorScale}\n                          toggleAll={toggleAll}\n                          rotateHeaders={rotateHeaders}\n                          headerHeight={headerHeight}\n                          headerWidth={headerWidth}/>}\n        </div>\n    </Box>;\n}\n\n\nconst mapStateToProps = state => {\n        return {\n            dataset: state.dataset,\n            searchTokens: state.searchTokens\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            onSearchTokens: (payload) => {\n                dispatch(setSearchTokensDirectly(payload));\n            }\n\n        };\n    }\n;\n\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(DotPlotJobResultsPanel));\n","import {scaleOrdinal} from 'd3-scale';\nimport {schemeCategory10, schemePaired} from 'd3-scale-chromatic';\nimport {saveAs} from 'file-saver';\nimport {find, findIndex, groupBy, indexOf, isArray, isString} from 'lodash';\nimport OpenSeadragon from 'openseadragon';\nimport isPlainObject from 'react-redux/lib/utils/isPlainObject';\nimport CustomError from '../CustomError';\nimport {getPassingFilterIndices} from '../dataset_filter';\nimport {DirectAccessDataset} from '../DirectAccessDataset';\nimport {createCategoryToStats} from '../MetaEmbedding';\n\nimport {RestDataset} from '../RestDataset';\nimport {RestServerApi} from '../RestServerApi';\nimport {StaticServerApi} from '../StaticServerApi';\n\nimport {getPositions} from '../ThreeUtil';\nimport {\n    addFeatureSetsToX,\n    CATEGORY_20B,\n    CATEGORY_20C,\n    createColorScale,\n    createEmbeddingDensity,\n    FEATURE_TYPE,\n    getFeatureSets,\n    getInterpolator,\n    indexSort,\n    randomSeq,\n    SERVER_CAPABILITY_ADD_DATASET,\n    SERVER_CAPABILITY_RENAME_CATEGORIES,\n    summarizeDensity,\n    TRACE_TYPE_IMAGE,\n    TRACE_TYPE_META_IMAGE,\n    TRACE_TYPE_SCATTER,\n    updateTraceColors\n} from '../util';\nimport {updateJob} from '../DotPlotJobResultsPanel';\n\nexport const API = process.env.REACT_APP_API_URL || 'api';\nconst authScopes = [\n    'email'\n    // 'profile',\n    // 'https://www.googleapis.com/auth/userinfo.profile',\n    // 'https://www.googleapis.com/auth/contacts.readonly',\n    // 'https://www.googleapis.com/auth/devstorage.full_control',\n];\n\n\nexport const DEFAULT_POINT_SIZE = 1;\nexport const DEFAULT_MARKER_OPACITY = 1;\nexport const DEFAULT_UNSELECTED_MARKER_OPACITY = 0.1;\nexport const DEFAULT_INTERPOLATOR = 'Viridis';\nexport const DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR = 'Reds';\nexport const DEFAULT_DRAG_MODE = 'pan';\n\nexport const DEFAULT_SHOW_AXIS = true;\nexport const DEFAULT_SHOW_FOG = false;\nexport const DEFAULT_DARK_MODE = window.matchMedia ? window.matchMedia('(prefers-color-scheme: dark)').matches : false;\nexport const DEFAULT_LABEL_FONT_SIZE = 14;\nexport const DEFAULT_LABEL_STROKE_WIDTH = 4;\n\nexport const SET_EMBEDDING_LABELS = 'SET_EMBEDDING_LABELS';\nexport const SET_DISTRIBUTION_PLOT_INTERPOLATOR = 'SET_DISTRIBUTION_PLOT_INTERPOLATOR';\nexport const SET_CHART_OPTIONS = 'SET_CHART_OPTIONS';\nexport const SET_COMBINE_DATASET_FILTERS = 'SET_COMBINE_DATASET_FILTERS';\nexport const SET_DATASET_FILTERS = 'SET_DATASET_FILTERS'; // saved dataset filters\nexport const SET_DATASET_VIEWS = 'SET_DATASET_VIEWS'; // saved dataset views\n\n\nexport const SET_LEGEND_SCROLL_POSITION = 'SET_LEGEND_SCROLL_POSITION';\nexport const SET_ACTIVE_FEATURE = 'SET_ACTIVE_FEATURE';\nexport const SET_CHART_SIZE = 'SET_CHART_SIZE';\nexport const SET_PRIMARY_CHART_SIZE = 'SET_PRIMARY_CHART_SIZE';\nexport const SET_SERVER_INFO = \"SET_SERVER_INFO\";\nexport const SET_DATASET_FILTER = 'SET_DATASET_FILTER';\nexport const ADD_DATASET = 'ADD_DATASET';\nexport const DELETE_DATASET = 'DELETE_DATASET';\nexport const UPDATE_DATASET = 'UPDATE_DATASET';\nexport const SET_GLOBAL_FEATURE_SUMMARY = 'SET_GLOBAL_FEATURE_SUMMARY';\nexport const SET_SAVED_DATASET_STATE = 'SET_SAVED_DATASET_STATE';\n\nexport const SET_DOMAIN = 'SET_DOMAIN';\nexport const UPDATE_CATEGORICAL_COLOR = 'UPDATE_CATEGORICAL_COLOR';\nexport const SET_CATEGORICAL_NAME = 'SET_CATEGORICAL_NAME';\nexport const UPDATE_CATEGORICAL_NAME = 'UPDATE_CATEGORICAL_NAME';\nexport const SET_MARKER_SIZE = 'SET_MARKER_SIZE';\nexport const SET_MARKER_OPACITY = 'SET_MARKER_OPACITY';\n\n\nexport const SET_UNSELECTED_MARKER_OPACITY = 'SET_UNSELECTED_MARKER_OPACITY';\n\nexport const SET_SELECTION = 'SET_SELECTION';\nexport const SET_FEATURE_SUMMARY = 'SET_FEATURE_SUMMARY';\n\nexport const SET_SEARCH_TOKENS = 'SET_SEARCH_TOKENS';\n\nexport const SET_SELECTED_EMBEDDING = 'SET_SELECTED_EMBEDDING';\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const SET_INTERPOLATOR = 'SET_INTERPOLATOR';\nexport const SET_POINT_SIZE = 'SET_POINT_SIZE';\nexport const SET_UNSELECTED_POINT_SIZE = 'SET_UNSELECTED_POINT_SIZE';\n\nexport const SET_EMAIL = 'SET_EMAIL';\nexport const SET_USER = 'SET_USER';\nexport const SET_DATASET = 'SET_DATASET';\nexport const SET_MARKERS = 'SET_MARKERS';\nexport const SET_DIALOG = 'SET_DIALOG';\n\nexport const OPEN_DATASET_DIALOG = 'OPEN_DATASET_DIALOG';\nexport const EDIT_DATASET_DIALOG = 'EDIT_DATASET_DIALOG';\nexport const IMPORT_DATASET_DIALOG = 'IMPORT_DATASET_DIALOG';\nexport const SAVE_DATASET_FILTER_DIALOG = 'SAVE_DATASET_FILTER_DIALOG';\nexport const SAVE_FEATURE_SET_DIALOG = 'SAVE_FEATURE_SET_DIALOG';\nexport const HELP_DIALOG = 'HELP_DIALOG';\nexport const DELETE_DATASET_DIALOG = 'DELETE_DATASET_DIALOG';\n\nexport const SET_DATASET_CHOICES = 'SET_DATASET_CHOICES';\nexport const RESTORE_VIEW = 'RESTORE_VIEW';\n\nexport const SET_DISTRIBUTION_DATA = 'SET_DISTRIBUTION_DATA';\nexport const SET_SELECTED_DISTRIBUTION_DATA = 'SET_SELECTED_DISTRIBUTION_DATA';\n\nexport const SET_DISTRIBUTION_PLOT_OPTIONS = 'SET_DISTRIBUTION_PLOT_OPTIONS';\nexport const SET_EMBEDDING_DATA = 'SET_EMBEDDING_DATA';\n\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_TAB = 'SET_TAB';\n\nexport const SET_LOADING_APP = 'LOADING_APP';\n\nexport const SET_JOB_RESULTS = 'SET_JOB_RESULTS';\nexport const SET_JOB_RESULT = 'SET_JOB_RESULT';\n\n\nexport function getEmbeddingKey(embedding, includeDensity = true) {\n    let key = embedding.name;\n    if (embedding.mode != null && includeDensity) {\n        key += '_' + embedding.mode;\n    }\n    return key;\n}\n\n\nexport function getTraceKey(traceInfo) {\n    return traceInfo.name + '_' + getEmbeddingKey(traceInfo.embedding);\n}\n\n\nfunction getUser() {\n    return function (dispatch, getState) {\n        getState().serverInfo.api.getUserPromise().then(user => dispatch(setUser(user)));\n    };\n}\n\nexport function initGapi() {\n    return function (dispatch, getState) {\n        dispatch(_setLoadingApp({loading: true, progress: 0}));\n        const startTime = new Date().getTime();\n        const approximateColdBootTime = 10;\n\n        function loadingAppProgress() {\n            if (getState().loadingApp.loading) {\n                let elapsed = (new Date().getTime() - startTime) / 1000;\n                let p = Math.min(100, 100 * (elapsed / approximateColdBootTime));\n                dispatch(_setLoadingApp({loading: true, progress: p}));\n                if (p < 100) {\n                    window.setTimeout(loadingAppProgress, 300);\n                }\n            }\n        }\n\n        window.setTimeout(loadingAppProgress, 500);\n        if (process.env.REACT_APP_STATIC === 'true') {\n            const serverInfo = {clientId: '', capabilities: new Set()};\n            serverInfo.api = new StaticServerApi();\n            dispatch(setServerInfo(serverInfo));\n            dispatch(_setLoadingApp({loading: false}));\n            dispatch(listDatasets()).then(() => {\n                dispatch(_loadSavedView());\n            });\n            return Promise.resolve();\n        }\n        let urlOptions = window.location.search.substring(1);\n        // can be run in server mode by passing url not stored in database\n        let externalDatasetId = null;\n        if (urlOptions.length > 0) {\n            let pairs = urlOptions.split('&');\n            pairs.forEach(pair => {\n                let keyVal = pair.split('=');\n                if (keyVal.length === 2 && (keyVal[0] === 'url' || keyVal[0] === 'id')) { // load a dataset by URL or id\n                    externalDatasetId = keyVal[1];\n                }\n            });\n        }\n        const getServerInfo = fetch(API + '/server').then(result => result.json());\n        return getServerInfo.then(serverInfo => {\n            serverInfo.api = new RestServerApi();\n            if (serverInfo.clientId == null) {\n                serverInfo.clientId = '';\n            }\n            const capabilities = new Set();\n            for (let key in serverInfo.capabilities) {\n                if (serverInfo.capabilities[key]) {\n                    capabilities.add(key);\n                }\n            }\n            serverInfo.capabilities = capabilities;\n            dispatch(setServerInfo(serverInfo));\n            if (serverInfo.clientId === '' || serverInfo.clientId == null) { // no login required\n                dispatch(_setLoadingApp({loading: false}));\n                dispatch(_setEmail(capabilities.has(SERVER_CAPABILITY_ADD_DATASET) ? '' : null));\n                if (capabilities.has(SERVER_CAPABILITY_ADD_DATASET)) {\n                    dispatch(setUser({importer: true}));\n                }\n                if (externalDatasetId == null) {\n                    dispatch(listDatasets()).then(() => {\n                        dispatch(_loadSavedView());\n                    });\n                } else {\n                    dispatch(_setDatasetChoices([{\n                        id: externalDatasetId,\n                        url: externalDatasetId,\n                        name: externalDatasetId,\n                        description: ''\n                    }]));\n                    dispatch(_loadSavedView());\n                }\n\n            } else {\n                console.log((new Date().getTime() - startTime) / 1000 + \" startup time\");\n                let script = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = 'https://apis.google.com/js/api.js';\n                script.onload = (e) => {\n                    window.gapi.load('client:auth2', () => {\n                        window.gapi.client.init({\n                            clientId: serverInfo.clientId,\n                            scope: authScopes.join(' ')\n                        }).then(() => {\n                            dispatch(_setLoadingApp({loading: false, progress: 0}));\n                            dispatch(initLogin(true));\n                        });\n                    });\n                };\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        }).catch(err => {\n            console.log(err);\n            dispatch(_setLoadingApp({loading: false, progress: 0}));\n            handleError(dispatch, 'Unable to load app. Please try again.');\n        });\n    };\n}\n\nexport function logout() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signOut().then(() => {\n            dispatch({type: SET_EMAIL, payload: null});\n            dispatch(_setDataset(null));\n        });\n    };\n}\n\nexport function login() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signIn().then(e => {\n            dispatch(initLogin());\n        });\n    };\n}\n\n\nexport function openView(id, loadDataset = false) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.getViewPromise(id)\n            .then(result => {\n                const savedView = isString(result.value) ? JSON.parse(result.value) : result.value;\n                savedView.dataset = result.dataset_id;\n                dispatch(restoreSavedView(savedView));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve link. Please try again.');\n        });\n    };\n}\n\n\nexport function saveView(payload) {\n    return function (dispatch, getState) {\n        const state = getState();\n        const value = getDatasetStateJson(state);\n        delete value['dataset'];\n        payload = Object.assign({ds_id: state.dataset.id}, payload);\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.upsertViewPromise(payload, false)\n            .then(result => {\n                payload = Object.assign(result, payload);\n                const array = getState().datasetViews;\n                array.push(payload);\n                dispatch(setDatasetViews(array.slice()));\n                dispatch(setMessage('Link saved'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to save link. Please try again.');\n        });\n    };\n}\n\nexport function deleteView(id) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteViewPromise(id, getState().dataset.id)\n            .then(() => {\n                let array = getState().datasetViews;\n                for (let i = 0; i < array.length; i++) {\n                    if (array[i].id === id) {\n                        array.splice(i, 1);\n                        break;\n                    }\n                }\n                dispatch(setDatasetFilters(array.slice()));\n                dispatch(setMessage('Link deleted'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete link. Please try again.');\n        });\n    };\n}\n\n\nexport function submitJob(jobData) {\n    return function (dispatch, getState) {\n        let jobId;\n        let timeout = 5 * 1000; // TODO\n        function getJobStatus() {\n            getState().dataset.api.getJobStatus(jobId)\n                .then(result => {\n                    const jobResult = find(getState().jobResults, item => item.id === jobId);\n                    const statusUpdated = jobResult.status !== result.status;\n                    jobResult.status = result.status;\n                    let fetchJobStatus = true;\n                    if (result.status === 'complete') {\n                        dispatch(setMessage(jobData.name + ': complete'));\n                        dispatch(setJobResults(getState().jobResults.slice()));\n                        fetchJobStatus = false;\n                    } else if (result.status === 'error') {\n                        handleError(dispatch, new CustomError('Unable to complete job. Please try again.'));\n                        fetchJobStatus = false;\n                    } else if (statusUpdated) { // force repaint\n                        dispatch(setMessage(jobData.name + ': ' + result.status));\n                        dispatch(setJobResults(getState().jobResults.slice()));\n                    }\n                    if (fetchJobStatus) {\n                        window.setTimeout(getJobStatus, timeout);\n                    }\n                }).catch(err => {\n                handleError(dispatch, err, 'Unable to get job. Please try again.');\n            });\n        }\n\n        jobData.id = getState().dataset.id;\n        if (jobData.params.filter == null) {\n            jobData.params.filter = getFilterJson(getState());\n        }\n        getState().serverInfo.api.submitJob(jobData)\n            .then(result => {\n                dispatch(setMessage('Job submitted'));\n                jobId = result.id;\n                jobData.email = getState().email;\n                jobData.id = jobId;\n                getState().jobResults.push(jobData);\n                dispatch(setJobResults(getState().jobResults.slice()));\n                window.setTimeout(getJobStatus, timeout);\n            }).finally(() => {\n\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to submit job. Please try again.');\n        });\n    };\n}\n\nexport function deleteFeatureSet(id) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteFeatureSet(id, getState().dataset.id)\n            .then(result => {\n                let markers = getState().markers;\n                let found = false;\n                for (let i = 0; i < markers.length; i++) {\n                    if (markers[i].id === id) {\n                        markers.splice(i, 1);\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    console.log('Unable to find feature set id ' + id);\n                }\n                dispatch(setMarkers(markers.slice()));\n                dispatch(setMessage('Set deleted'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete set. Please try again.');\n        });\n    };\n}\n\nexport function saveFeatureSet(payload) {\n    return function (dispatch, getState) {\n        const state = getState();\n        const features = state.searchTokens.filter(item => item.type === FEATURE_TYPE.X).map(item => item.value);\n        const requestBody = {\n            ds_id: state.dataset.id,\n            name: payload.name,\n            features: features,\n            category: payload.category\n        };\n\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.upsertFeatureSet(requestBody, false)\n            .then(result => {\n\n                let markers = getState().markers;\n                markers.push({\n                    category: payload.category,\n                    name: payload.name,\n                    features: features,\n                    id: result.id\n                });\n                dispatch(setMarkers(markers.slice()));\n                dispatch(setMessage('Set saved'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to save set. Please try again.');\n        });\n    };\n}\n\n\nexport function removeDatasetFilter(filterKey) {\n    return function (dispatch, getState) {\n        if (filterKey == null) {\n            // clear all\n            dispatch(setDatasetFilter({}));\n        } else {\n            let datasetFilter = getState().datasetFilter;\n            if (filterKey === 'selection') {\n                for (let key in datasetFilter) {\n                    if (Array.isArray(datasetFilter[key])) {\n                        delete datasetFilter[key];\n                    }\n                }\n            } else {\n                delete datasetFilter[filterKey];\n            }\n            dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n        }\n        dispatch(handleFilterUpdated());\n    };\n}\n\nfunction getDatasetFilterDependencies(datasetFilter) {\n    let features = new Set();\n    let basis = new Set();\n    for (let key in datasetFilter) {\n        // basis, path for brush filter\n        const filterObject = datasetFilter[key];\n        if (Array.isArray(filterObject)) { // brush filter\n\n        } else if (filterObject.operation === 'in') {\n            features.add(key);\n        } else {\n            if (filterObject.operation !== '' && !isNaN(filterObject.value) && filterObject.value != null) {\n                features.add(key);\n            }\n        }\n    }\n    return {features: features, basis: basis};\n}\n\nexport function getDatasetFilterNames(datasetFilter) {\n    const names = [];\n    let isBrushing = false;\n    for (let key in datasetFilter) {\n        const value = datasetFilter[key];\n        if (Array.isArray(value)) {\n            isBrushing = true;\n        } else if (value.operation === 'in') {\n            names.push(key);\n        } else if (value.operation != null && value.operation !== '' && !isNaN(value.value) && value.value != null) {\n            names.push(key);\n        }\n    }\n    if (isBrushing) {\n        names.push('selection');\n    }\n    return names;\n}\n\nexport function getDatasetFilterArray(datasetFilter) {\n    let filters = [];\n    const brushIndices = new Set();\n    // brush filters are combined with OR\n    for (let key in datasetFilter) {\n        // basis, path for brush filter\n        const value = datasetFilter[key];\n        if (Array.isArray(value)) {\n            value.forEach(brushFilter => {\n                brushFilter.indices.forEach(index => brushIndices.add(index));\n            });\n        }\n    }\n    if (brushIndices.size > 0) {\n        filters.push(['__index', 'in', brushIndices]);\n    }\n    for (let key in datasetFilter) {\n        const value = datasetFilter[key];\n        let f = null;\n        if (Array.isArray(value)) {\n            continue;\n        }\n        if (value.operation === 'in') {\n            f = [key, value.operation, value.value];\n        } else if (value.operation != null && value.operation !== '' && !isNaN(value.value) && value.value != null) {\n            f = [key, value.operation, value.value];\n        }\n        if (f != null) {\n            filters.push(f);\n        }\n    }\n    return filters;\n}\n\n\nfunction getFilterJson(state) {\n    return datasetFilterToJson(state.dataset, state.datasetFilter, state.combineDatasetFilters);\n}\n\nexport function datasetFilterToJson(dataset, datasetFilter, combineDatasetFilters) {\n    let filters = getDatasetFilterArray(datasetFilter);\n    if (filters.length > 0) {\n        const obs = dataset.obs;\n        const obsCat = dataset.obsCat;\n        for (let i = 0; i < filters.length; i++) {\n            // add obs/ prefix\n            const filter = filters[i];\n            if (filter[0] === '__index') {\n                filter[2] = Array.from(filter[2]); // convert Set to array\n            } else if (obsCat.indexOf(filter[0]) !== -1 || obs.indexOf(filter[0]) !== -1) {\n                filter[0] = 'obs/' + filter[0];\n            }\n        }\n        return {filters: filters, combine: combineDatasetFilters};\n    }\n}\n\n\nexport function downloadSelectedIds() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        const state = getState();\n        let filter = getFilterJson(state, true);\n\n        state.dataset.api.getSelectedIdsPromise({\n            filter: filter\n        }, state.cachedData).then(result => {\n            const blob = new Blob([result.ids.join('\\n')], {type: \"text/plain;charset=utf-8\"});\n            saveAs(blob, \"selection.txt\");\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\nexport function exportDatasetFilters() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.exportDatasetFiltersPromise(getState().dataset.id).then(result => {\n            if (result == null) {\n                handleError(dispatch, 'Unable to export filters');\n                return;\n            }\n            const blob = new Blob([result], {type: \"text/plain;charset=utf-8\"});\n            saveAs(blob, \"filters.csv\");\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\n\nexport function setDistributionPlotOptions(payload) {\n    return {type: SET_DISTRIBUTION_PLOT_OPTIONS, payload: payload};\n}\n\nexport function setChartOptions(payload) {\n    return {type: SET_CHART_OPTIONS, payload: payload};\n}\n\n\nfunction _setCombineDatasetFilters(payload) {\n    return {type: SET_COMBINE_DATASET_FILTERS, payload: payload};\n}\n\nexport function setCombineDatasetFilters(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setCombineDatasetFilters(payload));\n        dispatch(handleFilterUpdated());\n    };\n}\n\nexport function setChartSize(payload) {\n    return {type: SET_CHART_SIZE, payload: payload};\n}\n\n\nexport function setPrimaryChartSize(payload) {\n    return {type: SET_PRIMARY_CHART_SIZE, payload: payload};\n}\n\nexport function _setActiveFeature(payload) {\n    return {type: SET_ACTIVE_FEATURE, payload: payload};\n}\n\n\nexport function setActiveFeature(payload) {\n    return {type: SET_ACTIVE_FEATURE, payload: payload};\n}\n\nexport function setLegendScrollPosition(payload) {\n    return {type: SET_LEGEND_SCROLL_POSITION, payload: payload};\n}\n\nfunction setGlobalFeatureSummary(payload) {\n    return {type: SET_GLOBAL_FEATURE_SUMMARY, payload: payload};\n}\n\nfunction setDatasetFilter(payload) {\n    return {type: SET_DATASET_FILTER, payload: payload};\n}\n\nfunction setSelection(payload) {\n    return {type: SET_SELECTION, payload: payload};\n}\n\nfunction setFeatureSummary(payload) {\n    return {type: SET_FEATURE_SUMMARY, payload: payload};\n}\n\n\nfunction handleFilterUpdated() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        // whenever filter is updated, we need to get selection statistics\n        const state = getState();\n        const searchTokens = state.searchTokens;\n        let filter = getFilterJson(state);\n        const groupedSearchTokens = groupBy(searchTokens, 'type');\n        addFeatureSetsToX(getFeatureSets(state.markers, groupedSearchTokens[FEATURE_TYPE.FEATURE_SET] || []), (searchTokens[FEATURE_TYPE.X] || []).map(item => item.value));\n        const measureKeys = [FEATURE_TYPE.X, FEATURE_TYPE.MODULE, FEATURE_TYPE.OBS, FEATURE_TYPE.OTHER];\n        const measures = [];\n        measureKeys.forEach(key => {\n            const prefix = key === FEATURE_TYPE.X ? '' : key + '/';\n            if (groupedSearchTokens[key]) {\n                groupedSearchTokens[key].forEach(item => measures.push(prefix + item.value));\n            }\n        });\n\n\n        let q = {\n            selection: {\n                measures: measures,\n                dimensions: (groupedSearchTokens[FEATURE_TYPE.OBS_CAT] || []).map(item => item.value)\n            }\n        };\n\n        if (filter) {\n            q.selection.filter = filter;\n        }\n\n        if (filter == null) {\n            if (state.selection.size !== 0) {\n                dispatch(setSelection(new Set()));\n            }\n            dispatch(setSelectedDistributionData([]));\n            dispatch(setFeatureSummary({}));\n            dispatch(_setLoading(false));\n            return;\n        }\n\n        const cachedData = state.cachedData;\n        getState().dataset.api.getDataPromise(q, cachedData).then(result => {\n            dispatch(handleSelectionResult(result.selection, true));\n        }).catch(err => {\n            handleError(dispatch, err);\n        }).finally(() => dispatch(_setLoading(false)));\n    };\n}\n\n\nexport function handleBrushFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        const name = payload.name; // full basis name\n        const value = payload.value;  // value has basis and indices\n        const clear = payload.clear;\n        const indices = payload.value != null ? payload.value.indices : null;\n        let datasetFilter = getState().datasetFilter;\n\n        function clearFilters() {\n            if (clear) {\n                for (let key in datasetFilter) {\n                    const value = datasetFilter[key];\n                    if (Array.isArray(value)) {\n                        delete datasetFilter[key];\n                    }\n                }\n            }\n        }\n\n        let update = true;\n        if (value == null || indices.size === 0) { // remove filter\n            update = datasetFilter[name] != null;\n            delete datasetFilter[name];\n            clearFilters();\n        } else {\n            let priorFilters = datasetFilter[name];\n            let isToggleRegion = false;\n            if (priorFilters != null) {\n                const priorIndex = value.id != null ? findIndex(priorFilters, f => f.id === value.id) : -1;\n                if (priorIndex !== -1) { // toggle region\n                    isToggleRegion = true;\n                    priorFilters.splice(priorIndex, 1);\n                }\n            }\n            if (!isToggleRegion) {\n                clearFilters();\n                priorFilters = datasetFilter[name];\n                if (priorFilters == null) {\n                    priorFilters = [];\n                    datasetFilter[name] = priorFilters;\n                }\n                priorFilters.push({basis: value.basis, indices: indices, id: value.id});\n            }\n        }\n        if (update) {\n            dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n            dispatch(handleFilterUpdated());\n        }\n    };\n}\n\n\nexport function handleMeasureFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        const name = payload.name;\n        const operation = payload.operation;\n        const value = payload.value;\n        let update = payload.update;\n\n        let datasetFilter = getState().datasetFilter;\n        let filter = datasetFilter[name];\n\n        if (filter == null) {\n            filter = {operation: '>', value: NaN};\n            datasetFilter[name] = filter;\n        }\n        if (update) {\n            if (value != null) {\n                update = (!isNaN(value) ? value !== filter.value : isNaN(value) !== isNaN(filter.value));\n            }\n            if (operation != null) {\n                update = update || (operation !== filter.operation && !isNaN(filter.value));\n            }\n        }\n        if (operation != null) {\n            filter.operation = operation;\n        }\n        if (value != null) {\n            filter.value = value;\n        }\n\n        dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n        if (update) {\n            dispatch(handleFilterUpdated());\n        }\n    };\n}\n\nexport function handleDimensionFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        let name = payload.name;\n        let newValue = payload.value;\n        let shiftKey = payload.shiftKey;\n        let metaKey = payload.metaKey;\n        let datasetFilter = getState().datasetFilter;\n        let embeddingData = getState().embeddingData;\n        let categories;\n        for (let i = 0; i < embeddingData.length; i++) {\n            if (embeddingData[i].name === name) {\n                categories = embeddingData[i].colorScale.domain();\n                break;\n            }\n        }\n        let categoricalFilter = datasetFilter[name];\n        if (categoricalFilter == null) {\n            categoricalFilter = {operation: 'in', value: []};\n            datasetFilter[name] = categoricalFilter;\n        }\n\n        if (shiftKey && categoricalFilter.value.length > 0) {\n            // add last click to current\n            let lastIndex = categories.indexOf(categoricalFilter.value[categoricalFilter.value.length - 1]);\n            let currentIndex = categories.indexOf(newValue);\n            // put clicked category at end of array\n            if (currentIndex > lastIndex) {\n                for (let i = lastIndex; i <= currentIndex; i++) {\n                    let index = categoricalFilter.value.indexOf(newValue);\n                    if (index !== -1) {\n                        categoricalFilter.value.splice(index, 1);\n                    }\n                    categoricalFilter.value.push(categories[i]);\n                }\n            } else {\n                for (let i = lastIndex; i >= currentIndex; i--) {\n                    let index = categoricalFilter.value.indexOf(newValue);\n                    if (index !== -1) {\n                        categoricalFilter.value.splice(index, 1);\n                    }\n                    categoricalFilter.value.push(categories[i]);\n                }\n            }\n        } else {\n            let selectedIndex = categoricalFilter.value.indexOf(newValue);\n            if (!metaKey) { // clear and toggle current\n                categoricalFilter.value = [];\n            }\n            if (selectedIndex !== -1) { // exists, remove\n                categoricalFilter.value.splice(selectedIndex, 1);\n                if (categoricalFilter.value.length === 0) {\n                    delete datasetFilter[name];\n                }\n            } else {\n                categoricalFilter.value.push(newValue);\n            }\n        }\n        dispatch(setDatasetFilter(datasetFilter));\n        dispatch(handleFilterUpdated());\n    };\n}\n\n\nexport function handleDomainChange(payload) {\n    return {type: SET_DOMAIN, payload: payload};\n}\n\nfunction _handleCategoricalNameChange(payload) {\n    return {type: SET_CATEGORICAL_NAME, payload: payload};\n}\n\nfunction handleUpdateCategoricalName(payload) {\n    return {type: UPDATE_CATEGORICAL_NAME, payload: payload};\n}\n\nexport function _handleColorChange(payload) {\n    return {type: UPDATE_CATEGORICAL_COLOR, payload: payload};\n}\n\nexport function handleColorChange(payload) {\n    return function (dispatch, getState) {\n        const value = Object.assign({id: getState().dataset.id}, payload);\n        if (getState().serverInfo.capabilities.has(SERVER_CAPABILITY_RENAME_CATEGORIES)) {\n            getState().serverInfo.api.setCategoryNamePromise(value).then(() => {\n                dispatch(_handleColorChange(payload));\n            });\n        } else { // save, but do not persist\n            dispatch(_handleColorChange(payload));\n        }\n    };\n}\n\nexport function handleCategoricalNameChange(payload) {\n    return function (dispatch, getState) {\n        const value = Object.assign({id: getState().dataset.id}, payload);\n        if (getState().serverInfo.capabilities.has(SERVER_CAPABILITY_RENAME_CATEGORIES)) {\n            getState().serverInfo.api.setCategoryNamePromise(value).then(() => {\n                dispatch(handleUpdateCategoricalName(payload));\n            });\n        } else { // save, but do not persist\n            dispatch(handleUpdateCategoricalName(payload));\n        }\n    };\n}\n\n\nexport function restoreView(payload) {\n    return {type: RESTORE_VIEW, payload: payload};\n}\n\n\nexport function setPointSize(payload) {\n    return {type: SET_POINT_SIZE, payload: payload};\n}\n\nexport function setUnselectedPointSize(payload) {\n    return {type: SET_UNSELECTED_POINT_SIZE, payload: payload};\n}\n\nexport function setMarkerSize(payload) {\n    return {type: SET_MARKER_SIZE, payload: payload};\n}\n\n\nexport function setUser(payload) {\n    return {type: SET_USER, payload: payload};\n}\n\n\nexport function setServerInfo(payload) {\n    return {type: SET_SERVER_INFO, payload: payload};\n}\n\nfunction getDefaultDatasetView(dataset) {\n    const embeddingNames = dataset.embeddings.map(e => e.name);\n    let selectedEmbedding = null;\n    let obsCat = null;\n    if (embeddingNames.length > 0) {\n        let embeddingPriorities = ['tissue_hires', 'fle', 'umap', 'tsne'];\n        let embeddingName = null;\n        for (let priorityIndex = 0; priorityIndex < embeddingPriorities.length && embeddingName == null; priorityIndex++) {\n            for (let i = 0; i < embeddingNames.length; i++) {\n                if (embeddingNames[i].toLowerCase().indexOf(embeddingPriorities[priorityIndex]) !== -1) {\n                    embeddingName = embeddingNames[i];\n                    break;\n                }\n            }\n        }\n\n        if (embeddingName == null) {\n            embeddingName = embeddingNames[0];\n        }\n        selectedEmbedding = dataset.embeddings[dataset.embeddings.map(e => e.name).indexOf(embeddingName)];\n    }\n\n    if (dataset.markers_read_only != null && dataset.markers_read_only.length > 0) {\n        let category = dataset.markers_read_only[0].category;\n        const suffix = ' (rank_genes_groups)';\n        if (category.endsWith(suffix)) {\n            category = category.substring(0, category.length - suffix.length);\n        }\n        if (dataset.obsCat.indexOf(category) !== -1) {\n            obsCat = category;\n        }\n    }\n    if (obsCat == null) {\n        let catPriorities = ['anno', 'cell_type', 'celltype', 'leiden', 'louvain', 'seurat_cluster', 'cluster'];\n        for (let priorityIndex = 0; priorityIndex < catPriorities.length && obsCat == null; priorityIndex++) {\n            for (let i = 0; i < dataset.obsCat.length; i++) {\n                if (dataset.obsCat[i].toLowerCase().indexOf(catPriorities[priorityIndex]) !== -1) {\n                    obsCat = dataset.obsCat[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    return {selectedEmbedding, obsCat};\n}\n\nfunction loadDefaultDatasetView() {\n    return function (dispatch, getState) {\n        const dataset = getState().dataset;\n        const {selectedEmbedding, obsCat} = getDefaultDatasetView(dataset);\n        if (obsCat != null) {\n            dispatch(setSearchTokensDirectly([{value: obsCat, type: FEATURE_TYPE.OBS_CAT}]));\n        }\n        if (selectedEmbedding != null) {\n            dispatch(setSelectedEmbedding([selectedEmbedding]));\n        }\n\n    };\n}\n\nfunction loadDefaultDataset() {\n    return function (dispatch, getState) {\n        if (getState().dataset == null && getState().datasetChoices.length === 1) {\n            dispatch(setDataset(getState().datasetChoices[0].id));\n        } else if (getState().datasetChoices.length > 0) {\n            dispatch(setDialog(OPEN_DATASET_DIALOG));\n        }\n    };\n}\n\nfunction restoreSavedView(savedView) {\n    return function (dispatch, getState) {\n        if (savedView.colorScheme != null) {\n            savedView.colorScheme.value = getInterpolator(savedView.colorScheme.name);\n        }\n\n        if (savedView.datasetFilter == null) {\n            savedView.datasetFilter = {};\n\n        } else {\n            for (let key in savedView.datasetFilter) {\n                let value = savedView.datasetFilter[key];\n                if (value.operation) {\n                    value.uiValue = value.value;\n                }\n            }\n        }\n\n        dispatch(_setLoading(true));\n        let datasetPromise;\n        if (savedView.dataset != null) {\n            datasetPromise = dispatch(setDataset(savedView.dataset, false, false));\n        } else {\n            datasetPromise = Promise.resolve();\n        }\n        datasetPromise\n            .then(() => {\n                let dataset = getState().dataset;\n                if (savedView.embeddings && savedView.embeddings.length > 0) {\n                    let names = dataset.embeddings.map(e => getEmbeddingKey(e));\n                    let embeddings = [];\n                    savedView.embeddings.forEach(embedding => {\n                        let index = names.indexOf(getEmbeddingKey(embedding));\n                        if (index !== -1) {\n                            embeddings.push(dataset.embeddings[index]);\n                        }\n                    });\n                    savedView.embeddings = embeddings;\n                    if (savedView.camera != null) {\n                        if (savedView.chartOptions == null) {\n                            savedView.chartOptions = {};\n                        }\n                        savedView.chartOptions.camera = savedView.camera;\n                    }\n                } else {\n                    const {selectedEmbedding, obsCat} = getDefaultDatasetView(dataset);\n                    if (selectedEmbedding) {\n                        savedView.embeddings = [selectedEmbedding];\n                        if (obsCat != null) {\n                            savedView.q = [{value: obsCat, type: 'obsCat'}];\n                            savedView.activeFeature = {\n                                name: obsCat,\n                                type: 'obsCat',\n                                embeddingKey: obsCat + '_' + getEmbeddingKey(selectedEmbedding)\n                            };\n                        }\n                    }\n\n                }\n            })\n            .then(() => dispatch(setDatasetFilter(savedView.datasetFilter)))\n            .then(() => dispatch(restoreView(savedView)))\n            .then(() => dispatch(_updateCharts()))\n            .then(() => dispatch(handleFilterUpdated()))\n            .then(() => {\n                if (savedView.distributionPlotOptions != null) {\n                    dispatch(setDistributionPlotOptions(savedView.distributionPlotOptions));\n                }\n                let activeFeature = savedView.activeFeature;\n                if (activeFeature == null && savedView.embeddings && savedView.embeddings.length > 0 && savedView.q != null && savedView.q.length > 0) {\n                    activeFeature = {\n                        name: savedView.q[0],\n                        type: getFeatureType(getState().dataset, savedView.q[0]),\n                        embeddingKey: savedView.q[0] + '_' + getEmbeddingKey(savedView.embeddings[0])\n                    };\n                }\n                if (activeFeature != null) {\n                    dispatch(setActiveFeature(activeFeature));\n                }\n            })\n            .then(() => {\n                if (savedView.jobId != null) {\n                    dispatch(setJobResultId(savedView.jobId));\n                }\n            })\n            .finally(() => dispatch(_setLoading(false)))\n            .catch(err => {\n                console.log(err);\n                dispatch(setMessage('Unable to restore saved view.'));\n                dispatch(loadDefaultDataset());\n            });\n    };\n}\n\nfunction _loadSavedView() {\n    return function (dispatch, getState) {\n        let savedView = {dataset: null};\n        // #q=\n        let q = window.location.hash.substring(3);\n        if (q.length > 0) {\n            try {\n                savedView = JSON.parse(window.decodeURIComponent(q));\n            } catch (err) {\n                return dispatch(setMessage('Unable to restore view.'));\n            }\n        }\n        if (savedView.link != null) {\n            dispatch(openView(savedView.link, true));\n        } else if (savedView.dataset != null) {\n            dispatch(restoreSavedView(savedView));\n        } else {\n            dispatch(loadDefaultDataset());\n        }\n    };\n}\n\nexport function initLogin(loadSavedView) {\n    return function (dispatch, getState) {\n        let isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n        if (isSignedIn) {\n            let googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n            let email = googleUser.getBasicProfile().getEmail();\n            dispatch(_setEmail(email));\n            dispatch(getUser());\n            dispatch(listDatasets()).then(() => {\n                if (loadSavedView) {\n                    dispatch(_loadSavedView());\n                }\n            });\n\n        }\n    };\n}\n\nexport function getAccessToken() {\n    return window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n}\n\nexport function getIdToken() {\n    return typeof window.gapi !== 'undefined' ? window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token : '';\n}\n\nexport function saveDataset(payload) {\n    return function (dispatch, getState) {\n        const readers = payload.readers;\n        let existingDataset = payload.dataset;\n        const isEdit = existingDataset != null;\n        const formData = {};\n        if (existingDataset != null) {\n            const existingReaders = new Set(existingDataset.readers);\n            let setsEqual = existingReaders.size === readers.length;\n            if (setsEqual) {\n                for (let i = 0; i < readers.length; i++) {\n                    if (!existingReaders.has(readers[i])) {\n                        setsEqual = false;\n                        break;\n                    }\n                }\n            }\n            if (!setsEqual) {\n                formData.readers = readers;\n            }\n        }\n        if (existingDataset == null) {\n            existingDataset = {};\n        }\n        const blacklist = new Set(['readers', 'dataset']);\n        for (let key in payload) {\n            if (!blacklist.has(key)) {\n                const value = payload[key];\n                if (value != null && value !== existingDataset[key]) {\n                    formData[key] = value;\n                }\n            }\n        }\n\n\n        if (Object.keys(formData).length === 0) {\n            return;\n        }\n        if (isEdit) {\n            formData.id = payload.dataset.id;\n        }\n        dispatch(_setLoading(true));\n        const request = getState().serverInfo.api.upsertDatasetPromise(formData);\n        request.upload.addEventListener('progress', function (e) {\n            if (formData['file'] != null) {\n                let percent = (e.loaded / e.total) * 100;\n                dispatch(setMessage('Percent ' + percent));\n            }\n        });\n        request.addEventListener('load', function (e) {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n            const status = request.status;\n            if (status != 200) {\n                return dispatch(setMessage('Unable to save dataset. Please try again.'));\n            }\n\n            const resp = JSON.parse(request.response);\n            delete formData['file'];\n            existingDataset = Object.assign({}, existingDataset, formData, resp);\n            existingDataset.owner = true;\n\n            if (isEdit) {\n                dispatch(updateDataset(existingDataset));\n                dispatch(setMessage('Dataset updated'));\n            } else {\n                dispatch(_addDataset(existingDataset));\n                dispatch(setMessage('Dataset added'));\n            }\n        });\n    };\n}\n\nexport function deleteDataset(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteDatasetPromise(payload.dataset.id).then(() => {\n            dispatch(_setDataset(null));\n            dispatch(_deleteDataset({id: payload.dataset.id}));\n            dispatch(setDialog(null));\n            dispatch(setMessage('Dataset deleted'));\n        }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete dataset. Please try again.');\n        });\n    };\n}\n\nfunction _addDataset(payload) {\n    return {type: ADD_DATASET, payload: payload};\n}\n\nfunction _deleteDataset(payload) {\n    return {type: DELETE_DATASET, payload: payload};\n}\n\nexport function updateDataset(payload) {\n    return {type: UPDATE_DATASET, payload: payload};\n}\n\nexport function setMessage(payload) {\n    return {type: SET_MESSAGE, payload: payload};\n}\n\nexport function setInterpolator(payload) {\n    return {type: SET_INTERPOLATOR, payload: payload};\n}\n\nexport function setDistributionPlotInterpolator(payload) {\n    return {type: SET_DISTRIBUTION_PLOT_INTERPOLATOR, payload: payload};\n}\n\nexport function setEmbeddingData(payload) {\n    return {type: SET_EMBEDDING_DATA, payload: payload};\n}\n\nexport function setDialog(payload) {\n    return {type: SET_DIALOG, payload: payload};\n}\n\nexport function setMarkers(payload) {\n    return {type: SET_MARKERS, payload: payload};\n}\n\nfunction _setDatasetChoices(payload) {\n    return {type: SET_DATASET_CHOICES, payload: payload};\n}\n\nfunction _setLoading(payload) {\n    return {type: SET_LOADING, payload: payload};\n}\n\nexport function setTab(payload) {\n    return {type: SET_TAB, payload: payload};\n}\n\nfunction _setLoadingApp(payload) {\n    return {type: SET_LOADING_APP, payload: payload};\n}\n\nfunction _setDataset(payload) {\n    return {type: SET_DATASET, payload: payload};\n}\n\nexport function setJobResults(payload) {\n    return {type: SET_JOB_RESULTS, payload: payload};\n}\n\nfunction _setJobResultId(payload) {\n    return {type: SET_JOB_RESULT, payload: payload};\n}\n\nexport function deleteJobResult(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().dataset.api.deleteJob(payload).then(() => {\n            let jobResults = getState().jobResults;\n            const index = findIndex(jobResults, item => item.id === payload);\n            jobResults.splice(index, 1);\n            if (getState().jobResult === payload) {\n                dispatch(_setJobResultId(null));\n            }\n            dispatch(setJobResults(jobResults.slice()));\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete result. Please try again.');\n        });\n    };\n}\n\nexport function setJobResultId(jobId) {\n    return function (dispatch, getState) {\n        const existingJobResult = find(getState().jobResults, item => item.id === jobId);\n        if (existingJobResult.data != null) { // data already loaded\n            if (existingJobResult.type === 'de') {\n                updateJob(existingJobResult);\n            }\n            return dispatch(_setJobResultId(existingJobResult.id));\n        }\n        dispatch(_setLoading(true));\n\n        let promises = [];\n        promises.push(getState().dataset.api.getJobParams(jobId));\n        promises.push(getState().dataset.api.getJob(jobId));\n        Promise.all(promises).then((values) => {\n            const params = values[0];\n            let result = values[1];\n            const jobResults = getState().jobResults;\n            const index = findIndex(jobResults, item => item.id === jobId);\n            if (index === -1) { // job was deleted while fetching result?\n                console.log('Unable to find job');\n            } else {\n                if (result.data == null) {\n                    result = {data: result};\n                }\n                const jobResult = Object.assign({}, params, jobResults[index], result);\n                if (jobResult.type === 'de') {\n                    updateJob(jobResult);\n                }\n                let promise = Promise.resolve({});\n                if (jobResult.params && jobResult.params.obs) {\n                    const cachedData = getState().cachedData;\n                    const q = {values: {dimensions: []}};\n                    jobResult.params.obs.forEach(field => {\n                        if (cachedData[field] == null) {\n                            q.values.dimensions.push(field);\n                        }\n                    });\n                    if (q.values.dimensions.length > 0) {\n                        promise = getState().dataset.api.getDataPromise(q, cachedData);\n                    }\n                }\n                jobResults[index] = jobResult;\n                promise.then(() => {\n                    dispatch(_setJobResultId(jobResult.id));\n                });\n            }\n\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve result. Please try again.');\n        });\n\n    };\n}\n\nexport function setMarkerOpacity(payload) {\n    return {type: SET_MARKER_OPACITY, payload: payload};\n}\n\nexport function setUnselectedMarkerOpacity(payload) {\n    return {type: SET_UNSELECTED_MARKER_OPACITY, payload: payload};\n}\n\nexport function toggleEmbeddingLabel(payload) {\n    return function (dispatch, getState) {\n        const embeddingLabels = getState().embeddingLabels;\n        const index = embeddingLabels.indexOf(payload);\n        if (index === -1) {\n            embeddingLabels.push(payload);\n        } else {\n            embeddingLabels.splice(index, 1);\n        }\n        return dispatch({type: SET_EMBEDDING_LABELS, payload: embeddingLabels.slice()});\n    };\n\n}\n\nfunction setDistributionData(payload) {\n    return {type: SET_DISTRIBUTION_DATA, payload: payload};\n}\n\nfunction setSelectedDistributionData(payload) {\n    return {type: SET_SELECTED_DISTRIBUTION_DATA, payload: payload};\n}\n\n\nfunction _setEmail(payload) {\n    return {type: SET_EMAIL, payload: payload};\n}\n\n\n/**\n *\n * @param value\n * @param type one of X, obs, featureSet\n */\nexport function setSearchTokens(values, type, updateActiveFeature = true, clear = true) {\n    return function (dispatch, getState) {\n        const state = getState();\n        let searchTokens = state.searchTokens;\n        // keep all other types\n        let removeType = [type];\n        if (type === FEATURE_TYPE.OBS) {\n            removeType.push(FEATURE_TYPE.OBS_CAT);\n        }\n        if (clear) {\n            searchTokens = searchTokens.filter(item => removeType.indexOf(item.type) === -1);\n        }\n        const existingKeys = new Set();\n        searchTokens.forEach(token => existingKeys.add(token.value));\n        if (type === FEATURE_TYPE.OBS) {\n            const obsCat = state.dataset.obsCat;\n            values.forEach(val => {\n                const type = obsCat.indexOf(val) !== -1 ? FEATURE_TYPE.OBS_CAT : FEATURE_TYPE.OBS;\n                if (!existingKeys.has(val)) {\n                    existingKeys.add(val);\n                    searchTokens.push({value: val, type: type});\n                }\n            });\n        } else {\n            values.forEach(val => {\n                if (!existingKeys.has(val)) {\n                    existingKeys.add(val);\n                    searchTokens.push({value: val, type: type});\n                }\n            });\n        }\n        dispatch({type: SET_SEARCH_TOKENS, payload: searchTokens.slice()});\n        dispatch(_updateCharts(null, updateActiveFeature));\n    };\n}\n\nexport function setSearchTokensDirectly(tokens, updateActiveFeature = true) {\n    return function (dispatch, getState) {\n        dispatch({type: SET_SEARCH_TOKENS, payload: tokens});\n        dispatch(_updateCharts(null, updateActiveFeature));\n    };\n}\n\n\nexport function setSelectedEmbedding(payload) {\n    return function (dispatch, getState) {\n        let prior = getState().embeddings;\n        dispatch({type: SET_SELECTED_EMBEDDING, payload: payload});\n        dispatch(_updateCharts(err => {\n            dispatch({type: SET_SELECTED_EMBEDDING, payload: prior});\n        }));\n    };\n}\n\n\nexport function setSavedDatasetState(payload) {\n    return {type: SET_SAVED_DATASET_STATE, payload: payload};\n}\n\nfunction setDatasetFilters(payload) {\n    return {type: SET_DATASET_FILTERS, payload: payload};\n}\n\nfunction setDatasetViews(payload) {\n    return {type: SET_DATASET_VIEWS, payload: payload};\n}\n\n\nexport function setDataset(id, loadDefaultView = true, setLoading = true) {\n    return function (dispatch, getState) {\n        if (setLoading) {\n            dispatch(_setLoading(true));\n        }\n        let savedDatasetState = getState().savedDatasetState[id];\n        const datasetChoices = getState().datasetChoices;\n        let selectedChoice = null; // has id, owner, name\n        for (let i = 0; i < datasetChoices.length; i++) {\n            if (datasetChoices[i].id === id) {\n                selectedChoice = datasetChoices[i];\n                break;\n            }\n        }\n        if (selectedChoice == null) { // search by name\n            for (let i = 0; i < datasetChoices.length; i++) {\n                if (datasetChoices[i].name === id) {\n                    selectedChoice = datasetChoices[i];\n                    break;\n                }\n            }\n        }\n        if (selectedChoice == null) { //\n            dispatch(_setLoading(false));\n            dispatch(setMessage('Unable to find dataset'));\n            return Promise.reject('Unable to find dataset');\n        }\n        // force re-render selected dataset dropdown\n        let dataset = Object.assign({}, selectedChoice);\n        dataset.id = id;\n        dataset.embeddings = [];\n        dataset.features = [];\n        dataset.obs = [];\n        dataset.obsCat = [];\n\n        let categoryNameResults;\n        let datasetViews = [];\n        let newDataset;\n        let jobResults = [];\n\n        function onPromisesComplete() {\n            newDataset = Object.assign({}, dataset, newDataset);\n            newDataset.api = dataset.api;\n            newDataset.features = newDataset.var;\n            newDataset.features.sort((a, b) => {\n                a = a.toLowerCase();\n                b = b.toLowerCase();\n                const aIsDigit = a[0] >= '0' && a[0] <= '9';\n                const bIsDigit = b[0] >= '0' && b[0] <= '9';\n                if (aIsDigit) {\n                    a = 'zzzzzz' + a;\n                }\n                if (bIsDigit) {\n                    b = 'zzzzzz' + b;\n                }\n                // put features that start with a number last\n                return (a < b ? -1 : (a === b ? 0 : 1));\n            });\n            newDataset.id = id;\n            dispatch(_setDataset(newDataset));\n\n            if (newDataset.results && newDataset.results.length > 0) {\n                jobResults = jobResults.concat(newDataset.results);\n            }\n            dispatch(setJobResults(jobResults));\n            // if (jobResults.length === 1) {\n            //     dispatch(setJobResult(jobResults[0].id));\n            // }\n\n            if (categoryNameResults != null) {\n                dispatch(_handleCategoricalNameChange(categoryNameResults));\n            }\n            dispatch(setDatasetViews(datasetViews));\n            // dispatch(setDatasetFilters(datasetFilters));\n            if (savedDatasetState) {\n                dispatch(restoreSavedView(savedDatasetState));\n            } else if (loadDefaultView) {\n                dispatch(loadDefaultDatasetView());\n            }\n        }\n\n        const isDirectAccess = dataset.access === 'direct' || process.env.REACT_APP_STATIC === 'true';\n        if (isDirectAccess) {\n            dataset.api = new DirectAccessDataset();\n        } else {\n            dataset.api = new RestDataset();\n        }\n\n        const initPromise = dataset.api.init(id, dataset.url);\n        const promises = [initPromise];\n\n        promises.push(dataset.api.getJobs(id).then(jobs => {\n            jobResults = jobs;\n        }));\n\n        const schemaPromise = dataset.api.getSchemaPromise().then(result => {\n            newDataset = result;\n        });\n        promises.push(schemaPromise);\n\n        if (!isDirectAccess) {\n            const categoriesRenamePromise = getState().serverInfo.api.getCategoryNamesPromise(dataset.id).then(results => {\n                categoryNameResults = results;\n            });\n\n            const savedViewsPromise = getState().serverInfo.api.getViewsPromise(dataset.id).then(results => {\n                datasetViews = results;\n            });\n            promises.push(categoriesRenamePromise);\n            promises.push(savedViewsPromise);\n        }\n\n        return Promise.all(promises).then(() => onPromisesComplete()).finally(() => {\n            if (setLoading) {\n                dispatch(_setLoading(false));\n            }\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve dataset. Please try again.');\n        });\n\n    };\n}\n\n\nfunction handleSelectionResult(selectionResult, clear) {\n    // not need to clear when adding a new feature\n    return function (dispatch, getState) {\n        const state = getState();\n        if (selectionResult) {\n            dispatch(setSelection(selectionResult.indices));\n            // userPoints are in chart space, points are in server space, count is total number of cells selected\n            if (selectionResult.summary) {\n                // merge or clear selection\n                let selectionSummary = clear ? selectionResult.summary : Object.assign({}, getState().featureSummary, selectionResult.summary);\n                dispatch(setFeatureSummary(selectionSummary));\n            }\n            if (selectionResult.distribution) {\n                let selectedDistributionData = state.selectedDistributionData;\n                if (clear) {\n                    selectedDistributionData = [];\n                }\n                const groupedSearchTokens = groupBy(state.searchTokens, 'type');\n                addFeatureSetsToX(getFeatureSets(state.markers, groupedSearchTokens[FEATURE_TYPE.FEATURE_SET] || []), (groupedSearchTokens[FEATURE_TYPE.X] || []).map(item => item.value));\n                selectedDistributionData = updateDistributionData(selectionResult.distribution, selectedDistributionData, groupedSearchTokens);\n                dispatch(setSelectedDistributionData(selectedDistributionData));\n            }\n        }\n    };\n}\n\nfunction updateDistributionData(newDistributionData, existingDistributionData, groupedSearchTokens) {\n    let keys = new Set(Object.keys(existingDistributionData));\n    if (newDistributionData) {\n        for (const key in newDistributionData) {\n            keys.add(key);\n        }\n    }\n    keys.forEach(key => {\n        existingDistributionData[key] = _updateDistributionData(newDistributionData ? newDistributionData[key] : null, existingDistributionData[key] || [], groupedSearchTokens);\n    });\n    return existingDistributionData;\n}\n\nfunction _updateDistributionData(newDistributionData, existingDistributionData, groupedSearchTokens) {\n    const xTokens = (groupedSearchTokens[FEATURE_TYPE.X] || []).map(item => item.value);\n    const obsCatTokens = (groupedSearchTokens[FEATURE_TYPE.OBS_CAT] || []).map(item => item.value);\n    const obsTokens = (groupedSearchTokens[FEATURE_TYPE.OBS] || []).map(item => item.value);\n    const moduleTokens = (groupedSearchTokens[FEATURE_TYPE.MODULE] || []).map(item => item.value);\n    let dimensionKeys = [obsCatTokens.join('-')];\n    // keep active dimensions and features only\n    let distributionData = existingDistributionData.filter(entry => dimensionKeys.indexOf(entry.dimension) !== -1 &&\n        (xTokens.indexOf(entry.feature) !== -1 || obsTokens.indexOf(entry.feature) !== -1 || moduleTokens.indexOf(entry.feature) !== -1));\n\n    if (newDistributionData) {\n        // remove old data that is also in new data\n        newDistributionData.forEach(entry => {\n            for (let i = 0; i < distributionData.length; i++) {\n                if (distributionData[i].dimension === entry.dimension && distributionData[i].feature === entry.feature) {\n                    distributionData.splice(i, 1);\n                    break;\n                }\n            }\n        });\n        distributionData = distributionData.concat(newDistributionData);\n    }\n\n    // sort features matching X entry order\n    let featureSortOrder = {};\n    xTokens.concat(obsTokens).concat(moduleTokens).forEach((name, index) => {\n        featureSortOrder[name] = index;\n    });\n    distributionData.sort((a, b) => {\n        a = featureSortOrder[a.feature];\n        b = featureSortOrder[b.feature];\n        return a - b;\n    });\n    return distributionData;\n}\n\nfunction _updateCharts(onError, updateActiveFeature = true) {\n    return function (dispatch, getState) {\n        const state = getState();\n        if (state.dataset == null) {\n            return;\n        }\n        dispatch(_setLoading(true));\n        const groupedSearchTokens = groupBy(state.searchTokens, 'type');\n        const featureSetTokens = (groupedSearchTokens[FEATURE_TYPE.FEATURE_SET] || []);\n        const xTokens = (groupedSearchTokens[FEATURE_TYPE.X] || []).map(token => token.value);\n        const obsTokens = (groupedSearchTokens[FEATURE_TYPE.OBS] || []).map(token => token.value);\n        const obsCatTokens = (groupedSearchTokens[FEATURE_TYPE.OBS_CAT] || []).map(token => token.value);\n        const moduleTokens = (groupedSearchTokens[FEATURE_TYPE.MODULE] || []).map(token => token.value);\n        addFeatureSetsToX(getFeatureSets(state.markers, featureSetTokens), xTokens);\n        let distribution = (xTokens.length > 0 || moduleTokens.length > 0 || obsTokens.length > 0 || featureSetTokens.length > 0) && obsCatTokens.length > 0;\n        const embeddings = state.embeddings;\n        let distributionData = state.distributionData;\n        let selectedDistributionData = state.selectedDistributionData;\n        let embeddingData = state.embeddingData;\n        const globalFeatureSummary = state.globalFeatureSummary;\n        const cachedData = state.cachedData;\n        const embeddingsToFetch = [];\n        const valuesToFetch = new Set();\n        const embeddingKeys = new Set();\n        const features = new Set();\n        const filterJson = getFilterJson(state);\n        xTokens.concat(obsTokens).concat(obsCatTokens).concat(moduleTokens).forEach(feature => {\n            features.add(feature);\n        });\n        const embeddingImagesToFetch = [];\n        embeddings.forEach(embedding => {\n            const embeddingKey = getEmbeddingKey(embedding);\n            embeddingKeys.add(embeddingKey);\n            if (cachedData[embeddingKey] == null) {\n                if (embedding.dimensions > 0) {\n                    embeddingsToFetch.push(embedding);\n                } else {\n                    if (cachedData[embedding.attrs.group] == null) {\n                        valuesToFetch.add(embedding.attrs.group);\n                    }\n\n                    embedding.attrs.selection.forEach(selection => {\n                        if (cachedData[selection[0]] == null) {\n                            valuesToFetch.add(selection[0]);\n                        }\n                    });\n                    embeddingImagesToFetch.push(embedding);\n                }\n            }\n        });\n        const promises = [];\n        embeddingImagesToFetch.forEach(embedding => {\n            const embeddingKey = getEmbeddingKey(embedding);\n            if (cachedData[embeddingKey] == null) {\n                const url = state.dataset.api.getFileUrl(embedding.image);\n                const imagePromise = new Promise((resolve, reject) => {\n                    fetch(url).then(result => result.text()).then(text => document.createRange().createContextualFragment(text).firstElementChild).then(node => {\n                        // inline css\n                        if (node.querySelector('style')) {\n                            const div = document.createElement('div');\n                            div.style.display = 'none';\n                            div.appendChild(node);\n                            document.body.appendChild(div);\n                            const style = node.querySelector('style');\n                            const rules = style.sheet.rules;\n\n                            for (let i = 0; i < rules.length; i++) {\n                                const rule = rules[i];\n                                const matches = node.querySelectorAll(rule.selectorText);\n                                const styleMap = rule.styleMap;\n                                for (let j = 0; j < matches.length; j++) {\n                                    const child = matches[j];\n                                    for (let key of styleMap.keys()) {\n                                        child.style[key] = styleMap.get(key).toString();\n                                    }\n                                }\n                            }\n                            div.remove();\n                            style.remove();\n                        }\n                        cachedData[embeddingKey] = node;\n                        resolve();\n                    });\n                });\n                promises.push(imagePromise);\n            }\n\n        });\n        if (filterJson != null) {\n            let filterDependencies = getDatasetFilterDependencies(state.datasetFilter);\n            filterDependencies.features.forEach(feature => {\n                if (cachedData[feature] == null) {\n                    valuesToFetch.add(feature);\n                }\n            });\n        }\n        features.forEach(feature => {\n            if (cachedData[feature] == null) {\n                valuesToFetch.add(feature);\n            }\n        });\n\n        (groupedSearchTokens[FEATURE_TYPE.OTHER] || []).forEach(item => features.add(item.value)); // don't fetch \"other\" but add to features so they are displayed in embeddings\n        // set active flag on cached embedding data\n        embeddingData.forEach(traceInfo => {\n            const embeddingKey = getEmbeddingKey(traceInfo.embedding);\n            const active = embeddingKeys.has(embeddingKey) && (features.has(traceInfo.name) || (features.size === 0 && traceInfo.name === '__count'));\n            if (active) {\n                traceInfo.date = new Date();\n            }\n            traceInfo.active = active;\n        });\n\n        let distributionCategories = obsCatTokens.slice();\n        let distributionCategoryKeys = [distributionCategories.join('-')];\n        let distributionMeasuresToFetch = new Set();\n        if (distribution) { // TODO cleanup this code\n            let cachedDistributionKeys = {}; // category-feature\n            for (const key in distributionData) {\n                distributionData[key].forEach(distributionDataItem => {\n                    cachedDistributionKeys[distributionDataItem.name + '-' + distributionDataItem.feature] = true;\n                });\n            }\n            distributionCategoryKeys.forEach(category => {\n                xTokens.forEach(feature => {\n                    let key = category + '-' + feature;\n                    if (cachedDistributionKeys[key] == null) {\n                        distributionMeasuresToFetch.add(feature);\n                    }\n                });\n                obsTokens.forEach(feature => {\n                    let key = category + '-' + feature;\n                    if (cachedDistributionKeys[key] == null) {\n                        distributionMeasuresToFetch.add('obs/' + feature);\n                    }\n                });\n                moduleTokens.forEach(feature => {\n                    let key = category + '-' + feature;\n                    if (cachedDistributionKeys[key] == null) {\n                        distributionMeasuresToFetch.add('modules/' + feature);\n                    }\n                });\n            });\n\n        }\n        let q = {};\n        if (embeddingsToFetch.length > 0) {\n            q.embedding = [];\n            embeddingsToFetch.forEach(embedding => {\n                if (embedding.mode != null) {// fetch unbinned coordinates\n                    const key = getEmbeddingKey(embedding, false);\n                    if (indexOf(embeddingsToFetch, (e => getEmbeddingKey(e) === key)) !== -1) {\n                        const index = indexOf(state.dataset.embeddings, (e => getEmbeddingKey(e, false) === key));\n                        if (index === -1) {\n                            throw new Error(key + ' not found in ' + state.dataset.embeddings);\n                        }\n                        embeddingsToFetch.push(state.dataset.embeddings[index]);\n                    }\n                }\n            });\n            embeddingsToFetch.forEach(embedding => {\n                q.embedding.push(embedding);\n            });\n        }\n        if (valuesToFetch.size > 0) {\n            const dataset = state.dataset;\n            q.values = {measures: [], dimensions: []};\n            valuesToFetch.forEach(value => {\n                if (dataset.obsCat.indexOf(value) !== -1) {\n                    q.values.dimensions.push(value);\n                } else if (dataset.obs.indexOf(value) !== -1) {\n                    q.values.measures.push('obs/' + value);\n                } else if (moduleTokens.indexOf(value) !== -1) {\n                    q.values.measures.push('module/' + value);\n                } else {\n                    q.values.measures.push(value);\n                }\n            });\n        }\n\n\n        const globalFeatureSummaryMeasuresCacheMiss = [];\n        const globalFeatureSummaryDimensionsCacheMiss = [];\n        xTokens.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryMeasuresCacheMiss.push(feature);\n            }\n        });\n        obsTokens.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryMeasuresCacheMiss.push('obs/' + feature);\n            }\n        });\n        moduleTokens.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryMeasuresCacheMiss.push('module/' + feature);\n            }\n        });\n        obsCatTokens.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryDimensionsCacheMiss.push(feature);\n            }\n        });\n\n\n        if (globalFeatureSummaryMeasuresCacheMiss.length > 0 || globalFeatureSummaryDimensionsCacheMiss.length > 0) {\n            q.stats = {\n                measures: globalFeatureSummaryMeasuresCacheMiss,\n                dimensions: globalFeatureSummaryDimensionsCacheMiss\n            };\n        }\n\n        if (distributionCategories.length > 0 && distributionMeasuresToFetch.size > 0) {\n            q.groupedStats = {\n                measures: Array.from(distributionMeasuresToFetch),\n                dimensions: [distributionCategories]\n            };\n        }\n\n\n        // TODO update selection in new embedding space\n        if (filterJson != null && (globalFeatureSummaryMeasuresCacheMiss.length > 0 || globalFeatureSummaryDimensionsCacheMiss.length > 0)) {\n            q.selection = {\n                filter: filterJson,\n                measures: globalFeatureSummaryDimensionsCacheMiss.length > 0 ? xTokens : globalFeatureSummaryMeasuresCacheMiss,\n                dimensions: obsCatTokens\n            };\n        }\n        const dataPromise = Object.keys(q).length > 0 ? state.dataset.api.getDataPromise(q, cachedData) : Promise.resolve({});\n        const allPromises = [dataPromise].concat(promises);\n        return Promise.all(allPromises).then(values => {\n            const result = values[0];\n            dispatch(setGlobalFeatureSummary(result.summary));\n            const newEmbeddingData = getNewEmbeddingData(state, features);\n            embeddingData = embeddingData.concat(newEmbeddingData);\n            dispatch(setDistributionData(updateDistributionData(result.distribution, distributionData, groupedSearchTokens)));\n            dispatch(setEmbeddingData(embeddingData));\n            if (updateActiveFeature) {\n                dispatch(setActiveFeature(getNewActiveFeature(embeddingData)));\n            }\n            if (result.selection) {\n                dispatch(handleSelectionResult(result.selection, false));\n            } else { // clear selection\n                dispatch(setSelectedDistributionData(updateDistributionData(null, selectedDistributionData, groupedSearchTokens)));\n            }\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve data. Please try again.');\n            if (onError) {\n                onError(err);\n            }\n        });\n    };\n\n}\n\n\nfunction getNewActiveFeature(embeddingData) {\n    let traces = embeddingData.filter(trace => trace.active);\n    if (traces.length === 0) {\n        return null;\n    }\n    const trace = traces[traces.length - 1];\n    const embeddingKey = getTraceKey(trace); // last feature becomes primary\n    return {name: trace.name, type: trace.featureType, embeddingKey: embeddingKey};\n}\n\nfunction getFeatureType(dataset, feature) {\n    if (feature === '__count') {\n        return FEATURE_TYPE.COUNT;\n    } else if (dataset.obsCat.indexOf(feature) !== -1) {\n        return FEATURE_TYPE.OBS_CAT;\n    } else if (dataset.obs.indexOf(feature) !== -1) {\n        return FEATURE_TYPE.OBS;\n    } else if (dataset.modules && findIndex(dataset.modules, item => item.id === feature) !== -1) {\n        return FEATURE_TYPE.MODULE;\n    } else if (dataset.var.indexOf(feature) !== -1) {\n        return FEATURE_TYPE.X;\n    }\n    return FEATURE_TYPE.OTHER;\n}\n\n\n// depends on global feature summary\nfunction getNewEmbeddingData(state, features) {\n    const embeddings = state.embeddings;\n    const embeddingData = state.embeddingData;\n    const newEmbeddingData = [];\n    const globalFeatureSummary = state.globalFeatureSummary;\n    const interpolator = state.interpolator;\n    const dataset = state.dataset;\n    const cachedData = state.cachedData;\n    const selection = state.selection;\n    const categoricalNames = state.categoricalNames;\n    const existingFeaturePlusEmbeddingKeys = new Set();\n    embeddingData.forEach(embeddingDatum => {\n        const embeddingKey = getEmbeddingKey(embeddingDatum.embedding);\n        const key = embeddingDatum.name + '_' + embeddingKey;\n        existingFeaturePlusEmbeddingKeys.add(key);\n    });\n    if (features.size === 0) {\n        features.add('__count');\n    }\n\n    embeddings.forEach(embedding => {\n        const embeddingKey = getEmbeddingKey(embedding);\n        // type can be image, scatter, or meta_image\n        const traceType = embedding.spatial != null ? embedding.spatial.type : (embedding.type ? embedding.type : TRACE_TYPE_SCATTER);\n        let coordinates = traceType !== TRACE_TYPE_META_IMAGE ? cachedData[embeddingKey] : null;\n        if (coordinates == null && embedding.mode != null) {\n            const unbinnedCoords = cachedData[getEmbeddingKey(embedding, false)];\n            const binnedValues = createEmbeddingDensity(unbinnedCoords[embedding.name + '_1'], unbinnedCoords[embedding.name + '_2']);\n            const binnedCoords = {};\n            binnedCoords[embedding.name + '_1'] = binnedValues.x;\n            binnedCoords[embedding.name + '_2'] = binnedValues.y;\n            binnedCoords[embedding.name + '_index'] = binnedValues.index;\n            binnedCoords[embedding.name + '_3'] = binnedValues.index;\n            cachedData[embeddingKey] = binnedCoords; // save binned coords\n            coordinates = binnedCoords;\n        }\n        const x = traceType !== TRACE_TYPE_META_IMAGE ? coordinates[embedding.name + '_1'] : null;\n        const y = traceType !== TRACE_TYPE_META_IMAGE ? coordinates[embedding.name + '_2'] : null;\n        const z = traceType !== TRACE_TYPE_META_IMAGE ? coordinates[embedding.name + '_3'] : null;\n\n        features.forEach(feature => {\n            const featurePlusEmbeddingKey = feature + '_' + embeddingKey;\n            let featureKey = feature;\n            if (!existingFeaturePlusEmbeddingKeys.has(featurePlusEmbeddingKey)) {\n                let featureSummary = globalFeatureSummary[feature];\n                let values = cachedData[featureKey];\n                if (values == null) {\n                    if (feature === '__count') {\n                        values = new Int8Array(dataset.shape[0]);\n                        values.fill(1);\n                    } else {\n                        console.log(featureKey + ' not found');\n                    }\n                }\n                let purity = null;\n                if (values.value !== undefined) {\n                    purity = values.purity;\n                    values = values.value;\n                }\n                const featureType = getFeatureType(dataset, feature);\n                let isCategorical = featureType === FEATURE_TYPE.OBS_CAT;\n                let colorScale = null;\n\n                if (!isCategorical) {\n                    // __count range is per embedding so we always recompute for now\n                    if (isPlainObject(values)) {\n                        let newValues = new Float32Array(dataset.shape[0]);\n                        for (let i = 0, n = values.index.length; i < n; i++) {\n                            newValues[values.index[i]] = values.values[i];\n                        }\n                        values = newValues;\n                    }\n                    if (featureSummary == null || feature === '__count') {\n\n                        let min = Number.MAX_VALUE;\n                        let max = -Number.MAX_VALUE;\n                        let sum = 0;\n                        for (let i = 0, n = values.length; i < n; i++) {\n                            let value = values[i];\n                            min = value < min ? value : min;\n                            max = value > max ? value : max;\n                            sum += value;\n                        }\n                        featureSummary = {min: min, max: max, mean: sum / values.length};\n                        globalFeatureSummary[feature] = featureSummary;\n                    }\n                    let domain = [featureSummary.min, featureSummary.max];\n                    if (featureSummary.customMin != null && !isNaN(featureSummary.customMin)) {\n                        domain[0] = featureSummary.customMin;\n                    }\n                    if (featureSummary.customMax != null && !isNaN(featureSummary.customMax)) {\n                        domain[1] = featureSummary.customMax;\n                    }\n                    colorScale = createColorScale(interpolator).domain(domain);\n\n                } else {\n                    let traceUniqueValues = featureSummary.categories;\n                    // if (traceUniqueValues.length === 1 && traceUniqueValues[0] === true) {\n                    //     traceUniqueValues = traceUniqueValues.concat([null]);\n                    //     traceSummary.categories = traceUniqueValues;\n                    //     traceSummary.counts = traceSummary.counts.concat([state.dataset.shape[0] - traceSummary.counts[0]]);\n                    // }\n\n                    let colorMap = dataset.colors ? dataset.colors[feature] : null;\n                    let colors;\n                    if (colorMap == null) {\n                        if (traceUniqueValues.length <= 10) {\n                            colors = schemeCategory10;\n                        } else if (traceUniqueValues.length <= 12) {\n                            colors = schemePaired;\n                        } else if (traceUniqueValues.length <= 20) {\n                            colors = CATEGORY_20B;\n                        } else {\n                            colors = CATEGORY_20B.concat(CATEGORY_20C);\n                        }\n                    } else {\n                        if (isArray(colorMap)) {\n                            colors = colorMap;\n                        } else {\n                            colors = [];\n                            traceUniqueValues.forEach((value, index) => {\n                                let color = colorMap[value];\n                                if (color == null) {\n                                    color = schemeCategory10[index % schemeCategory10.length];\n                                }\n                                colors.push(color);\n                            });\n                        }\n                    }\n\n                    // load saved colors from database\n                    // category -> originalValue -> {newValue, positiveMarkers, negativeMarkers, color}\n                    const originalValueToData = categoricalNames[feature];\n                    if (originalValueToData) {\n                        for (const originalValue in originalValueToData) {\n                            for (const originalValue in originalValueToData) {\n                                const value = originalValueToData[originalValue];\n                                if (value.color != null) {\n                                    const index = traceUniqueValues.indexOf(originalValue);\n                                    if (index !== -1) {\n                                        colors[index] = value.color;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    colorScale = scaleOrdinal(colors).domain(traceUniqueValues);\n                    colorScale.summary = featureSummary;\n                }\n\n                if (traceType === TRACE_TYPE_META_IMAGE && embedding.categoryToIndices == null) {\n                    const groupBy = cachedData[embedding.attrs.group];\n                    const categoryToIndices = {};\n                    const passingIndices = getPassingFilterIndices(cachedData, {filters: embedding.attrs.selection});\n                    if (passingIndices.size === 0) {\n                        throw new Error('No passing indices found');\n                    }\n                    for (let index of passingIndices) {\n                        const category = groupBy[index];\n                        let indices = categoryToIndices[category];\n                        if (indices === undefined) {\n                            indices = [];\n                            categoryToIndices[category] = indices;\n                        }\n                        indices.push(index);\n                    }\n                    embedding.categoryToIndices = categoryToIndices;\n                }\n\n                let chartData = {\n                    embedding: Object.assign({}, embedding),\n                    name: feature,\n                    featureType: featureType,\n                    x: x,\n                    y: y,\n                    z: z != null ? z : undefined,\n                    dimensions: z != null ? 3 : 2,\n                    date: new Date(),\n                    active: true,\n                    colorScale: colorScale,\n                    continuous: !isCategorical,\n                    isCategorical: isCategorical,\n                    values: values, // for color\n                    type: traceType\n                };\n                if (chartData.mode != null) {\n                    chartData.index = coordinates[embedding.name + '_index'];\n                    chartData._values = chartData.values;\n                    chartData.values = summarizeDensity(chartData.values, chartData.index, selection, chartData.continuous ? 'max' : 'mode');\n                }\n                if (traceType === TRACE_TYPE_SCATTER) {\n                    chartData.positions = getPositions(chartData);\n                }\n                if (traceType === TRACE_TYPE_META_IMAGE) {\n                    const svg = cachedData[getEmbeddingKey(embedding)];\n                    chartData.source = svg.cloneNode(true);\n                    chartData.zscore = true;\n                    chartData.gallerySource = svg.cloneNode(true);\n                    chartData.categoryToIndices = embedding.categoryToIndices;\n\n                    if (chartData.continuous) {\n                        // compute mean and standard deviation\n                        colorScale.domain([-3, 3]);\n                        let mean = 0;\n                        let count = 0;\n                        for (let category in embedding.categoryToIndices) {\n                            const indices = embedding.categoryToIndices[category];\n                            for (let i = 0, n = indices.length; i < n; i++) {\n                                mean += chartData.values[indices[i]];\n                                count++;\n                            }\n                        }\n                        mean = mean / count;\n                        let sum = 0;\n                        for (let category in embedding.categoryToIndices) {\n                            const indices = embedding.categoryToIndices[category];\n                            for (let i = 0, n = indices.length; i < n; i++) {\n                                let diff = chartData.values[indices[i]] - mean;\n                                diff = diff * diff;\n                                sum += diff;\n                            }\n                        }\n                        const n = count - 1;\n                        const variance = sum / n;\n                        chartData.mean = mean;\n                        chartData.stdev = Math.sqrt(variance);\n                    }\n                    chartData.fullCategoryToStats = createCategoryToStats(chartData, new Set());\n                    chartData.categoryToStats = state.selection.size === 0 ? chartData.fullCategoryToStats : createCategoryToStats(chartData, state.selection);\n                }\n                updateTraceColors(chartData);\n\n                if (traceType === TRACE_TYPE_IMAGE) {\n                    // TODO cache image\n                    chartData.indices = !isCategorical ? indexSort(values, true) : randomSeq(values.length);\n                    const url = dataset.api.getFileUrl(embedding.spatial.image);\n                    chartData.tileSource = new OpenSeadragon.ImageTileSource({\n                        url: url,\n                        buildPyramid: true,\n                        crossOriginPolicy: \"Anonymous\"\n                    });\n                }\n\n                newEmbeddingData.push(chartData);\n            }\n        });\n    });\n    return newEmbeddingData;\n\n}\n\nfunction handleError(dispatch, err, message) {\n    console.log(err);\n    if (err.status === 401) {\n        dispatch(setMessage('Your session has expired. Please login again.'));\n        return dispatch(logout());\n    }\n    if (message == null) {\n        message = err instanceof CustomError ? err.message : 'An unexpected error occurred. Please try again.';\n    }\n    dispatch(setMessage(new Error(message)));\n}\n\nexport function listDatasets() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        return getState().serverInfo.api.getDatasetsPromise()\n            .then(choices => {\n                dispatch(_setDatasetChoices(choices));\n            })\n            .finally(() => {\n                dispatch(_setLoading(false));\n            })\n            .catch(err => {\n                handleError(dispatch, err, 'Unable to retrieve datasets. Please try again.');\n            });\n    };\n}\n\n\nexport function getDatasetStateJson(state) {\n    const {\n        chartOptions,\n        combineDatasetFilters,\n        activeFeature,\n        dataset,\n        embeddingLabels,\n        distributionPlotOptions,\n        distributionPlotInterpolator,\n        embeddings,\n        searchTokens,\n        datasetFilter,\n        interpolator,\n        jobResultId,\n        markerOpacity,\n        pointSize,\n        unselectedMarkerOpacity,\n        distributionData\n    } = state;\n\n    let json = {\n        dataset: dataset.id,\n        embeddings: embeddings\n    };\n    if (jobResultId != null) {\n        json.jobId = jobResultId;\n    }\n\n    const scatterPlot = chartOptions.scatterPlot;\n    if (json.embeddings.length > 0 && scatterPlot != null) {\n        json.camera = scatterPlot.getCameraDef();\n\n    }\n    if (activeFeature != null) {\n        json.activeFeature = activeFeature;\n    }\n    let jsonChartOptions = {};\n\n    const defaultChartOptions = {\n        showFog: DEFAULT_SHOW_FOG, darkMode: DEFAULT_DARK_MODE,\n        labelFontSize: DEFAULT_LABEL_FONT_SIZE,\n        labelStrokeWidth: DEFAULT_LABEL_STROKE_WIDTH\n    };\n\n    for (let key in defaultChartOptions) {\n        let value = chartOptions[key];\n        if (value !== defaultChartOptions[key]) {\n            jsonChartOptions[key] = value;\n        }\n    }\n    if (pointSize !== DEFAULT_POINT_SIZE) {\n        json.pointSize = pointSize;\n    }\n\n\n    if (Object.keys(jsonChartOptions).length > 0) {\n        json.chartOptions = jsonChartOptions;\n    }\n\n    if (searchTokens.length > 0) {\n        json.q = searchTokens;\n    }\n\n    let datasetFilterJson = {};\n    for (let key in datasetFilter) {\n        let filterObject = datasetFilter[key];\n        if (Array.isArray(filterObject)) { // brush filter\n            const array = [];\n            filterObject.forEach(brush => {\n                const brushJson = Object.assign({}, brush);\n                brushJson.indices = Array.from(brush.indices);\n                array.push(brushJson);\n            });\n            datasetFilterJson[key] = array;\n        } else if (filterObject.operation === 'in') {\n            datasetFilterJson[key] = {operation: filterObject.operation, value: filterObject.value};\n        } else {\n            if (filterObject.operation !== '' && !isNaN(filterObject.value) && filterObject.value != null) {\n                datasetFilterJson[key] = {operation: filterObject.operation, value: filterObject.value};\n            }\n        }\n    }\n    if (Object.keys(datasetFilterJson).length > 0) {\n        json.datasetFilter = datasetFilterJson;\n    }\n    if (combineDatasetFilters !== 'and') {\n        json.combineDatasetFilters = combineDatasetFilters;\n    }\n    if (markerOpacity !== DEFAULT_MARKER_OPACITY) {\n        json.markerOpacity = markerOpacity;\n    }\n    if (unselectedMarkerOpacity !== DEFAULT_UNSELECTED_MARKER_OPACITY) {\n        json.unselectedMarkerOpacity = unselectedMarkerOpacity;\n    }\n\n    if (distributionData && distributionData.length > 0) {\n        json.distributionPlotOptions = distributionPlotOptions;\n        json.distributionPlotInterpolator = Object.assign({}, distributionPlotInterpolator, {value: null});\n    }\n\n    // TODO save custom color ranges per feature\n    const interpolatorJson = Object.assign({}, interpolator, {value: undefined});\n    if (interpolatorJson.name !== 'Viridis' || interpolatorJson.reversed) {\n        json.colorScheme = interpolatorJson;\n    }\n\n    if (embeddingLabels.length > 0) {\n        json.embeddingLabels = embeddingLabels;\n    }\n    return json;\n}\n","import {isPlainObject} from 'lodash';\nimport {combineReducers} from 'redux';\nimport {\n    ADD_DATASET,\n    DEFAULT_DARK_MODE,\n    DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR,\n    DEFAULT_DRAG_MODE,\n    DEFAULT_INTERPOLATOR,\n    DEFAULT_LABEL_FONT_SIZE,\n    DEFAULT_LABEL_STROKE_WIDTH,\n    DEFAULT_MARKER_OPACITY,\n    DEFAULT_POINT_SIZE,\n    DEFAULT_SHOW_AXIS,\n    DEFAULT_SHOW_FOG,\n    DEFAULT_UNSELECTED_MARKER_OPACITY,\n    DELETE_DATASET,\n    RESTORE_VIEW,\n    SET_ACTIVE_FEATURE,\n    SET_CATEGORICAL_NAME,\n    SET_CHART_OPTIONS,\n    SET_CHART_SIZE,\n    SET_COMBINE_DATASET_FILTERS,\n    SET_DATASET,\n    SET_DATASET_CHOICES,\n    SET_DATASET_FILTER,\n    SET_DATASET_FILTERS,\n    SET_DATASET_VIEWS,\n    SET_DIALOG,\n    SET_DISTRIBUTION_DATA,\n    SET_DISTRIBUTION_PLOT_INTERPOLATOR,\n    SET_DISTRIBUTION_PLOT_OPTIONS,\n    SET_DOMAIN,\n    SET_EMAIL,\n    SET_EMBEDDING_DATA,\n    SET_EMBEDDING_LABELS,\n    SET_FEATURE_SUMMARY,\n    SET_GLOBAL_FEATURE_SUMMARY,\n    SET_INTERPOLATOR,\n    SET_JOB_RESULT,\n    SET_JOB_RESULTS,\n    SET_LEGEND_SCROLL_POSITION,\n    SET_LOADING,\n    SET_LOADING_APP,\n    SET_MARKER_OPACITY,\n    SET_MARKERS,\n    SET_MESSAGE,\n    SET_POINT_SIZE,\n    SET_PRIMARY_CHART_SIZE,\n    SET_SAVED_DATASET_STATE,\n    SET_SEARCH_TOKENS,\n    SET_SELECTED_DISTRIBUTION_DATA,\n    SET_SELECTED_EMBEDDING,\n    SET_SELECTION,\n    SET_SERVER_INFO,\n    SET_TAB,\n    SET_UNSELECTED_MARKER_OPACITY,\n    SET_UNSELECTED_POINT_SIZE,\n    SET_USER,\n    UPDATE_CATEGORICAL_COLOR,\n    UPDATE_CATEGORICAL_NAME,\n    UPDATE_DATASET\n} from '../actions';\nimport {createCategoryToStats} from '../MetaEmbedding';\nimport {\n    createColorScale,\n    FEATURE_TYPE,\n    getInterpolator,\n    INTERPOLATOR_SCALING_NONE,\n    NATSORT,\n    TRACE_TYPE_META_IMAGE,\n    updateTraceColors\n} from '../util';\n\n\nconst DIST_PLOT_OPTIONS = {\n    chartType: 'dotplot',\n    violinScale: 'width',\n    violinHeight: 100,\n    violinWidth: 80,\n    violinShowBoxplot: true\n};\nconst DEFAULT_DIST_PLOT_OPTIONS = {\n    X: DIST_PLOT_OPTIONS,\n    modules: Object.assign({}, DIST_PLOT_OPTIONS, {chartType: 'heatmap'}),\n    obs: Object.assign({}, DIST_PLOT_OPTIONS, {chartType: 'violin'})\n};\n\nconst DEFAULT_INTERPOLATOR_OBJ = {\n    name: DEFAULT_INTERPOLATOR,\n    value: getInterpolator(DEFAULT_INTERPOLATOR),\n    reversed: false\n};\n\nconst DISTRIBUTION_PLOT_INTERPOLATOR_OBJ = {\n    name: DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR,\n    value: getInterpolator(DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR),\n    reversed: false,\n    scale: INTERPOLATOR_SCALING_NONE\n};\n\nconst DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR_OBJ = {\n    X: DISTRIBUTION_PLOT_INTERPOLATOR_OBJ,\n    modules: DISTRIBUTION_PLOT_INTERPOLATOR_OBJ,\n    obs: DISTRIBUTION_PLOT_INTERPOLATOR_OBJ\n};\nconst DEFAULT_PRIMARY_CHART_SIZE = {\n    width: window.innerWidth - 280,\n    height: Math.max(300, window.innerHeight - 370)\n};\n\nconst DEFAULT_CHART_OPTIONS = {\n    animating: false,\n    dragmode: DEFAULT_DRAG_MODE,\n    showGalleryLabels: false,\n    showAxis: DEFAULT_SHOW_AXIS,\n    showFog: DEFAULT_SHOW_FOG,\n    darkMode: DEFAULT_DARK_MODE,\n    labelFontSize: DEFAULT_LABEL_FONT_SIZE,\n    labelStrokeWidth: DEFAULT_LABEL_STROKE_WIDTH\n};\n\nfunction chartSize(state = 300, action) {\n    switch (action.type) {\n        case SET_CHART_SIZE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction primaryChartSize(state = DEFAULT_PRIMARY_CHART_SIZE, action) {\n    switch (action.type) {\n        case SET_PRIMARY_CHART_SIZE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n/**\n *\n * @param state Array of {value:str, type:str} where type is one of FEATURE_TYPE\n * @param action\n * @returns {*|*[]}\n */\nfunction searchTokens(state = [], action) {\n    switch (action.type) {\n        case SET_SEARCH_TOKENS:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.q || [];\n        default:\n            return state;\n    }\n}\n\nfunction embeddingLabels(state = [], action) {\n    switch (action.type) {\n        case SET_EMBEDDING_LABELS:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.embeddingLabels || [];\n        default:\n            return state;\n    }\n}\n\n\nfunction chartOptions(state = DEFAULT_CHART_OPTIONS, action) {\n    switch (action.type) {\n        case SET_CHART_OPTIONS:\n            return Object.assign({}, action.payload);\n        case RESTORE_VIEW:\n            return action.payload.chartOptions ? Object.assign(DEFAULT_CHART_OPTIONS, action.payload.chartOptions) : state;\n        default:\n            return state;\n    }\n}\n\nfunction dataset(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            document.title = action.payload == null ? 'Cirro' : action.payload.name + ' - Cirro';\n            return action.payload;\n        case UPDATE_DATASET:\n            if (action.payload.id === state.id) { // update name, description, url\n                document.title = action.payload.name + ' - Cirro';\n                return Object.assign(state, action.payload);\n            }\n        default:\n            return state;\n    }\n}\n\nfunction datasetChoices(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET_CHOICES:\n            action.payload.sort(NATSORT);\n            return action.payload;\n        case SET_EMAIL:\n            if (action.payload == null) {\n                return [];\n            }\n            return state;\n        case ADD_DATASET:\n            state.push(action.payload);\n            state.sort(NATSORT);\n            return state.slice();\n        case UPDATE_DATASET:\n        case DELETE_DATASET:\n            let index = -1;\n            for (let i = 0; i < state.length; i++) {\n                if (state[i].id === action.payload.id) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                if (action.type === UPDATE_DATASET) {\n                    state[index] = action.payload;\n                    state.sort(NATSORT);\n                } else {\n                    state.splice(index, 1);\n                }\n\n                return state.slice();\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n\n// set the selected embeddings, each embedding has name (str) e.g X_umap, dimensions (int), mode (str)\nfunction embeddings(state = [], action) {\n    switch (action.type) {\n        case SET_SELECTED_EMBEDDING:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.embeddings != null ? action.payload.embeddings : state;\n        default:\n            return state;\n    }\n}\n\nfunction markers(state = [], action) {\n    switch (action.type) {\n        case SET_MARKERS:\n            return action.payload;\n        case SET_DATASET:\n            let result = action.payload == null ? [] : action.payload.markers || [];\n            if (isPlainObject(result)) { // old style, category=>name=>features\n                let newResults = [];\n                for (let categoryName in result) {\n                    let category = result[categoryName];\n                    for (let name in category) {\n                        newResults.push({\n                            category: categoryName,\n                            name: name,\n                            id: categoryName + '-' + name,\n                            readonly: true,\n                            features: category[name]\n                        });\n                    }\n                }\n                result = newResults;\n            }\n\n            if (action.payload != null && action.payload.markers_read_only != null) {\n                if (isPlainObject(action.payload.markers_read_only)) { // old style, name => features\n                    let markers = action.payload.markers_read_only;\n                    for (let categoryName in markers) {\n                        let category = markers[categoryName];\n                        for (let name in category) {\n                            result.push({\n                                category: categoryName,\n                                name: name,\n                                id: categoryName + '-' + name,\n                                readonly: true,\n                                features: category[name]\n                            });\n                        }\n                    }\n                } else {\n                    action.payload.markers_read_only.forEach(item => {\n                        item.readonly = true;\n                        result.push(item);\n                    });\n                }\n            }\n            result.forEach(item => {\n                if (item.id == null) {\n                    item.id = item.category + '-' + item.name;\n                }\n            });\n\n            return result;\n        default:\n            return state;\n    }\n}\n\n\nfunction markerOpacity(state = DEFAULT_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.markerOpacity != null ? action.payload.markerOpacity : state;\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerOpacity(state = DEFAULT_UNSELECTED_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_UNSELECTED_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerOpacity != null ? action.payload.unselectedMarkerOpacity : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction message(state = null, action) {\n    switch (action.type) {\n        case SET_MESSAGE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction email(state = null, action) {\n    switch (action.type) {\n        case SET_EMAIL:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction user(state = {}, action) {\n    switch (action.type) {\n        case SET_USER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction selection(state = new Set(), action) {\n    switch (action.type) {\n        case SET_SELECTION:\n            return action.payload;\n        case SET_DATASET:\n            return new Set();\n        default:\n            return state;\n    }\n}\n\n/**\n * Feature summary maps measure and dimension names to another object containing\n * categories and counts for dimensions, and statistics such as min, max for measures.\n * Features summaries are in the space of selected cells. Example:\n * featureSummary['louvain'] =\n *\n */\nfunction featureSummary(state = {}, action) {\n    switch (action.type) {\n        case SET_FEATURE_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n/**\n * Feature summary maps measure and dimension names to another object containing\n * categories and counts for dimensions, and statistics such as min, max for measures.\n * Features summaries are in the space of all cells.\n */\nfunction globalFeatureSummary(state = {}, action) {\n    switch (action.type) {\n        case SET_GLOBAL_FEATURE_SUMMARY:\n            if (action.payload != null) {\n                for (let key in action.payload) {\n                    state[key] = action.payload[key];\n                }\n                return Object.assign({}, state);\n            }\n            return state;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nfunction serverInfo(state = {}, action) {\n    switch (action.type) {\n        case SET_SERVER_INFO:\n            if (action.payload.ontology && action.payload.ontology.cellTypes) {\n                action.payload.ontology.cellTypes.forEach(item => item.text = item.name);\n                action.payload.ontology.cellTypes.sort((item1, item2) => NATSORT(item1.text, item2.text));\n            }\n            if (action.payload.datasetSelectorColumns == null) {\n                action.payload.datasetSelectorColumns = [{id: 'name', label: 'Name', visible: true}, {\n                    id: 'species',\n                    label: 'Species',\n                    visible: true\n                }, {\n                    id: 'title',\n                    label: 'Title',\n                    visible: true\n                }];\n            }\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction loadingApp(state = {loading: false, progress: 0}, action) {\n    switch (action.type) {\n        case SET_LOADING_APP:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\n// one of embedding, distribution, composition, results\nfunction tab(state = 'embedding', action) {\n    switch (action.type) {\n        case SET_TAB:\n            return action.payload;\n        case SET_DATASET:\n            return 'embedding';\n        case SET_DISTRIBUTION_DATA:\n            if (state === 'distribution' && action.payload.length === 0) {\n                return 'embedding';\n            }\n        case SET_SEARCH_TOKENS:\n            if (state === 'composition' && action.payload.filter(item => item.type === FEATURE_TYPE.OBS_CAT).length < 2) {\n                return 'embedding';\n            }\n        default:\n            return state;\n    }\n}\n\nfunction dialog(state = null, action) {\n    switch (action.type) {\n        case SET_DIALOG:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction distributionPlotInterpolator(state = DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR_OBJ, action) {\n    switch (action.type) {\n        case SET_DISTRIBUTION_PLOT_INTERPOLATOR:\n            return Object.assign({}, DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR_OBJ, action.payload);\n        case RESTORE_VIEW:\n            if (action.payload.distributionPlotInterpolator != null) {\n                const interpolator = Object.assign({}, DEFAULT_DISTRIBUTION_PLOT_INTERPOLATOR_OBJ, action.payload.distributionPlotInterpolator);\n                interpolator.value = getInterpolator(interpolator.name);\n                return interpolator;\n            }\n        default:\n            return state;\n    }\n}\n\n\n/*\nsortBy, minSize, maxSize, min, max, chartType\n */\nfunction distributionPlotOptions(state = DEFAULT_DIST_PLOT_OPTIONS, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return DEFAULT_DIST_PLOT_OPTIONS;\n        case SET_DISTRIBUTION_PLOT_OPTIONS:\n            return Object.assign({}, state, action.payload);\n        case RESTORE_VIEW:\n            return action.payload.distributionPlotOptions != null ? action.payload.distributionPlotOptions : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction jobResultId(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return null;\n        case SET_JOB_RESULT:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction jobResults(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return [];\n        case SET_JOB_RESULTS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction distributionData(state = {}, action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            return Object.assign({}, state);\n        case SET_DISTRIBUTION_DATA:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nfunction selectedDistributionData(state = {}, action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            return Object.assign({}, state);\n        case SET_SELECTED_DISTRIBUTION_DATA:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n\nfunction datasetFilters(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return [];\n        case SET_DATASET_FILTERS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction datasetViews(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return [];\n        case SET_DATASET_VIEWS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction datasetFilter(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return {};\n        case SET_DATASET_FILTER:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.datasetFilter != null ? action.payload.datasetFilter : state;\n        default:\n            return state;\n    }\n}\n\nfunction combineDatasetFilters(state = 'and', action) {\n    switch (action.type) {\n        case SET_COMBINE_DATASET_FILTERS:\n            return action.payload;\n        case SET_DATASET:\n            return \"and\";\n        case RESTORE_VIEW:\n            return action.payload.combineDatasetFilters != null ? action.payload.combineDatasetFilters : state;\n        default:\n            return state;\n    }\n}\n\n\n// category -> originalValue -> {newValue, positiveMarkers, negativeMarkers, color}\nfunction categoricalNames(state = {}, action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            return action.payload;\n        case UPDATE_CATEGORICAL_NAME:\n            let category = state[action.payload.name];\n            if (category === undefined) {\n                category = {};\n                state[action.payload.name] = category;\n            }\n            category[action.payload.originalValue] = action.payload;\n            return Object.assign({}, state);\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n// maps keys to values, features=>array, embedding key=>x,y,z, feature_embedding_key=>array for binned embeddings\nfunction cachedData(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET :\n            return {};\n        default:\n            return state;\n    }\n\n}\n\n\n// each item has  data (list of traces, each trace has x, y, etc.), layout\nfunction embeddingData(state = [], action) {\n    switch (action.type) {\n        case SET_EMBEDDING_DATA :\n            return action.payload;\n        case SET_SELECTION:\n            state.forEach(trace => {\n                if (trace.type === TRACE_TYPE_META_IMAGE) {\n                    trace.categoryToStats = action.payload.size === 0 ? trace.fullCategoryToStats : createCategoryToStats(trace, action.payload);\n                    updateTraceColors(trace);\n                }\n            });\n            return state.slice();\n        case SET_DOMAIN:\n            state.forEach((trace) => {\n                if (trace.continuous && trace.name === action.payload.name) {\n                    const summary = action.payload.summary;\n                    const domain = trace.type === TRACE_TYPE_META_IMAGE ? [-3, 3] : [summary.min, summary.max];\n\n                    if (trace.type === TRACE_TYPE_META_IMAGE) {\n                        if (summary.customZMin != null && !isNaN(summary.customZMin)) {\n                            domain[0] = summary.customZMin;\n                        }\n                        if (summary.customZMax != null && !isNaN(summary.customZMax)) {\n                            domain[1] = summary.customZMax;\n                        }\n                    } else {\n                        if (summary.customMin != null && !isNaN(summary.customMin)) {\n                            domain[0] = summary.customMin;\n                        }\n                        if (summary.customMax != null && !isNaN(summary.customMax)) {\n                            domain[1] = summary.customMax;\n                        }\n                    }\n\n                    trace.colorScale.domain(domain);\n                    updateTraceColors(trace);\n                }\n            });\n            return state.slice();\n        case UPDATE_CATEGORICAL_COLOR:\n            state.forEach((trace) => {\n                if (!trace.continuous && trace.name === action.payload.name) {\n                    const range = trace.colorScale.range();\n                    range[trace.colorScale.domain().indexOf(action.payload.originalValue)] = action.payload.color;\n                    trace.colorScale.range(range);\n                    updateTraceColors(trace);\n                }\n            });\n            return state.slice();\n\n        case SET_INTERPOLATOR:\n            // update colors for existing continuous traces\n            state.forEach((trace) => {\n                if (trace.continuous) {\n                    let domain = trace.colorScale.domain();\n                    trace.colorScale = createColorScale(action.payload).domain(domain);\n                    updateTraceColors(trace);\n                }\n            });\n            return state.slice();\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport function pointSize(state = DEFAULT_POINT_SIZE, action) {\n    switch (action.type) {\n        case SET_POINT_SIZE:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.pointSize != null ? action.payload.pointSize : state;\n        default:\n            return state;\n    }\n}\n\nexport function unselectedPointSize(state = DEFAULT_POINT_SIZE, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_POINT_SIZE:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.unselectedPointSize != null ? action.payload.unselectedPointSize : state;\n        default:\n            return state;\n    }\n}\n\n\n// used to restore state when toggling datasets\nexport function savedDatasetState(state = {}, action) {\n    switch (action.type) {\n        case SET_SAVED_DATASET_STATE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\n// object with name, type, embeddingKey\nexport function activeFeature(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return null;\n        case SET_ACTIVE_FEATURE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n// feature name (e.g. leiden) -> scroll position for restoring state\nexport function legendScrollPosition(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return {};\n        case SET_LEGEND_SCROLL_POSITION:\n            state[action.payload.name] = action.payload.value;\n            return state;\n        default:\n            return state;\n    }\n}\n\nfunction loading(state = false, action) {\n    switch (action.type) {\n        case SET_LOADING:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction interpolator(state = DEFAULT_INTERPOLATOR_OBJ, action) {\n    switch (action.type) {\n        case SET_INTERPOLATOR:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.colorScheme != null ? action.payload.colorScheme : state;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    activeFeature,\n    cachedData,\n    categoricalNames,\n    chartOptions,\n    chartSize,\n    combineDatasetFilters,\n    dataset,\n    datasetChoices,\n    datasetFilter,\n    datasetFilters,\n    datasetViews,\n    dialog,\n    distributionData,\n    distributionPlotOptions,\n    distributionPlotInterpolator,\n    email,\n    embeddingData,\n    embeddingLabels,\n    embeddings,\n    featureSummary,\n    globalFeatureSummary,\n    interpolator,\n    jobResultId,\n    jobResults,\n    legendScrollPosition,\n    loading,\n    loadingApp,\n    markerOpacity,\n    markers,\n    message,\n    pointSize,\n    primaryChartSize,\n    savedDatasetState,\n    searchTokens,\n    selectedDistributionData,\n    selection,\n    serverInfo,\n    tab,\n    unselectedMarkerOpacity,\n    unselectedPointSize,\n    user\n});\n","import {SvgIcon} from '@mui/material';\nimport React from 'react';\n\nexport default function CirroIcon() {\n    return <SvgIcon style={{verticalAlign: 'text-bottom', paddingBottom: 3}}>\n        <path\n            d=\"M19.21 12.04l-1.53-.11-.3-1.5C16.88 7.86 14.62 6 12 6 9.94 6 8.08 7.14 7.12 8.96l-.5.95-1.07.11C3.53 10.24 2 11.95 2 14c0 2.21 1.79 4 4 4h13c1.65 0 3-1.35 3-3 0-1.55-1.22-2.86-2.79-2.96z\"\n            fill=\"#4285F4\"></path>\n        <path\n            d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95C8.08 7.14 9.94 6 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11c1.56.1 2.78 1.41 2.78 2.96 0 1.65-1.35 3-3 3z\"></path>\n    </SvgIcon>;\n}\n","import {\n    Checkbox,\n    Divider,\n    ListItemText,\n    OutlinedInput,\n    Select,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TablePagination,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Typography\n} from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Popover from '@mui/material/Popover';\nimport TextField from '@mui/material/TextField';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {OPEN_DATASET_DIALOG, setDialog} from './actions';\nimport {NATSORT, REACT_MD_OVERRIDES} from './util';\nimport {intFormat} from './formatters';\nimport {visuallyHidden} from '@mui/utils';\nimport Box from '@mui/material/Box';\n\nimport {find, findIndex} from 'lodash';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\n\nexport function DatasetSelector(props) {\n    const [searchText, setSearchText] = useState('');\n    const [datasetDetailsEl, setDatasetDetailsEl] = useState(null);\n    const [selectedDataset, setSelectedDataset] = useState(null);\n    const [rowsPerPage, setRowsPerPage] = useState(30);\n    const [page, setPage] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [orderBy, setOrderBy] = useState(null);\n    const {dataset, datasetChoices, datasetSelectorColumns, dialog} = props;\n    const [forceUpdate, setForceUpdate] = useState(false);\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    function handleClick(event) {\n        props.handleDialog(OPEN_DATASET_DIALOG);\n        setSearchText('');\n    }\n\n    function handleClose() {\n        props.handleDialog(null);\n        setSearchText('');\n    }\n\n    function handleCloseDatasetDetails(event) {\n        setDatasetDetailsEl(null);\n        setSelectedDataset(null);\n    }\n\n    function handleListItemDetailsClick(event, id) {\n        event.stopPropagation();\n        setDatasetDetailsEl(event.currentTarget);\n        setSelectedDataset(find(datasetChoices, item => id === item.id));\n    }\n\n    function handleListItemClick(id) {\n        const selectedId = props.dataset != null ? props.dataset.id : null;\n        if (id !== selectedId) {\n            props.onChange(id);\n        }\n        props.handleDialog(null);\n        setSearchText('');\n    }\n\n    function handleColumnsChange(event) {\n        const value = event.target.value;\n        datasetSelectorColumns.forEach(column => {\n            column.visible = value.indexOf(column.id) !== -1;\n        });\n        setForceUpdate(!forceUpdate); // TODO redux style\n    }\n\n    function handleClearSearchText() {\n        setPage(0);\n        setSearchText('');\n    }\n\n    function onSearchChange(event) {\n        setPage(0);\n        setSearchText(event.target.value);\n    }\n\n\n    const selectedId = dataset != null ? dataset.id : null;\n\n    if (datasetChoices.length <= 1 && selectedId != null) {\n        return null;\n    }\n    const open = dialog === OPEN_DATASET_DIALOG;\n\n    let filteredChoices = datasetChoices;\n    let searchTextLower = searchText.toLowerCase().trim();\n    const allColumns = datasetSelectorColumns;\n    const visibleColumns = allColumns.filter(column => column.visible !== false);\n\n    if (searchTextLower != '') {\n        let searchColumns = visibleColumns;\n        const sepIndex = searchTextLower.indexOf(':'); // field search\n        if (sepIndex !== -1) {\n            let field = searchTextLower.substring(0, sepIndex);\n            for (let i = 0; i < allColumns.length; i++) {\n                if (field == allColumns[i].label.toLowerCase().replace(' ', '_')) {\n                    searchColumns = [allColumns[i]];\n                    searchTextLower = searchTextLower.substring(sepIndex + 1).trim();\n                    break;\n                }\n            }\n        }\n        if (searchTextLower != '') { // need to check again as searchTextLower might have been updated\n            const ncolumns = searchColumns.length;\n            const matches = (value) => value != null && ('' + value).toLowerCase().indexOf(searchTextLower) !== -1;\n            filteredChoices = filteredChoices.filter(choice => {\n                for (let i = 0; i < ncolumns; i++) {\n                    const value = choice[searchColumns[i].id];\n                    if (matches(value)) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n    }\n    if (orderBy != null) {\n        filteredChoices.sort((item1, item2) => {\n            return NATSORT(item1[orderBy], item2[orderBy]);\n        });\n        if (order == 'desc') {\n            filteredChoices.reverse();\n        }\n    }\n    const datasetDetailsOpen = Boolean(datasetDetailsEl);\n    return (\n        <React.Fragment>\n            <Popover\n                id={\"dataset-details-selector\"}\n                open={datasetDetailsOpen}\n                anchorEl={datasetDetailsEl}\n                onClose={handleCloseDatasetDetails}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center'\n                }}\n            >\n                <div style={{width: 500}}>\n                    {selectedDataset && selectedDataset.description &&\n                    <ReactMarkdown options={{overrides: REACT_MD_OVERRIDES}}\n                                   children={selectedDataset.description}/>}\n                </div>\n            </Popover>\n            {selectedId == null && <Button variant=\"contained\" onClick={handleClick}\n                                           color=\"primary\" startIcon={<FolderOpenIcon/>}>Open</Button>}\n            {selectedId != null &&\n            <Tooltip title={'Open'}><IconButton onClick={handleClick}\n                                                size=\"large\"><FolderOpenIcon/></IconButton></Tooltip>}\n\n            <Dialog\n                fullWidth={true}\n                open={open}\n                onClose={handleClose}\n                maxWidth={\"xl\"}\n            >\n                <DialogContent sx={{height: '100vh'}}>\n                    <TextField size=\"small\" style={{paddingTop: 6}} type=\"text\" placeholder={\"Search\"}\n                               value={searchText}\n                               onChange={onSearchChange}\n                               fullWidth={true}\n                               helperText={\"Search a specific field by typing the field name followed by a colon \\\":\\\" and then the term you are looking for\"}\n                               InputProps={searchText.trim() !== '' ? {\n                                   endAdornment:\n                                       <InputAdornment position=\"end\">\n                                           <IconButton aria-label=\"clear\" onClick={handleClearSearchText}\n                                                       size=\"large\">\n                                               <ClearIcon/>\n                                           </IconButton>\n                                       </InputAdornment>\n                               } : null}\n                    />\n                    <div>\n                        <FormControl size={\"small\"} sx={{float: 'right', transform: 'translateY(-20px)', m: 1}}>\n                            <Select\n                                size={\"small\"}\n                                labelId=\"dataset-selector-columns-label\"\n                                id=\"dataset-selector-columns\"\n                                multiple\n                                input={<OutlinedInput size={\"small\"}/>}\n                                value={visibleColumns.map(item => item.id)}\n                                onChange={handleColumnsChange}\n                                renderValue={(selected) => 'Column Visibility'}\n                            >\n                                {allColumns.map((item) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        <Checkbox checked={findIndex(visibleColumns, c => c.id === item.id) !== -1}/>\n                                        <ListItemText primary={item.label}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <Typography\n                            variant=\"subtitle1\">{(filteredChoices.length != datasetChoices.length ? (intFormat(filteredChoices.length) + ' / ') : '') + intFormat(datasetChoices.length)}</Typography>\n                        <Divider/>\n                        <TableContainer>\n                            <Table stickyHeader size={\"small\"} padding={\"normal\"}>\n                                <TableHead>\n                                    <TableRow>\n                                        {visibleColumns.map((column) => (\n                                            <TableCell\n                                                key={column.id}\n                                                align={column.numeric ? 'right' : 'left'}\n                                                padding={column.disablePadding ? 'none' : 'normal'}\n                                                sortDirection={orderBy === column.id ? order : false}\n                                            >\n                                                <TableSortLabel\n                                                    active={orderBy === column.id}\n                                                    direction={orderBy === column.id ? order : 'asc'}\n                                                    onClick={event => handleRequestSort(event, column.id)}\n                                                >\n                                                    {column.label}\n                                                    {orderBy === column.id ? (\n                                                        <Box component=\"span\" sx={visuallyHidden}>\n                                                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                                        </Box>\n                                                    ) : null}\n                                                </TableSortLabel>\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {filteredChoices\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) => {\n                                            return (\n                                                <TableRow selected={row.id === selectedId} hover role=\"checkbox\"\n                                                          tabIndex={-1} key={row.id}\n                                                          onClick={(e) => handleListItemClick(row.id)}>\n                                                    {visibleColumns.map((column, columnIndex) => {\n                                                        const value = row[column.id];\n                                                        return (\n                                                            <TableCell key={column.id} align={column.align}>\n                                                                {column.format && typeof value === 'number'\n                                                                    ? column.format(value)\n                                                                    : value}\n                                                                {columnIndex === 0 && row.description != null && row.description !== '' &&\n                                                                <IconButton\n                                                                    onClick={(e) => handleListItemDetailsClick(e, row.id)}\n                                                                    edge=\"end\"\n                                                                    aria-label=\"description\"\n                                                                    size=\"small\">\n                                                                    <InfoIcon/>\n                                                                </IconButton>}\n                                                            </TableCell>\n                                                        );\n                                                    })}\n                                                </TableRow>\n                                            );\n                                        })}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[30]}\n                            component=\"div\"\n                            count={filteredChoices.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onPageChange={handleChangePage}\n\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n    );\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        dialog: state.dialog,\n        datasetChoices: state.datasetChoices,\n        datasetSelectorColumns: state.serverInfo.datasetSelectorColumns\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDialog: value => {\n            dispatch(setDialog(value));\n        }\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(DatasetSelector));\n\n","import {Divider, IconButton, Menu, Tooltip} from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport MenuItem from '@mui/material/MenuItem';\nimport Popover from '@mui/material/Popover';\nimport Tab from '@mui/material/Tab';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Brightness2Icon from '@mui/icons-material/Brightness3';\nimport HelpIcon from '@mui/icons-material/Help';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_DATASET_DIALOG,\n    EDIT_DATASET_DIALOG,\n    getDatasetStateJson,\n    HELP_DIALOG,\n    IMPORT_DATASET_DIALOG,\n    login,\n    logout,\n    setChartOptions,\n    setDataset,\n    setDialog,\n    setMessage,\n    setSavedDatasetState,\n    setTab\n} from './actions';\nimport {drawerWidth} from './App';\nimport CirroIcon from './CirroIcon';\nimport DatasetSelector from './DatasetSelector';\nimport {intFormat} from './formatters';\nimport {\n    copyToClipboard,\n    FEATURE_TYPE,\n    REACT_MD_OVERRIDES,\n    SERVER_CAPABILITY_ADD_DATASET,\n    SERVER_CAPABILITY_DELETE_DATASET,\n    SERVER_CAPABILITY_EDIT_DATASET\n} from './util';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\n\n\nclass AppHeader extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userMenuOpen: false,\n            userMenuAnchorEl: null,\n            moreMenuOpen: false,\n            moreMenuAnchorEl: null\n        };\n\n    }\n\n    handleTabChange = (event, value) => {\n        this.props.handleTab(value);\n    };\n\n\n    handleEmbeddingsChange = (event) => {\n\n        const embeddings = event.target.value;\n        const selection = [];\n        embeddings.forEach(embedding => {\n\n            if (!embedding.precomputed) {\n                embedding = Object.assign(embedding, {\n                    bin: this.props.binValues,\n                    nbins: this.props.numberOfBins,\n                    _nbins: this.props.numberOfBinsUI,\n                    agg: this.props.binSummary\n                });\n            }\n            selection.push(embedding);\n\n        });\n        this.props.handleEmbeddings(selection);\n    };\n\n\n    handleUserMenuClose = () => {\n        this.setState({userMenuOpen: false});\n    };\n\n    handleMoreMenuClose = () => {\n        this.setState({moreMenuOpen: false});\n    };\n\n\n    handleHelp = () => {\n        this.props.handleDialog(HELP_DIALOG);\n    };\n\n\n    handleUserMenuOpen = (event) => {\n        this.setState({userMenuOpen: true, userMenuAnchorEl: event.currentTarget});\n    };\n    handleMoreMenuOpen = (event) => {\n        this.setState({moreMenuOpen: true, moreMenuAnchorEl: event.currentTarget});\n    };\n\n    getLinkJson = () => {\n        return getDatasetStateJson(this.props);\n    };\n\n    handleDataset = (id) => {\n        if (this.props.dataset != null) {\n            const savedDatasetState = this.props.savedDatasetState;\n            const link = this.getLinkJson();\n            link.dataset = null;\n            savedDatasetState[this.props.dataset.id] = link;\n            this.props.handleSavedDatasetState(savedDatasetState);\n        }\n        this.props.handleTab('embedding'); // embedding won't render unless visible\n        this.props.handleDataset(id);\n    };\n\n    copyLink = (event) => {\n        let linkText = window.location.protocol + '//' + window.location.host + window.location.pathname;\n        linkText += '#q=' + encodeURIComponent(JSON.stringify(this.getLinkJson()));\n        copyToClipboard(linkText);\n        this.props.setMessage('Link copied');\n        this.setState({moreMenuOpen: false});\n    };\n\n\n    onDarkMode = () => {\n        this.props.chartOptions.darkMode = !this.props.chartOptions.darkMode;\n        this.props.handleChartOptions(this.props.chartOptions);\n    };\n\n    handleLogout = () => {\n        this.setState({userMenuOpen: false});\n        this.props.handleLogout();\n    };\n\n    handleImportDataset = (event) => {\n        this.props.handleDialog(IMPORT_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleSettings = (event) => {\n        this.props.handleDialog(EDIT_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleDelete = (event) => {\n        this.props.handleDialog(DELETE_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleShowDatasetDetails = (event) => {\n        this.setState({datasetDetailsEl: event.currentTarget});\n    };\n    handleCloseDatasetDetails = (event) => {\n        this.setState({datasetDetailsEl: null});\n    };\n\n    render() {\n        const {\n            dataset,\n            distributionData,\n            loadingApp,\n            jobResults,\n            email,\n            selection,\n            searchTokens,\n            serverInfo,\n            tab,\n            user\n        } = this.props;\n\n\n        const datasetDetailsOpen = Boolean(this.state.datasetDetailsEl);\n        const shape = dataset != null && dataset.shape != null ? dataset.shape : null;\n        const hasSelection = dataset != null && shape != null && shape[0] > 0 && selection.size > 0;\n        const obsCat = searchTokens.filter(item => item.type === FEATURE_TYPE.OBS_CAT).map(item => item.value);\n        const showAddDataset = user != null && user.importer && !loadingApp.loading && serverInfo.capabilities.has(SERVER_CAPABILITY_ADD_DATASET);\n        const showEditDataset = dataset !== null && dataset.owner && !loadingApp.loading && serverInfo.capabilities.has(SERVER_CAPABILITY_EDIT_DATASET);\n        const showDeleteDataset = dataset !== null && dataset.owner && !loadingApp.loading && serverInfo.capabilities.has(SERVER_CAPABILITY_DELETE_DATASET);\n\n        const showMoreMenu = (showAddDataset || showEditDataset || showDeleteDataset || dataset != null) && !loadingApp.loading;\n        const isSignedOut = !loadingApp.loading && email == null && serverInfo.clientId !== '';\n        return (\n            <AppBar position=\"fixed\" sx={{width: `calc(100% - ${drawerWidth}px)`, ml: `${drawerWidth}px`}}>\n                <Toolbar variant=\"dense\" style={{paddingLeft: 6}}>\n                    {dataset != null && <Popover\n                        id={\"dataset-details\"}\n                        open={datasetDetailsOpen}\n                        anchorEl={this.state.datasetDetailsEl}\n                        onClose={this.handleCloseDatasetDetails}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center'\n                        }}\n                    >\n\n                        <Box style={{width: 500, padding: '1em'}}>\n                            <Typography>\n                                {dataset.name}\n                            </Typography>\n                            <Divider/>\n                            {dataset.species && <Typography>\n                                Species: {dataset.species}\n                            </Typography>}\n\n                            {dataset.title && <Typography>\n                                Title: {dataset.title}\n                            </Typography>}\n                            {dataset.description &&\n                            <>Description: <ReactMarkdown options={{overrides: REACT_MD_OVERRIDES}}\n                                                          children={dataset.description}/></>}\n                            {!process.env.REACT_APP_STATIC === 'true' && <Typography>\n                                URL: {dataset.url}\n                            </Typography>}\n                        </Box>\n                    </Popover>\n                    }\n                    {dataset == null && <Typography variant=\"h5\">\n                        <CirroIcon/> Cirrocumulus\n                    </Typography>}\n                    {dataset && <CirroIcon/>}\n                    {dataset &&\n                    <Link\n                        color=\"inherit\"\n                        style={{\n                            paddingLeft: 6,\n                            whiteSpace: 'nowrap',\n                            maxWidth: 300,\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis'\n                        }}\n                        href=\"#\"\n                        underline={\"none\"}\n                        onClick={this.handleShowDatasetDetails}\n                        aria-owns={this.state.datasetDetailsOpen ? 'dataset-details' : undefined}\n                        aria-haspopup=\"true\"\n                        component={\"h3\"}>\n                        <b>{dataset.name}</b>\n                    </Link>\n                    }\n                    {dataset && <small style={{whiteSpace: 'nowrap'}}>&nbsp;\n                        {hasSelection && shape != null && intFormat(selection.size) + ' / '}\n                        {shape != null && intFormat(shape[0]) + ' cells'}\n                    </small>}\n\n\n                    {dataset != null &&\n                    <Tabs textColor=\"inherit\"\n                          indicatorColor=\"secondary\"\n                          value={tab} onChange={this.handleTabChange}>\n                        <Tab data-testid=\"embedding-tab\" value=\"embedding\" label=\"Embeddings\"/>\n                        <Tab data-testid=\"distributions-tab\" value=\"distribution\" label=\"Distributions\"\n                             disabled={distributionData.length === 0}/>\n                        <Tab data-testid=\"composition-tab\" value=\"composition\" label=\"Composition\"\n                             disabled={obsCat.length < 2}/>\n                        {jobResults.length > 0 && <Tab data-testid=\"results-tab\" value=\"results\" label=\"Results\"/>}\n                    </Tabs>}\n\n                    <div style={{marginLeft: 'auto', whiteSpace: 'nowrap', overflow: 'hidden'}}>\n                        {/*{serverInfo.brand && <Typography variant=\"h5\"*/}\n                        {/*                                 style={{*/}\n                        {/*                                     display: 'inline-block',*/}\n                        {/*                                     paddingRight: 6*/}\n                        {/*                                 }}>{serverInfo.brand}</Typography>}*/}\n\n                        {serverInfo.brand &&\n                        <ReactMarkdown options={{\n                            overrides: REACT_MD_OVERRIDES, wrapper: 'span', createElement: (type, props, children) => {\n                                props.display = 'inline';\n                                props.gutterBottom = false;\n                                const elem = React.createElement(type, props, children);\n                                return elem;\n                            }\n                        }}\n\n                                       children={serverInfo.brand}/>}\n\n\n                        {!loadingApp.loading && !isSignedOut && <DatasetSelector onChange={this.handleDataset}/>}\n                        {showMoreMenu && <Tooltip title={'More'}>\n                            <IconButton\n                                aria-label=\"Menu\"\n                                aria-haspopup=\"true\"\n                                onClick={this.handleMoreMenuOpen}\n                                size=\"large\">\n                                <MoreVertIcon/>\n                            </IconButton>\n                        </Tooltip>}\n                        {showMoreMenu && <Menu id=\"more-menu\"\n                                               anchorEl={this.state.moreMenuAnchorEl}\n                                               anchorOrigin={{\n                                                   vertical: 'top',\n                                                   horizontal: 'right'\n                                               }}\n\n                                               transformOrigin={{\n                                                   vertical: 'top',\n                                                   horizontal: 'right'\n                                               }} open={this.state.moreMenuOpen}\n                                               onClose={this.handleMoreMenuClose}>\n                            {showAddDataset && <MenuItem onClick={this.handleImportDataset}>\n                                New Dataset\n                            </MenuItem>}\n\n                            {showEditDataset && <MenuItem onClick={this.handleSettings}>Edit Dataset</MenuItem>}\n                            {showDeleteDataset && <MenuItem onClick={this.handleDelete}>Delete Dataset</MenuItem>}\n                            {(showAddDataset || showEditDataset || showDeleteDataset) && dataset != null && <Divider/>}\n                            {dataset != null && <MenuItem onClick={this.copyLink}>Copy Link </MenuItem>}\n                        </Menu>}\n\n                        {<Tooltip title={\"Toggle Light/Dark Theme\"}>\n                            <IconButton\n                                edge={false}\n                                className={this.props.chartOptions.darkMode ? 'cirro-active' : ''}\n                                aria-label=\"Toggle Theme\"\n                                onClick={() => this.onDarkMode()}\n                                size=\"large\">\n                                <Brightness2Icon/>\n                            </IconButton>\n                        </Tooltip>}\n                        {dataset != null && <Tooltip title={'Help'}>\n                            <IconButton aria-label=\"Help\" onClick={this.handleHelp} size=\"large\">\n                                <HelpIcon/>\n                            </IconButton>\n                        </Tooltip>}\n                        {email != null && email !== '' &&\n                        <Tooltip title={email}>\n                            <IconButton\n                                aria-label=\"Menu\"\n                                aria-haspopup=\"true\"\n                                onClick={this.handleUserMenuOpen}\n                                size=\"large\">\n                                <AccountCircle/>\n                            </IconButton>\n                        </Tooltip>}\n                        {email != null && email !== '' &&\n                        <Menu id=\"menu-user\"\n                              anchorEl={this.state.userMenuAnchorEl}\n                              anchorOrigin={{\n                                  vertical: 'top',\n                                  horizontal: 'right'\n                              }}\n\n                              transformOrigin={{\n                                  vertical: 'top',\n                                  horizontal: 'right'\n                              }} open={this.state.userMenuOpen}\n                              onClose={this.handleUserMenuClose}>\n                            <MenuItem onClick={this.handleLogout}>Sign Out</MenuItem>\n                        </Menu>}\n                        {isSignedOut && <Button style={{whiteSpace: 'nowrap'}} color=\"inherit\"\n                                                onClick={this.props.handleLogin}>Sign In</Button>}\n                    </div>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        activeFeature: state.activeFeature,\n        binSummary: state.binSummary,\n        binValues: state.binValues,\n        chartOptions: state.chartOptions,\n        combineDatasetFilters: state.combineDatasetFilters,\n        dataset: state.dataset,\n        datasetChoices: state.datasetChoices,\n        datasetFilter: state.datasetFilter,\n        dialog: state.dialog,\n        distributionData: state.distributionData,\n        distributionPlotInterpolator: state.distributionPlotInterpolator,\n        email: state.email,\n        embeddingLabels: state.embeddingLabels,\n        embeddings: state.embeddings,\n        interpolator: state.interpolator,\n        jobResults: state.jobResults,\n        jobResultId: state.jobResultId,\n        loading: state.loading,\n        loadingApp: state.loadingApp,\n        markerOpacity: state.markerOpacity,\n        message: state.message,\n        pointSize: state.pointSize,\n        savedDatasetState: state.savedDatasetState,\n        searchTokens: state.searchTokens,\n        selection: state.selection,\n        serverInfo: state.serverInfo,\n        tab: state.tab,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        user: state.user\n    };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleTab: (value) => {\n            dispatch(setTab(value));\n        },\n        setMessage: (value) => {\n            dispatch(setMessage(value));\n        },\n        handleLogin: () => {\n            dispatch(login());\n        },\n        handleLogout: () => {\n            dispatch(logout());\n        },\n\n        handleSavedDatasetState: value => {\n            dispatch(setSavedDatasetState(value));\n        },\n\n        handleDataset: value => {\n            dispatch(setDataset(value));\n        },\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n        handleChartOptions: (value) => {\n            dispatch(setChartOptions(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(AppHeader));\n\n\n","/*\n   * Constants copied from DGAM1 in the NSWC library.\n   */\n/** The constant {@code A0} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_A0 = .611609510448141581788E-08;\n/** The constant {@code A1} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_A1 = .624730830116465516210E-08;\n/** The constant {@code B1} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B1 = .203610414066806987300E+00;\n/** The constant {@code B2} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B2 = .266205348428949217746E-01;\n/** The constant {@code B3} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B3 = .493944979382446875238E-03;\n/** The constant {@code B4} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B4 = -.851419432440314906588E-05;\n/** The constant {@code B5} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B5 = -.643045481779353022248E-05;\n/** The constant {@code B6} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B6 = .992641840672773722196E-06;\n/** The constant {@code B7} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B7 = -.607761895722825260739E-07;\n/** The constant {@code B8} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_B8 = .195755836614639731882E-09;\n/** The constant {@code P0} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_P0 = .6116095104481415817861E-08;\n/** The constant {@code P1} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_P1 = .6871674113067198736152E-08;\n/** The constant {@code P2} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_P2 = .6820161668496170657918E-09;\n/** The constant {@code P3} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_P3 = .4686843322948848031080E-10;\n/** The constant {@code P4} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_P4 = .1572833027710446286995E-11;\n/** The constant {@code P5} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_P5 = -.1249441572276366213222E-12;\n/** The constant {@code P6} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_P6 = .4343529937408594255178E-14;\n/** The constant {@code Q1} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_Q1 = .3056961078365221025009E+00;\n/** The constant {@code Q2} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_Q2 = .5464213086042296536016E-01;\n/** The constant {@code Q3} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_Q3 = .4956830093825887312020E-02;\n/** The constant {@code Q4} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_Q4 = .2692369466186361192876E-03;\n/** The constant {@code C} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C = -.422784335098467139393487909917598E+00;\n/** The constant {@code C0} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C0 = .577215664901532860606512090082402E+00;\n/** The constant {@code C1} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C1 = -.655878071520253881077019515145390E+00;\n/** The constant {@code C2} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C2 = -.420026350340952355290039348754298E-01;\n/** The constant {@code C3} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C3 = .166538611382291489501700795102105E+00;\n/** The constant {@code C4} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C4 = -.421977345555443367482083012891874E-01;\n/** The constant {@code C5} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C5 = -.962197152787697356211492167234820E-02;\n/** The constant {@code C6} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C6 = .721894324666309954239501034044657E-02;\n/** The constant {@code C7} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C7 = -.116516759185906511211397108401839E-02;\n/** The constant {@code C8} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C8 = -.215241674114950972815729963053648E-03;\n/** The constant {@code C9} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C9 = .128050282388116186153198626328164E-03;\n/** The constant {@code C10} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C10 = -.201348547807882386556893914210218E-04;\n/** The constant {@code C11} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C11 = -.125049348214267065734535947383309E-05;\n/** The constant {@code C12} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C12 = .113302723198169588237412962033074E-05;\n/** The constant {@code C13} defined in {@code DGAM1}. */\nconst INV_GAMMA1P_M1_C13 = -.205633841697760710345015413002057E-06;\nconst HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);\nconst LANCZOS_G = 607 / 128;\nconst LANCZOS = [\n    0.99999999999999709182,\n    57.156235665862923517,\n    -59.597960355475491248,\n    14.136097974741747174,\n    -0.49191381609762019978,\n    .33994649984811888699e-4,\n    .46523628927048575665e-4,\n    -.98374475304879564677e-4,\n    .15808870322491248884e-3,\n    -.21026444172410488319e-3,\n    .21743961811521264320e-3,\n    -.16431810653676389022e-3,\n    .84418223983852743293e-4,\n    -.26190838401581408670e-4,\n    .36899182659531622704e-5,\n];\n\nconst SMALL = 1e-50;\n\nexport function regularizedGammaQValue(a,\n                                x,\n                                epsilon = 1e-15,\n                                maxIterations = Number.MAX_VALUE) {\n    if (Number.isNaN(a) ||\n        Number.isNaN(x) ||\n        a <= 0 ||\n        x < 0) {\n        return Number.NaN;\n    } else if (x == 0) {\n        return 1;\n    } else if (x < a + 1) {\n        // P should converge faster in this case.\n        return 1 - regularizedGammaPValue(a, x, epsilon, maxIterations);\n    } else {\n\n        const getA = function (n, x) {\n            return n * (a - n);\n        };\n        const getB = function (n, x) {\n            return ((2 * n) + 1) - a + x;\n        };\n        return Math.exp(-x + (a * Math.log(x)) - logGamma(a)) /\n            continuedFraction(x, epsilon, maxIterations, getA, getB);\n    }\n}\n\nfunction invGamma1pm1(x) {\n    if (x < -0.5 || x > 1.5) {\n        throw new Error(\"Out of range\");\n    }\n\n    const t = x <= 0.5 ? x : (x - 0.5) - 0.5;\n    if (t < 0) {\n        const a = INV_GAMMA1P_M1_A0 + t * INV_GAMMA1P_M1_A1;\n        let b = INV_GAMMA1P_M1_B8;\n        b = INV_GAMMA1P_M1_B7 + t * b;\n        b = INV_GAMMA1P_M1_B6 + t * b;\n        b = INV_GAMMA1P_M1_B5 + t * b;\n        b = INV_GAMMA1P_M1_B4 + t * b;\n        b = INV_GAMMA1P_M1_B3 + t * b;\n        b = INV_GAMMA1P_M1_B2 + t * b;\n        b = INV_GAMMA1P_M1_B1 + t * b;\n        b = 1.0 + t * b;\n\n        let c = INV_GAMMA1P_M1_C13 + t * (a / b);\n        c = INV_GAMMA1P_M1_C12 + t * c;\n        c = INV_GAMMA1P_M1_C11 + t * c;\n        c = INV_GAMMA1P_M1_C10 + t * c;\n        c = INV_GAMMA1P_M1_C9 + t * c;\n        c = INV_GAMMA1P_M1_C8 + t * c;\n        c = INV_GAMMA1P_M1_C7 + t * c;\n        c = INV_GAMMA1P_M1_C6 + t * c;\n        c = INV_GAMMA1P_M1_C5 + t * c;\n        c = INV_GAMMA1P_M1_C4 + t * c;\n        c = INV_GAMMA1P_M1_C3 + t * c;\n        c = INV_GAMMA1P_M1_C2 + t * c;\n        c = INV_GAMMA1P_M1_C1 + t * c;\n        c = INV_GAMMA1P_M1_C + t * c;\n        if (x > 0.5) {\n            return t * c / x;\n        } else {\n            return x * ((c + 0.5) + 0.5);\n        }\n    } else {\n        let p = INV_GAMMA1P_M1_P6;\n        p = INV_GAMMA1P_M1_P5 + t * p;\n        p = INV_GAMMA1P_M1_P4 + t * p;\n        p = INV_GAMMA1P_M1_P3 + t * p;\n        p = INV_GAMMA1P_M1_P2 + t * p;\n        p = INV_GAMMA1P_M1_P1 + t * p;\n        p = INV_GAMMA1P_M1_P0 + t * p;\n\n        let q = INV_GAMMA1P_M1_Q4;\n        q = INV_GAMMA1P_M1_Q3 + t * q;\n        q = INV_GAMMA1P_M1_Q2 + t * q;\n        q = INV_GAMMA1P_M1_Q1 + t * q;\n        q = 1.0 + t * q;\n\n        let c = INV_GAMMA1P_M1_C13 + (p / q) * t;\n        c = INV_GAMMA1P_M1_C12 + t * c;\n        c = INV_GAMMA1P_M1_C11 + t * c;\n        c = INV_GAMMA1P_M1_C10 + t * c;\n        c = INV_GAMMA1P_M1_C9 + t * c;\n        c = INV_GAMMA1P_M1_C8 + t * c;\n        c = INV_GAMMA1P_M1_C7 + t * c;\n        c = INV_GAMMA1P_M1_C6 + t * c;\n        c = INV_GAMMA1P_M1_C5 + t * c;\n        c = INV_GAMMA1P_M1_C4 + t * c;\n        c = INV_GAMMA1P_M1_C3 + t * c;\n        c = INV_GAMMA1P_M1_C2 + t * c;\n        c = INV_GAMMA1P_M1_C1 + t * c;\n        c = INV_GAMMA1P_M1_C0 + t * c;\n\n        if (x > 0.5) {\n            return (t / x) * ((c - 0.5) - 0.5);\n        } else {\n            return x * c;\n        }\n    }\n}\n\nfunction logGamma1p(x) {\n    if (x < -0.5 || x > 1.5) {\n        throw new Error(\"Out of range\");\n    }\n\n    return -Math.log1p(invGamma1pm1(x));\n}\n\n\nfunction lanczosApproximation(x) {\n    let sum = 0;\n    for (let i = LANCZOS.length - 1; i > 0; i--) {\n        sum += LANCZOS[i] / (x + i);\n    }\n    return sum + LANCZOS[0];\n}\n\nfunction logGamma(x) {\n    if (Number.isNaN(x) || (x <= 0.0)) {\n        return Number.NaN;\n    } else if (x < 0.5) {\n        return logGamma1p(x) - Math.log(x);\n    } else if (x <= 2.5) {\n        return logGamma1p((x - 0.5) - 0.5);\n    } else if (x <= 8.0) {\n        let n = Math.floor(x - 1.5);\n        let prod = 1.0;\n        for (let i = 1; i <= n; i++) {\n            prod *= x - i;\n        }\n        return logGamma1p(x - (n + 1)) + Math.log(prod);\n    } else {\n        let sum = lanczosApproximation(x);\n        let tmp = x + LANCZOS_G + .5;\n        return ((x + .5) * Math.log(tmp)) - tmp +\n            HALF_LOG_2_PI + Math.log(sum / x);\n    }\n}\n\nexport function regularizedGammaPValue(a, x, epsilon = 1e-15, maxIterations = Number.MAX_VALUE) {\n    if (Number.isNaN(a) ||\n        Number.isNaN(x) ||\n        a <= 0 ||\n        x < 0) {\n        return Number.NaN;\n    } else if (x == 0) {\n        return 0;\n    } else if (x >= a + 1) {\n        // Q should converge faster in this case.\n        return 1 - regularizedGammaQValue(a, x, epsilon, maxIterations);\n    } else {\n        // Series.\n        let n = 0; // current element index\n        let an = 1 / a; // n-th element in the series\n        let sum = an; // partial sum\n        while (Math.abs(an / sum) > epsilon &&\n        n < maxIterations &&\n        sum < Number.POSITIVE_INFINITY) {\n            // compute next element in the series\n            n += 1;\n            an *= x / (a + n);\n\n            // update partial sum\n            sum += an;\n        }\n        if (n >= maxIterations) {\n            throw new Error(\"Failed to converge\");\n        } else if (!Number.isFinite(sum)) {\n            return 1;\n        } else {\n            // Ensure result is in the range [0, 1]\n            let result = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n            return result > 1.0 ? 1.0 : result;\n        }\n    }\n}\n\nfunction continuedFraction(x, epsilon, maxIterations, getA, getB) {\n    let hPrev = updateIfCloseToZero(getB(0, x));\n\n    let n = 1;\n    let dPrev = 0.0;\n    let cPrev = hPrev;\n    let hN;\n\n    while (n <= maxIterations) {\n        const a = getA(n, x);\n        const b = getB(n, x);\n\n        let dN = updateIfCloseToZero(b + a * dPrev);\n        const cN = updateIfCloseToZero(b + a / cPrev);\n\n        dN = 1 / dN;\n        const deltaN = cN * dN;\n        hN = hPrev * deltaN;\n\n        if (!Number.isFinite(hN)) {\n            throw new Error(\n                \"Continued fraction convergents diverged to +/- infinity\");\n        }\n        if (Number.isNaN(hN)) {\n            throw new Error(\n                \"Continued fraction diverged to NaN\");\n        }\n\n        if (Math.abs(deltaN - 1) < epsilon) {\n            return hN;\n        }\n\n        dPrev = dN;\n        cPrev = cN;\n        hPrev = hN;\n        ++n;\n    }\n\n    throw new Error(\"maximal count exceeded\");\n}\n\n\nfunction updateIfCloseToZero(value) {\n    return Math.abs(value - 0.0 <= SMALL) ? SMALL : value;\n}\n","import {regularizedGammaPValue} from './RegularizedGamma';\n\nfunction cumulativeProb(x, shape, scale) {\n    if (x <= 0) {\n        return 0;\n    } else if (x >= Number.POSITIVE_INFINITY) {\n        return 1;\n    }\n\n    return regularizedGammaPValue(shape, x / scale);\n}\n\nexport function chiSquare(counts) {\n    const rowSums = [];\n\n    const nrows = counts.length;\n    const ncols = counts[0].length;\n    let total = 0;\n    for (let i = 0; i < nrows; i++) {\n        let sum = 0;\n        for (let j = 0; j < ncols; j++) {\n            sum += counts[i][j];\n        }\n        rowSums.push(sum);\n        total += sum;\n    }\n    const columnSums = [];\n    for (let j = 0; j < ncols; j++) {\n        let sum = 0;\n        for (let i = 0; i < nrows; i++) {\n            sum += counts[i][j];\n        }\n        columnSums.push(sum);\n    }\n    const expectedTable = []; //   (row sum * column sum)/N\n    for (let i = 0; i < nrows; i++) {\n        const expected = [];\n        for (let j = 0; j < ncols; j++) {\n            expected.push(rowSums[i] * columnSums[j] / total);\n        }\n        expectedTable.push(expected);\n    }\n    let statistic = 0;\n    for (let i = 0; i < nrows; i++) {\n        for (let j = 0; j < ncols; j++) {\n            statistic += Math.pow(counts[i][j] - expectedTable[i][j], 2) / expectedTable[i][j];\n        }\n    }\n    const degreesOfFreedom = (nrows - 1) * (ncols - 1);\n    const p = 1 - cumulativeProb(statistic, degreesOfFreedom / 2, 2);\n    return {expected: expectedTable, statistic: statistic, p: p, df: degreesOfFreedom};\n}\n\n\n\n","/**\n * Computes the hypergeometric probability.\n */\nfunction phyper(a, b, c, d) {\n    return Math\n        .exp((logFactorial(a + b)\n            + logFactorial(c + d)\n            + logFactorial(a + c) + logFactorial(b + d))\n            - (logFactorial(a)\n                + logFactorial(b)\n                + logFactorial(c)\n                + logFactorial(d) + logFactorial(a + b + c + d)));\n\n};\n\nconst logFactorials = [0.00000000000000000,\n    0.00000000000000000, 0.69314718055994531, 1.79175946922805500,\n    3.17805383034794562, 4.78749174278204599, 6.57925121201010100,\n    8.52516136106541430, 10.60460290274525023, 12.80182748008146961,\n    15.10441257307551530, 17.50230784587388584, 19.98721449566188615,\n    22.55216385312342289, 25.19122118273868150, 27.89927138384089157,\n    30.67186010608067280, 33.50507345013688888, 36.39544520803305358,\n    39.33988418719949404, 42.33561646075348503, 45.38013889847690803,\n    48.47118135183522388, 51.60667556776437357, 54.78472939811231919,\n    58.00360522298051994, 61.26170176100200198, 64.55753862700633106,\n    67.88974313718153498, 71.25703896716800901];\n\nfunction logFactorial(k) {\n    if (k >= 30) { // stirlings approximation\n        const C0 = 9.18938533204672742e-01;\n        const C1 = 8.33333333333333333e-02;\n        const C3 = -2.77777777777777778e-03;\n        const C5 = 7.93650793650793651e-04;\n        const C7 = -5.95238095238095238e-04;\n        const r = 1.0 / k;\n        const rr = r * r;\n        return (k + 0.5) * Math.log(k) - k + C0 + r\n            * (C1 + rr * (C3 + rr * (C5 + rr * C7)));\n        // log k! = (k + 1/2)log(k) - k + (1/2)log(2Pi) + stirlingCorrection(k)\n    }\n    return logFactorials[k];\n};\n\nexport function fisherTest(a, b, c, d) {\n    // match R 2-sided fisher.test\n    const p = phyper(a, b, c, d);\n    let sum = p;\n    for (let _a = 0, n = a + b + c + d; _a <= n; _a++) {\n        const _b = a + b - _a;\n        const _c = a + c - _a;\n        const _d = b + d - _b;\n        if (_a !== a && _b >= 0 && _c >= 0 && _d >= 0) {\n            const _p = phyper(_a, _b, _c, _d);\n            if (_p <= p) {\n                sum += _p;\n            }\n        }\n    }\n    return Math.min(1, sum);\n};\n","import {Table, TableBody, TableCell, TableHead, TableRow, Tooltip} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport withStyles from '@mui/styles/withStyles';\nimport Typography from '@mui/material/Typography';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport {scaleLinear} from 'd3-scale';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {CANVAS_FONT, SVG_FONT} from './ChartUtil';\nimport {chiSquare} from './ChiSquare';\nimport {fisherTest} from './FisherExact';\nimport {intFormat, numberFormat2f} from './formatters';\n\nconst styles = theme => ({\n    table: {\n        width: 'min-content',\n        '& td': {padding: 6},\n        '& th': {padding: 6}\n    },\n});\n\nfunction CompositionPlot(props) {\n    const [saveImageEl, setSaveImageEl] = useState(null);\n\n    const canvasRef = useRef(null);\n    const size = useRef({});\n    const barWidth = 20;\n    const barSpace = 10;\n    const {seriesToValueToCounts, colorScale, series, textColor, title, subtitle, uniqueValues} = props;\n    const barHeight = 600;\n\n    function drawContext(context) {\n        if (seriesToValueToCounts == null) {\n            return;\n        }\n        const height = size.current.height;\n        const margin = size.current.margin;\n        const yScale = scaleLinear().domain([0, 1]).range([height - margin.bottom, margin.top]);\n        context.textAlign = 'left';\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        context.textBaseline = 'top';\n        const y0 = yScale(0);\n        for (let seriesIndex = 0; seriesIndex < series.length; seriesIndex++) {\n            const seriesName = series[seriesIndex];\n            const valueToCounts = seriesToValueToCounts[seriesName];\n            let sum = 0;\n            uniqueValues.forEach(uniqueValue => {\n                const count = valueToCounts[uniqueValue] || 0;\n                sum += count;\n            });\n\n            let yBottom = y0;\n            const xPix = margin.left + barWidth * seriesIndex + (barSpace * seriesIndex);\n            uniqueValues.forEach(uniqueValue => {\n                const count = valueToCounts[uniqueValue];\n                if (count !== undefined) {\n                    let barHeight = yScale(0) - yScale(count / sum);\n                    let yTop = yBottom - barHeight;\n                    context.fillStyle = colorScale(uniqueValue);\n                    context.fillRect(xPix, yTop, barWidth, barHeight);\n                    yBottom = yTop;\n                }\n            });\n            context.fillStyle = textColor;\n            context.save();\n            context.translate(xPix + 4, y0 + 4);\n            context.rotate(-Math.PI / 2);\n            context.fillText(seriesName, 0, 0);\n            context.restore();\n        }\n        // yaxis\n        const ticks = [0, 0.2, 0.4, 0.6, 0.8, 1];\n        context.fillStyle = textColor;\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        ticks.forEach(tick => {\n            const pix = yScale(tick);\n            context.fillText('' + 100 * tick, margin.left - 8, pix);\n            context.beginPath();\n            context.moveTo(margin.left - 6, pix);\n            context.lineTo(margin.left - 2, pix);\n            context.stroke();\n        });\n\n    }\n\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        let context = canvas.getContext('2d');\n        context.font = CANVAS_FONT;\n\n        let maxSeriesWidth = 0;\n        series.forEach(name => maxSeriesWidth = Math.max(maxSeriesWidth, context.measureText(name).width));\n        const margin = {left: 25, top: 10, bottom: maxSeriesWidth + 6, right: 4};\n        size.current.margin = margin;\n        const width = series.length * barWidth + series.length * barSpace + margin.left + margin.right;\n        size.current.width = width;\n        const height = barHeight + margin.bottom + margin.top;\n        size.current.height = height;\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n        context = canvas.getContext('2d');\n        context.font = CANVAS_FONT;\n        context\n            .clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\n        context.scale(devicePixelRatio, devicePixelRatio);\n        drawContext(context);\n    });\n\n    const handleSaveImageMenu = (event) => {\n        setSaveImageEl(event.currentTarget);\n    };\n    const handleSaveImageMenuClose = (event) => {\n        setSaveImageEl(null);\n    };\n\n    const handleSaveImage = (format) => {\n        setSaveImageEl(null);\n        let context;\n\n        let canvas;\n        if (format === 'svg') {\n            context = new window.C2S(10, 10);\n            context.font = SVG_FONT;\n        } else {\n            canvas = document.createElement('canvas');\n            context = canvas.getContext('2d');\n            context.font = CANVAS_FONT;\n        }\n        const width = size.current.width;\n        const height = size.current.height;\n        if (format === 'svg') {\n            context = new window.C2S(width, height);\n            context.font = SVG_FONT;\n        } else {\n            canvas.width = width * window.devicePixelRatio;\n            canvas.height = height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            context.font = CANVAS_FONT;\n        }\n        const textColor = 'black';\n        // const textColor = this.props.textColor;\n        context.fillStyle = textColor === 'white' ? 'black' : 'white';\n        context.fillRect(0, 0, width, height);\n        drawContext(context, size);\n\n        if (format === 'svg') {\n            let svg = context.getSerializedSvg();\n            let blob = new Blob([svg], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, 'composition.svg');\n        } else {\n            canvas.toBlob(blob => {\n                window.saveAs(blob, 'composition.png', true);\n            });\n        }\n\n    };\n\n    const countsTable = [];\n\n    uniqueValues.forEach(uniqueValue => {\n        const counts = [];\n        countsTable.push(counts);\n        series.forEach(seriesName => {\n            const valueToCounts = seriesToValueToCounts[seriesName];\n            const count = valueToCounts[uniqueValue] || 0;\n            counts.push(count);\n        });\n    });\n    let pValue = null;\n    let stat = null;\n    if (countsTable.length === 2 && countsTable[0].length === 2) { // fisher exact\n        pValue = fisherTest(countsTable[0][0], countsTable[0][1], countsTable[1][0], countsTable[1][1]);\n        stat = 'Fisher\\'s Exact';\n    } else if (countsTable.length >= 2 && countsTable[0].length >= 2) {\n        const result = chiSquare(countsTable);\n        pValue = result.p;\n        stat = 'Chi-Square';\n    }\n\n    return <>\n        <div>\n            <Typography style={{display: 'inline-block'}} component={\"h4\"}\n                        color=\"textPrimary\">{title}{subtitle &&\n            <small>({subtitle})</small>}</Typography>\n            <Tooltip title={\"Save Image\"}>\n                <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false}\n                            size={'small'}\n                            aria-label=\"Save Image\" onClick={handleSaveImageMenu}>\n                    <PhotoCameraIcon/>\n                </IconButton>\n            </Tooltip>\n            <Menu\n                id=\"save-image-menu\"\n                anchorEl={saveImageEl}\n                keepMounted\n                open={Boolean(saveImageEl)}\n                onClose={handleSaveImageMenuClose}\n            >\n                <MenuItem onClick={e => handleSaveImage('png')}>PNG</MenuItem>\n                <MenuItem onClick={e => handleSaveImage('svg')}>SVG</MenuItem>\n\n            </Menu>\n        </div>\n        <div style={{display: 'flex', flex: 'flex-wrap'}}>\n            <canvas ref={canvasRef}></canvas>\n            <div>\n                <Table size={\"small\"} className={props.classes.table}>\n                    <TableHead><TableRow><TableCell></TableCell>{series.map(item => <TableCell\n                        key={item}>{item}</TableCell>)}\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>{uniqueValues.map((uniqueValue, uniqueValueIndex) => {\n                        const counts = countsTable[uniqueValueIndex];\n                        return <TableRow key={uniqueValue}><TableCell style={{whiteSpace: 'nowrap'}} component={\"th\"}>\n                            <div style={{\n                                display: 'inline-block',\n                                width: '1em',\n                                height: '1em',\n                                marginRight: 2,\n                                verticalAlign: 'text-bottom',\n                                backgroundColor: colorScale(uniqueValue)\n                            }}></div>\n                            {uniqueValue}</TableCell>{series.map((seriesName, seriesIndex) => {\n                            const count = counts[seriesIndex];\n                            const countFormatted = intFormat(count);\n                            return <TableCell key={seriesName}\n                                              style={{textAlign: 'center'}}>{countFormatted}</TableCell>;\n                        })}</TableRow>;\n                    })}\n                    </TableBody>\n                </Table>\n                {pValue != null &&\n                <Typography color=\"textPrimary\">{stat} p-value: {numberFormat2f(pValue)}</Typography>}\n            </div>\n        </div>\n\n    </>;\n}\n\nexport default withStyles(styles)(CompositionPlot);\n","import {scaleOrdinal} from 'd3-scale';\nimport {schemeCategory10} from 'd3-scale-chromatic';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport CompositionPlot from './CompositionPlot';\nimport {FEATURE_TYPE, getCategoryValue, NATSORT} from './util';\n\nfunction getColorScale(embeddingData, dimension) {\n    let categoryColorScale = null;\n    for (let i = 0; i < embeddingData.length; i++) {\n        if (dimension === embeddingData[i].name) {\n            categoryColorScale = embeddingData[i].colorScale; // TODO make color scale independent of embedding\n            break;\n        }\n    }\n    if (categoryColorScale == null) {\n        categoryColorScale = scaleOrdinal(schemeCategory10); // TODO make color scale independent of embedding\n    }\n    return categoryColorScale;\n}\n\nfunction createSorter(name, categoryOrder, categoricalNames) {\n    if (categoryOrder[name]) {\n        const orderedCategories = categoryOrder[name];\n        const categoryToIndex = new Map();\n        const nameMap = categoricalNames[name] || {};\n        for (let i = 0; i < orderedCategories.length; i++) {\n            let value = orderedCategories[i];\n            value = getCategoryValue(nameMap, value);\n            categoryToIndex.set(value, i);\n        }\n        return (a, b) => categoryToIndex.get(a) - categoryToIndex.get(b);\n    }\n    return NATSORT;\n\n}\n\nfunction getComposition(dataset, obsCat, cachedData, categoricalNames, selection) {\n    const ncategories = obsCat.length;\n    const maxCategories = 100;\n    if (ncategories >= 2) {\n        let nseries = 0;\n        let categoryValues = [];\n        let nObs = dataset.shape[0];\n        const renamedDimensions = [];\n        for (let categoryIndex = 0; categoryIndex < ncategories; categoryIndex++) {\n            const array = cachedData[obsCat[categoryIndex]];\n            if (array == null) {\n                return null;\n            }\n            categoryValues.push(array);\n            renamedDimensions.push(categoricalNames[obsCat[categoryIndex]] || {});\n        }\n        const hasSelection = selection != null && selection.size > 0;\n        const dimensionIndex = ncategories - 1;\n        const seriesToValueToCounts = {};\n        const seriesToSeriesArray = {};\n        for (let i = 0; i < nObs; i++) {\n            if (hasSelection && !selection.has(i)) {\n                continue;\n            }\n            const seriesArray = [];\n            for (let categoryIndex = 0; categoryIndex < ncategories - 1; categoryIndex++) {\n                let value = categoryValues[categoryIndex][i];\n                const nameMap = renamedDimensions[categoryIndex];\n                value = getCategoryValue(nameMap, value);\n                seriesArray.push(value);\n            }\n            const seriesKey = seriesArray.join(',');\n            let valueToCounts = seriesToValueToCounts[seriesKey];\n            if (valueToCounts === undefined) {\n                valueToCounts = {};\n                seriesToSeriesArray[seriesKey] = seriesArray;\n                seriesToValueToCounts[seriesKey] = valueToCounts;\n                nseries++;\n                if (nseries > maxCategories) {\n                    return null;\n                }\n            }\n            let category = categoryValues[dimensionIndex][i];\n            const nameMap = renamedDimensions[dimensionIndex];\n            let newCategory = nameMap[category];\n            if (newCategory !== undefined) {\n                category = newCategory;\n            }\n            const count = valueToCounts[category] || 0;\n            valueToCounts[category] = count + 1;\n        }\n\n        const sorters = [];\n        const categoryOrder = dataset.categoryOrder || {};\n        for (let categoryIndex = 0; categoryIndex < ncategories - 1; categoryIndex++) {\n            const name = obsCat[categoryIndex];\n            sorters.push(createSorter(name, categoryOrder, categoricalNames));\n        }\n        const series = Object.keys(seriesToValueToCounts);\n\n        series.sort((a, b) => {\n            const val1 = seriesToSeriesArray[a];\n            const val2 = seriesToSeriesArray[b];\n            for (let i = 0; i < sorters.length; i++) {\n                const r = sorters[i](val1[i], val2[i]);\n                if (r !== 0) {\n                    return r;\n                }\n            }\n            return 0;\n        });\n\n        let uniqueValuesSet = new Set();\n        for (let key in seriesToValueToCounts) {\n            const valueToCounts = seriesToValueToCounts[key];\n            for (const value in valueToCounts) {\n                uniqueValuesSet.add(value);\n            }\n        }\n\n        const uniqueValues = Array.from(uniqueValuesSet);\n        uniqueValues.sort(createSorter(obsCat[ncategories - 1], categoryOrder, categoricalNames));\n        return {seriesToValueToCounts: seriesToValueToCounts, uniqueValues: uniqueValues, series: series};\n    }\n    return null;\n}\n\n\nfunction CompositionPlots(props) {\n    const {cachedData, categoricalNames, chartOptions, dataset, embeddingData, searchTokens, selection} = props;\n    const obsCat = searchTokens.filter(item => item.type === FEATURE_TYPE.OBS_CAT).map(item => item.value);\n    if (obsCat.length > 1) {\n        const dimension = obsCat[obsCat.length - 1];\n        const colorScale = getColorScale(embeddingData, dimension);\n        const composition = getComposition(dataset, obsCat, cachedData, categoricalNames);\n\n        const textColor = chartOptions.darkMode ? 'white' : 'black';\n        const selectedComposition = selection.size > 0 ? getComposition(dataset, obsCat, cachedData, categoricalNames, selection) : null;\n        const title = dimension + ' composition in ' + obsCat.slice(0, obsCat.length - 1).join(', ');\n        return <>{composition && <CompositionPlot seriesToValueToCounts={composition.seriesToValueToCounts}\n                                                  dimension={dimension}\n                                                  title={title}\n                                                  colorScale={colorScale} series={composition.series}\n                                                  uniqueValues={composition.uniqueValues}\n                                                  textColor={textColor}/>}\n\n            {selectedComposition &&\n            <CompositionPlot seriesToValueToCounts={selectedComposition.seriesToValueToCounts}\n                             dimension={dimension}\n                             title={title}\n                             subtitle=\"selection\"\n                             colorScale={colorScale} series={selectedComposition.series}\n                             uniqueValues={selectedComposition.uniqueValues}\n                             textColor={textColor}/>}\n        </>;\n    }\n    return null;\n}\n\nconst mapStateToProps = state => {\n    return {\n        cachedData: state.cachedData,\n        categoricalNames: state.categoricalNames,\n        chartOptions: state.chartOptions,\n        dataset: state.dataset,\n        embeddingData: state.embeddingData,\n        searchTokens: state.searchTokens,\n        selection: state.selection\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {};\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(CompositionPlots));\n\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport DialogTitle from '@mui/material/DialogTitle';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {deleteDataset, setDialog} from './actions';\n\nclass DeleteDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n        };\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleDelete = () => {\n        this.setState({loading: true});\n        this.props.handleDelete({dataset: this.props.dataset});\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"delete-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"delete-dataset-dialog-title\">Delete Dataset</DialogTitle>\n                <DialogContent>\n                    {this.props.dataset && <h3>Are you sure you want to delete {this.props.dataset.name}?</h3>}\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose}>\n                        Cancel\n                    </Button>\n                    <Button disabled={this.state.loading} onClick={this.handleDelete} variant=\"contained\"\n                            color=\"primary\">\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        email: state.email,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        handleDelete: value => {\n            dispatch(deleteDataset(value));\n        },\n\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DeleteDatasetDialog));\n\n","import {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {CANVAS_FONT} from './ChartUtil';\nimport {numberFormat2f} from './formatters';\nimport {stripTrailingZeros} from './util';\n\nexport function drawSizeLegend(context, scale, nsteps, width, margin = 20, textColor = 'black') {\n    let domain = scale.domain();\n\n    let stepSize = (domain[1] - domain[0]) / (nsteps + 1);\n    let steps = [];\n    steps.push(domain[0]);\n    let value = domain[0];\n    for (let i = 0; i < nsteps; i++) {\n        value += stepSize;\n        steps.push(value);\n    }\n    steps.push(domain[1]);\n    let legendHeight = 20;\n    let valueToX = scaleLinear().range([margin, width - margin]).domain([0, steps.length - 1]).clamp(true);\n    let radiusDomain = [1, 9];\n    if (scale.range()[0] > scale.range()[1]) {\n        radiusDomain = [9, 1];\n    }\n    let valueToRadius = scaleLinear().range(radiusDomain).domain(domain).clamp(true);\n\n    context.textBaseline = 'top';\n    context.fillStyle = textColor;\n    context.strokeStyle = textColor;\n    context.textAlign = 'center';\n\n    for (let i = 0; i < steps.length; i++) {\n        let pix = valueToX(i);\n        let radius = valueToRadius(steps[i]);\n        context.beginPath();\n        context.arc(pix, 10, radius, 0, Math.PI * 2);\n        context.stroke();\n        let text = stripTrailingZeros(numberFormat2f(steps[i]));\n        context.fillText(text, pix, legendHeight + 2);\n\n    }\n}\n\nclass SizeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n        const textColor = this.props.textColor || 'black';\n        context.font = CANVAS_FONT;\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n        const scale = this.props.scale;\n        if (scale == null) {\n            return;\n        }\n\n        drawSizeLegend(context, scale, this.props.nsteps || 3, width, 20, textColor);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    render() {\n\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        this.backingScale = backingScale;\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        return (\n            <canvas width={width * backingScale} height={height * backingScale} ref={this.ref} style={style}></canvas>);\n\n    }\n}\n\nexport default SizeLegend;\n\n","import {Tooltip} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport {cumsum} from 'd3-array';\nimport {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {CANVAS_FONT, SVG_FONT} from './ChartUtil';\nimport {drawColorScheme} from './ColorSchemeLegend';\nimport {computeDiffExp} from './DistributionGroup';\nimport {intFormat, numberFormat, numberFormat2f} from './formatters';\nimport {drawSizeLegend} from './SizeLegend';\nimport {INTERPOLATOR_SCALING_MIN_MAX_CATEGORY, INTERPOLATOR_SCALING_MIN_MAX_FEATURE, stripTrailingZeros} from './util';\n\nexport const CHIP_SIZE = 12;\n\nexport function getNameWidth(array2d, context) {\n    let endCoordinates = [];\n    let ncategories = 0;\n    if (array2d[0].length > 0) {\n        ncategories = array2d[0][0].name.length;\n        for (let i = 0; i < array2d[0][0].name.length; i++) {\n            endCoordinates.push(0);\n        }\n    }\n    array2d.forEach(array => {\n        let name = array[0].name;\n        for (let i = 0; i < ncategories; i++) {\n            endCoordinates[i] = Math.max(endCoordinates[i], context.measureText(name[i]).width);\n        }\n    });\n    for (let i = 0; i < endCoordinates.length; i++) {\n        // chip, 2px, text, 4px, ...\n        endCoordinates[i] += 6;\n        endCoordinates[i] += CHIP_SIZE;\n    }\n    endCoordinates = cumsum(endCoordinates);\n    endCoordinates[endCoordinates.length - 1] += 4;\n    return {endCoordinates: endCoordinates, sum: endCoordinates[endCoordinates.length - 1]};\n}\n\n\nexport default class DotPlotCanvas extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.divRef = React.createRef();\n        this.canvas = null;\n        this.state = {saveImageEl: null};\n    }\n\n\n    redraw() {\n\n        if (this.props.data == null) {\n            return <div/>;\n        }\n        let devicePixelRatio = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            devicePixelRatio = window.devicePixelRatio;\n        }\n\n        if (this.canvas == null) {\n            let onMouseMove = (event) => {\n                const node = event.target;\n                const maxRadius = this.props.sizeScale.range()[1];\n                const rect = node.getBoundingClientRect();\n                let xy = [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n                // xy[0] /= devicePixelRatio;\n                // xy[1] /= devicePixelRatio;\n                const col = Math.floor((xy[0] - this.size.x) / (maxRadius * 2));\n                const row = Math.floor((xy[1]) / (maxRadius * 2));\n\n                if (col >= 0 && col < this.props.data[0].length && row >= 0 && row < this.props.data.length) {\n                    this.props.setTooltip('');\n                    const array = this.props.data[row];\n                    const item = array[col];\n                    let tip = 'mean: ' + stripTrailingZeros(numberFormat2f(item.mean)) + ', % expressed: ' + stripTrailingZeros(numberFormat2f(item.percentExpressed)) + ', # cells: ' + intFormat(item.n);\n                    if (item.de) {\n                        tip += ', % expressed rest: ' + stripTrailingZeros(numberFormat(item.de.percentExpressed2));\n                        tip += ', log2 fold change: ' + stripTrailingZeros(numberFormat2f(item.de.foldChange));\n                        tip += ', p-value: ' + stripTrailingZeros(numberFormat2f(item.de.p));\n                        tip += ', FDR: ' + stripTrailingZeros(numberFormat2f(item.de.fdr));\n                        // tip += ', Mann-Whitney U : ' + stripTrailingZeros(numberFormat2f(item.de.statistic));\n                    }\n\n                    this.props.setTooltip(tip + ', ' + item.feature + ', ' + item.name.join(', '));\n                } else {\n                    this.props.setTooltip('');\n                }\n            };\n            let onMouseOut = (event) => {\n                this.props.setTooltip('');\n            };\n            this.canvas = document.createElement('canvas');\n            this.canvas.addEventListener(\"mousemove\", onMouseMove);\n            this.canvas.addEventListener(\"mouseout\", onMouseOut);\n            this.divRef.current.append(this.canvas);\n        }\n\n        const height = this.size.height + this.size.y;\n        const width = this.size.width + this.size.x;\n        let canvas = this.canvas;\n        const context = canvas.getContext('2d');\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n        context.font = CANVAS_FONT;\n\n        context\n            .clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\n        context.scale(devicePixelRatio, devicePixelRatio);\n        this.drawContext(context, this.size);\n    }\n\n    diffExp = () => {\n        computeDiffExp(this.props.data);\n    };\n    exportFile = () => {\n        const data2d = this.props.data;\n        const nfeatures = data2d.length > 0 ? data2d[0].length : 0;\n        const ncategories = data2d.length;\n        let text = [];\n        text.push('id');\n        for (let categoryIndex = 0; categoryIndex < ncategories; categoryIndex++) {\n            text.push('\\t');\n            const name = data2d[categoryIndex][0].name.join('_');\n            text.push(name + ':mean');\n            text.push('\\t');\n            text.push(name + ':percent_expressed');\n        }\n        text.push('\\n');\n        for (let featureIndex = 0; featureIndex < nfeatures; featureIndex++) {\n            for (let categoryIndex = 0; categoryIndex < ncategories; categoryIndex++) {\n                const item = data2d[categoryIndex][featureIndex];\n                if (categoryIndex === 0) {\n                    text.push(item.feature);\n                }\n                text.push('\\t');\n                text.push(item.mean);\n                text.push('\\t');\n                text.push(item.percentExpressed);\n            }\n            text.push('\\n');\n        }\n        let blob = new Blob([text.join('')], {\n            type: 'text/plain;charset=utf-8'\n        });\n        window.saveAs(blob, this.props.data[0][0].dimension + '.tsv');\n    };\n\n    drawContext(context, size) {\n        const data2d = this.props.data;\n        const colorScale = this.props.colorScale;\n        const interpolator = this.props.interpolator;\n        const categoryColorScales = this.props.categoryColorScales;\n        const sizeScale = this.props.sizeScale;\n        const drawCircles = this.props.drawCircles;\n        const textColor = this.props.textColor;\n        const maxRadius = sizeScale.range()[1];\n        const diameter = maxRadius * 2;\n        // context.strokeStyle = gridColor;\n        // context.lineWidth = gridThickness;\n        const valueScale = interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_FEATURE || interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_CATEGORY ? scaleLinear().range([0, 1]) : null;\n        const nfeatures = data2d.length > 0 ? data2d[0].length : 0;\n        const ncategories = data2d.length;\n        let domains = null;\n        if (interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_FEATURE) {\n            domains = [];\n            for (let featureIndex = 0; featureIndex < nfeatures; featureIndex++) {\n                let min = Number.MAX_VALUE;\n                let max = -Number.MAX_VALUE;\n                for (let categoryIndex = 0; categoryIndex < ncategories; categoryIndex++) {\n                    const array = data2d[categoryIndex];\n                    const mean = array[featureIndex].mean;\n                    min = Math.min(min, mean);\n                    max = Math.max(max, mean);\n                }\n                domains.push([min, max]);\n            }\n        } else if (interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_CATEGORY) {\n            domains = [];\n            for (let categoryIndex = 0; categoryIndex < ncategories; categoryIndex++) {\n                let min = Number.MAX_VALUE;\n                let max = -Number.MAX_VALUE;\n                for (let featureIndex = 0; featureIndex < nfeatures; featureIndex++) {\n                    const array = data2d[categoryIndex];\n                    const mean = array[featureIndex].mean;\n                    min = Math.min(min, mean);\n                    max = Math.max(max, mean);\n                }\n                domains.push([min, max]);\n            }\n        }\n        for (let featureIndex = 0; featureIndex < nfeatures; featureIndex++) { // each feature\n            if (interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_FEATURE) {\n                valueScale.domain(domains[featureIndex]);\n            }\n            for (let categoryIndex = 0; categoryIndex < ncategories; categoryIndex++) {\n                if (interpolator.scale === INTERPOLATOR_SCALING_MIN_MAX_CATEGORY) {\n                    valueScale.domain(domains[categoryIndex]);\n                }\n                const item = data2d[categoryIndex][featureIndex];\n                let mean = item.mean;\n                const ypix = categoryIndex * diameter + (drawCircles ? maxRadius : 0);\n                if (valueScale) {\n                    mean = valueScale(mean);\n                }\n                const color = colorScale(mean);\n                context.fillStyle = color;\n                context.beginPath();\n                if (drawCircles) {\n                    const xpix = featureIndex * diameter + maxRadius + size.x;\n                    const frac = item.percentExpressed;\n                    context.arc(xpix, ypix, sizeScale(frac), 0, 2 * Math.PI);\n                } else {\n                    const xpix = featureIndex * diameter + size.x;\n                    context.rect(xpix, ypix, diameter, diameter);\n                }\n                context.fill();\n            }\n            // context.stroke();\n        }\n\n\n        context.textAlign = 'left';\n        context.textBaseline = 'middle';\n\n        data2d.forEach((array, i) => { // categories\n            let name = array[0].name;\n            const pix = i * diameter + maxRadius;\n            for (let j = 0; j < name.length; j++) {\n                const chipStartCoord = j === 0 ? 0 : size.endCoordinates[j - 1];\n                const categoryColorScale = categoryColorScales[j];\n                context.fillStyle = categoryColorScale(array[0].categories[j]);\n                context.beginPath();\n                context.rect(chipStartCoord, pix - maxRadius / 2 - 3, CHIP_SIZE, CHIP_SIZE);\n                context.fill();\n                context.stroke();\n                context.fillStyle = textColor;\n                context.fillText(name[j], chipStartCoord + 2 + CHIP_SIZE, pix);\n            }\n        });\n        context.textAlign = 'right';\n        context.textBaseline = 'top';\n\n        data2d[0].forEach((item, i) => { // features\n            const text = item.feature;\n            const pix = i * diameter;\n            context.save();\n            context.translate(size.x + pix + 4, size.height);\n            context.rotate(-Math.PI / 2);\n            context.fillText(text, 0, 0);\n            context.restore();\n        });\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    getSize(context) {\n        let maxFeatureWidth = 0;\n        const array2d = this.props.data;\n        array2d[0].forEach(item => {\n            maxFeatureWidth = Math.max(maxFeatureWidth, context.measureText(item.feature).width);\n        });\n        maxFeatureWidth += 4;\n\n        const nameWidth = getNameWidth(array2d, context);\n        const maxRadius = this.props.sizeScale.range()[1];\n        const diameter = maxRadius * 2;\n        const height = array2d.length * diameter + 4;\n        const width = array2d[0].length * diameter + 4;\n        return {\n            endCoordinates: nameWidth.endCoordinates,\n            x: nameWidth.sum,\n            y: maxFeatureWidth,\n            width: width,\n            height: height\n        };\n    }\n\n    update() {\n        const canvas = this.canvas == null ? document.createElement('canvas') : this.canvas;\n        const context = canvas.getContext('2d');\n        context.font = CANVAS_FONT;\n        this.size = this.getSize(context);\n    }\n\n    handleSaveImageMenu = (event) => {\n        this.setState({saveImageEl: event.currentTarget});\n    };\n    handleSaveImageMenuClose = (event) => {\n        this.setState({saveImageEl: null});\n    };\n\n    handleSaveImage = (format) => {\n        this.setState({saveImageEl: null});\n        let context;\n\n        let canvas;\n        if (format === 'svg') {\n            context = new window.C2S(10, 10);\n            context.font = SVG_FONT;\n        } else {\n            canvas = document.createElement('canvas');\n            context = canvas.getContext('2d');\n            context.font = CANVAS_FONT;\n        }\n\n        const size = this.getSize(context);\n        const colorScaleHeight = 15 + 20;\n        const sizeScaleHeight = 40;\n        const height = size.height + size.y + colorScaleHeight + sizeScaleHeight + 10;\n        const width = Math.max(200, size.width + size.x);\n        let scale = 1;\n        if (format === 'svg') {\n            context = new window.C2S(width, height);\n            context.font = SVG_FONT;\n        } else {\n            canvas.width = width * window.devicePixelRatio;\n            canvas.height = height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            scale = window.devicePixelRatio;\n            context.scale(scale, scale);\n            context.font = CANVAS_FONT;\n        }\n        const textColor = this.props.textColor;\n        context.fillStyle = textColor === 'white' ? 'black' : 'white';\n        context.fillRect(0, 0, width, height);\n        this.drawContext(context, size);\n\n        // if (format !== 'svg') {\n        //     context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        // }\n\n        context.translate(4, scale * (size.height + size.y + 4));\n        drawColorScheme(context, this.props.colorScale, textColor);\n        context.translate(-10, (colorScaleHeight + 4));\n\n        if (this.props.drawCircles) {\n            drawSizeLegend(context, this.props.sizeScale, 3, 150, 20, textColor);\n        }\n        if (format === 'svg') {\n            let svg = context.getSerializedSvg();\n            // let prefix = [];\n            // prefix.push('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n');\n            // prefix.push('<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"' +\n            //     ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n            // svg = prefix.join('') + svg;\n            let blob = new Blob([svg], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, this.props.data[0][0].dimension + '.svg');\n        } else {\n            canvas.toBlob(blob => {\n                window.saveAs(blob, this.props.data[0][0].dimension + '.png', true);\n            });\n        }\n    };\n\n    render() {\n        this.update();\n        const {saveImageEl} = this.state;\n        const array2d = this.props.data;\n        const dimension = array2d[0][0].dimension;\n\n        return (<div style={{position: 'relative'}}>\n            <div>\n                <Typography style={{display: 'inline-block'}} component={\"h4\"}\n                            color=\"textPrimary\">{dimension}{this.props.subtitle &&\n                <small>({this.props.subtitle})</small>}</Typography>\n                <Tooltip title={\"Save Image\"}>\n                    <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false}\n                                size={'small'}\n                                aria-label=\"Save Image\" onClick={this.handleSaveImageMenu}>\n                        <PhotoCameraIcon/>\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    id=\"save-image-menu\"\n                    anchorEl={saveImageEl}\n                    keepMounted\n                    open={Boolean(saveImageEl)}\n                    onClose={this.handleSaveImageMenuClose}\n                >\n                    <MenuItem onClick={e => this.handleSaveImage('png')}>PNG</MenuItem>\n                    <MenuItem onClick={e => this.handleSaveImage('svg')}>SVG</MenuItem>\n                </Menu>\n\n\n                {/*<Tooltip title={\"Differential Expression\"}>*/}\n                {/*    <IconButton edge={false} size={'small'} aria-label=\"Export\" onClick={this.diffExp}>*/}\n                {/*        <CompareIcon/>*/}\n                {/*    </IconButton>*/}\n                {/*</Tooltip>*/}\n                <Tooltip title={\"Export\"}>\n                    <IconButton edge={false} size={'small'} aria-label=\"Export\" onClick={this.exportFile}>\n                        <CloudDownloadIcon/>\n                    </IconButton>\n                </Tooltip>\n            </div>\n            <div ref={this.divRef}></div>\n        </div>);\n\n    }\n}\n\n\n\n","import {InputLabel, MenuItem, Select, Switch} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport withStyles from '@mui/styles/withStyles';\nimport {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport DotPlotCanvas from './DotPlotCanvas';\nimport {EditableColorScheme} from './EditableColorScheme';\nimport {EditableSizeLegend} from './EditableSizeLegend';\nimport {boxplotStats, density, nrd0} from './kde';\nimport {mannWhitney} from './MannWhitneyUTest';\nimport {\n    createColorScale,\n    fdr,\n    getCategoryValue,\n    INTERPOLATOR_SCALING_MIN_MAX_CATEGORY,\n    INTERPOLATOR_SCALING_MIN_MAX_FEATURE,\n    INTERPOLATOR_SCALING_NONE,\n    NATSORT\n} from './util';\nimport {Vector} from './Vector';\nimport {stats} from './VectorUtil';\nimport ViolinPlot from './ViolinPlot';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nconst styles = theme => ({\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1)\n    }\n});\n\nfunction updateNames(data, categoricalNames) {\n    const renamedDimensions = [];\n    data[0].dimensions.forEach(dimension => {\n        renamedDimensions.push(categoricalNames[dimension] || {});\n    });\n    data.forEach(item => {\n        const names = [];\n        renamedDimensions.forEach((dimension, index) => {\n            const nameMap = renamedDimensions[index];\n            let name = item.categories[index];\n            name = getCategoryValue(nameMap, name);\n            names[index] = name;\n            item.name = names;\n        });\n    });\n}\n\nfunction reshapeData(data, distributionPlotOptions, categoryOrder) {\n    // create 2-d array with categories along rows and features along columns\n    let categoryToItems = {};\n\n    data.forEach(item => {\n        let features = categoryToItems[item.name];\n        if (features == null) {\n            features = [];\n            categoryToItems[item.name] = features;\n        }\n        features.push(item);\n    });\n    let categories = Object.keys(categoryToItems);\n    if (categories.length >= 2000) {\n        return null;\n    }\n    const dimension = data[0].dimension;\n\n    if (distributionPlotOptions.sortBy !== dimension) { // sort categories by feature\n        const category2mean = {};\n        const category2percentExpressed = {};\n        data.forEach(item => {\n            if (item.feature === distributionPlotOptions.sortBy) {\n                category2mean[item.name] = item.mean;\n                category2percentExpressed[item.name] = item.percentExpressed;\n            }\n        });\n        categories.sort((a, b) => {\n            let val1 = category2mean[a];\n            let val2 = category2mean[b];\n            let c = val1 === val2 ? 0 : (val1 > val2 ? -1 : 1);\n            if (c === 0) {\n                val1 = category2percentExpressed[a];\n                val2 = category2percentExpressed[b];\n                c = val1 === val2 ? 0 : (val1 > val2 ? -1 : 1);\n            }\n            return c;\n        });\n\n    } else { // sort by category\n        const sorters = data[0].dimensions.map(name => {\n            if (categoryOrder[name]) {\n                const orderedCategories = categoryOrder[name];\n                const categoryToIndex = new Map();\n                for (let i = 0; i < orderedCategories.length; i++) {\n                    categoryToIndex.set(orderedCategories[i], i);\n                }\n                return (a, b) => categoryToIndex.get(a) - categoryToIndex.get(b);\n            }\n            return NATSORT;\n        });\n        const ndim = sorters.length;\n        const categoryItems = categories.map(category => categoryToItems[category][0]);\n        categoryItems.sort((a, b) => {\n            for (let i = 0; i < ndim; i++) {\n                const r = sorters[i](a.categories[i], b.categories[i]);\n                if (r !== 0) {\n                    return r;\n                }\n            }\n            return 0;\n        });\n        categories = categoryItems.map(item => item.name);\n    }\n    let data2d = [];\n    for (let i = 0; i < categories.length; i++) {\n        const category = categories[i];\n        const items = categoryToItems[category];\n        data2d.push(items);\n    }\n    return data2d;\n}\n\nfunction getMeanAndPercentRange(result) {\n    // let percentRange = [Number.MAX_VALUE, -Number.MAX_VALUE];\n    let meanRange = [Number.MAX_VALUE, -Number.MAX_VALUE];\n    result.forEach(feature => {\n        // percentRange[0] = Math.min(feature.percentExpressed, percentRange[0]);\n        // percentRange[1] = Math.max(feature.percentExpressed, percentRange[1]);\n        meanRange[0] = Math.min(feature.mean, meanRange[0]);\n        meanRange[1] = Math.max(feature.mean, meanRange[1]);\n    });\n    return {mean: meanRange, percent: [0, 100]};\n}\n\nexport function computeDiffExp(data, pseudocount = 1) {\n\n    for (let i = 0; i < data.length; i++) { // category\n        const deResults = [];\n        for (let j = 0; j < data[0].length; j++) { // feature\n            const item = data[i][j];\n            const vector = item.vector;\n            const values = new Float32Array(vector.size());\n            for (let valueIndex = 0, n = values.length; valueIndex < n; valueIndex++) {\n                values[valueIndex] = vector.get(valueIndex);\n            }\n            const restValues = [];\n            for (let categoryIndex = 0; categoryIndex < data.length; categoryIndex++) {\n                if (i !== categoryIndex) {\n                    const restItem = data[categoryIndex][j];\n                    const restVector = restItem.vector;\n                    for (let valueIndex = 0, n = restVector.size(); valueIndex < n; valueIndex++) {\n                        restValues.push(restVector.get(valueIndex));\n                    }\n                }\n            }\n\n            const selectedStats = stats(new Vector('', values));\n            const restStats = stats(new Vector('', restValues));\n            const result = mannWhitney(values, restValues);\n            result.foldChange = Math.log2((selectedStats.logSum / selectedStats.n) + pseudocount) - Math.log2((restStats.logSum / restStats.n) + pseudocount); // seurat\n            //result.foldChange = Math.log2(Math.expm1(mean1 + 1e-9) / Math.expm1(mean2 + 1e-9)) // scanpy;\n            result.percentExpressed2 = 100 * (restStats.numExpressed / restStats.n);\n            deResults.push(result);\n        }\n        const correctedPValues = fdr(deResults.map(item => item.p));\n        for (let j = 0; j < data[0].length; j++) { // feature\n            const item = data[i][j];\n            const de = deResults[j];\n            de.fdr = correctedPValues[j];\n            item.de = de;\n        }\n    }\n\n}\n\nclass DistributionGroup extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            min: '',\n            max: ''\n        };\n    }\n\n    onChartTypeChange = (event) => {\n        this.props.onDistributionPlotOptions({chartType: event.target.value});\n    };\n\n    onViolinScaleChange = (event) => {\n        this.props.onDistributionPlotOptions({violinScale: event.target.value});\n    };\n\n    onViolinShowBoxplot = (event) => {\n        this.props.onDistributionPlotOptions({violinShowBoxplot: event.target.checked});\n    };\n    onSortOrderChanged = (event) => {\n        this.props.onDistributionPlotOptions({sortBy: event.target.value});\n    };\n\n    onMinUIChange = (value) => {\n        this.setState({min: value});\n    };\n    onMaxUIChange = (value) => {\n        this.setState({max: value});\n    };\n\n    onMinChange = (value) => {\n        this.props.onDistributionPlotOptions({min: value});\n    };\n    onMaxChange = (value) => {\n        this.props.onDistributionPlotOptions({max: value});\n    };\n\n    render() {\n        const {\n            textColor,\n            categoryColorScales,\n            dataset,\n            distributionData,\n            distributionPlotOptions,\n            categoricalNames,\n            selectedData,\n            interpolator,\n            setTooltip\n        } = this.props;\n        if (distributionData == null || distributionData.length === 0) {\n            return null;\n        }\n        const chartType = distributionPlotOptions.chartType;\n        const meanAndPercentRange = getMeanAndPercentRange(distributionData);\n        const meanRange = interpolator.scale !== INTERPOLATOR_SCALING_NONE ? [0, 1] : meanAndPercentRange.mean;\n        const percentRange = meanAndPercentRange.percent;\n        if (selectedData != null && selectedData.length > 0) {\n            const selectedMeanAndPercentRange = getMeanAndPercentRange(selectedData);\n            meanRange[0] = Math.min(meanRange[0], selectedMeanAndPercentRange.mean[0]);\n            meanRange[1] = Math.max(meanRange[1], selectedMeanAndPercentRange.mean[1]);\n            percentRange[0] = Math.min(percentRange[0], selectedMeanAndPercentRange.percent[0]);\n            percentRange[1] = Math.max(percentRange[1], selectedMeanAndPercentRange.percent[1]);\n        }\n\n        if (distributionPlotOptions.min != null && !isNaN(distributionPlotOptions.min)) {\n            meanRange[0] = distributionPlotOptions.min;\n        }\n        if (distributionPlotOptions.max != null && !isNaN(distributionPlotOptions.max)) {\n            meanRange[1] = distributionPlotOptions.max;\n        }\n\n        if (distributionPlotOptions.minSize != null && !isNaN(distributionPlotOptions.minSize)) {\n            percentRange[0] = distributionPlotOptions.minSize;\n        }\n\n        if (distributionPlotOptions.maxSize != null && !isNaN(distributionPlotOptions.maxSize)) {\n            percentRange[1] = distributionPlotOptions.maxSize;\n        }\n        if (distributionPlotOptions.sortBy == null) {\n            distributionPlotOptions.sortBy = distributionData[0].dimension;\n        }\n        if (distributionPlotOptions.sortBy !== distributionData[0].dimension) {\n            // ensure valid feature\n            let found = false;\n            for (let i = 0; i < distributionData.length; i++) {\n                if (distributionData[i].feature === distributionPlotOptions.sortBy) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                distributionPlotOptions.sortBy = distributionData[0].dimension;\n            }\n        }\n\n        const maxRadius = 9;\n        const minRadius = 1;\n        const colorScale = createColorScale(interpolator).domain(meanRange);\n        const sizeScale = scaleLinear().domain(percentRange).range([minRadius, maxRadius]).clamp(true);\n        updateNames(distributionData, categoricalNames);\n        if (selectedData) {\n            updateNames(selectedData, categoricalNames);\n        }\n        const data2d = reshapeData(distributionData, distributionPlotOptions, dataset.categoryOrder || {});\n        const selectedData2d = selectedData && selectedData.length > 0 ? reshapeData(selectedData, distributionPlotOptions, dataset.categoryOrder || {}) : null;\n        if ((data2d == null || data2d.length === 0) && (selectedData2d == null || selectedData2d.length === 0)) {\n            return null;\n        }\n        const features = (data2d ? data2d[0] : selectedData2d[0]).map(item => item.feature);\n\n\n        if (chartType === 'violin') {\n            const allData = selectedData ? distributionData.concat(selectedData) : distributionData;\n            features.forEach((feature) => {\n                // // ensure density is computed\n                // const summary = globalFeatureSummary[feature];\n                // if (summary.bandwidth == null) {\n                //     summary.bandwidth = nrd0(cachedData[feature]);\n                // }\n                //  const bandwidth = summary.bandwidth;\n                allData.forEach(item => {\n                    if (item.feature === feature && item.density == null) {\n                        const vector = item.vector;\n                        const values = new Float32Array(vector.size());\n                        for (let k = 0, n = values.length; k < n; k++) {\n                            values[k] = vector.get(k);\n                        }\n                        item.boxplotStats = boxplotStats(values);\n                        const bandwidth = nrd0(item.boxplotStats);\n                        item.bandwidth = bandwidth;\n                        item.density = density(values, bandwidth);\n                    }\n                });\n            });\n        }\n\n        const sortChoices = [distributionData[0].dimension].concat(features);\n        return (\n            <Box color=\"text.primary\">\n                {chartType !== 'violin' && data2d && <DotPlotCanvas\n                    categoryColorScales={categoryColorScales}\n                    colorScale={colorScale}\n                    interpolator={interpolator}\n                    sizeScale={sizeScale}\n                    textColor={textColor}\n                    drawCircles={chartType === 'dotplot'}\n                    setTooltip={setTooltip}\n                    data={data2d}/>}\n                {chartType === 'violin' && data2d && <ViolinPlot\n                    categoryColorScales={categoryColorScales}\n                    colorScale={colorScale}\n                    textColor={textColor}\n                    options={distributionPlotOptions}\n                    setTooltip={setTooltip}\n                    data={data2d}/>}\n                {chartType !== 'violin' && selectedData2d &&\n                <DotPlotCanvas\n                    categoryColorScales={categoryColorScales}\n                    colorScale={colorScale}\n                    interpolator={interpolator}\n                    sizeScale={sizeScale}\n                    subtitle=\"selection\"\n                    textColor={textColor}\n                    setTooltip={setTooltip}\n                    drawCircles={chartType === 'dotplot'}\n                    data={selectedData2d}/>}\n                {chartType === 'violin' && selectedData2d &&\n                <ViolinPlot\n                    categoryColorScales={categoryColorScales}\n                    colorScale={colorScale}\n                    subtitle=\"selection\"\n                    options={distributionPlotOptions}\n                    textColor={textColor}\n                    setTooltip={setTooltip}\n                    data={selectedData2d}/>}\n                {chartType !== 'violin' &&\n                <EditableColorScheme colorScale={colorScale}\n                                     textColor={textColor}\n                                     domain={colorScale.domain()}\n                                     interpolator={interpolator}\n                                     onInterpolator={this.props.handleInterpolator}\n                                     min={this.state.min}\n                                     max={this.state.max}\n                                     onMinChange={this.onMinChange}\n                                     onMaxChange={this.onMaxChange}\n                                     onMinUIChange={this.onMinUIChange}\n                                     onMaxUIChange={this.onMaxUIChange}\n                />}\n                {chartType !== 'violin' && <FormControl className={this.props.classes.formControl}>\n                    <InputLabel>Standardize</InputLabel>\n                    <Select\n                        label={\"Standardize\"}\n                        size={\"small\"}\n                        onChange={event => this.props.onColorScalingChange(event.target.value)}\n                        value={interpolator.scale}\n                    >\n                        <MenuItem value={\"none\"} divider>(None)</MenuItem>\n                        <MenuItem title={\"Standardize features between 0 and 1\"}\n                                  value={INTERPOLATOR_SCALING_MIN_MAX_FEATURE}>Feature</MenuItem>\n                        <MenuItem title={\"Standardize groups between 0 and 1\"}\n                                  value={INTERPOLATOR_SCALING_MIN_MAX_CATEGORY}>Category</MenuItem>\n                    </Select>\n                </FormControl>}\n                {chartType === 'dotplot' && <div style={{paddingTop: 16}}>\n                    <InputLabel shrink={true}>Size</InputLabel>\n                    <EditableSizeLegend sizeScale={sizeScale} textColor={textColor}\n                                        onOptions={this.props.onDistributionPlotOptions} showReversed={false}/>\n                </div>}\n                <FormControl className={this.props.classes.formControl}>\n                    <InputLabel shrink={true}>Sort By</InputLabel>\n                    <Select\n                        label={\"Sort By\"}\n                        size={\"small\"}\n                        onChange={this.onSortOrderChanged}\n                        value={distributionPlotOptions.sortBy}\n                    >\n                        {sortChoices.map(item => (\n                            <MenuItem key={item} value={item}>{item}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n\n\n                {chartType === 'violin' && <FormControl className={this.props.classes.formControl}>\n                    <InputLabel id=\"violin-scale-label\">Scale</InputLabel>\n                    <Select\n                        label={\"Scale\"}\n                        size={\"small\"}\n                        className={this.props.classes.select}\n                        labelId=\"violin-scale-label\"\n                        value={distributionPlotOptions.violinScale}\n                        onChange={this.onViolinScaleChange}\n                    >\n                        <MenuItem value={'area'}>Area</MenuItem>\n                        <MenuItem value={'width'}>Width</MenuItem>\n                    </Select>\n                    <FormHelperText>If \"area\", violins have the same area. If \"width\", violins have the\n                        same\n                        maximum\n                        width.</FormHelperText>\n                </FormControl>}\n\n                {chartType === 'violin' && <div><FormControlLabel\n                    control={\n                        <Switch\n                            value={\"violinShowBoxplot\"}\n                            checked={distributionPlotOptions.violinShowBoxplot}\n                            onChange={this.onViolinShowBoxplot}\n                        />\n                    }\n                    label=\"Show Box Plot\"\n                /></div>}\n\n                <FormControl className={this.props.classes.formControl}>\n                    <InputLabel id=\"dist-chart-type-label\">Chart Type</InputLabel>\n                    <Select\n                        label={\"Chart Type\"}\n                        size={\"small\"}\n                        className={this.props.classes.select}\n                        labelId=\"dist-chart-type-label\"\n                        value={chartType}\n                        onChange={this.onChartTypeChange}\n                    >\n                        {this.props.showDotPlotOption && <MenuItem value={'dotplot'}>Dot Plot</MenuItem>}\n                        <MenuItem value={'heatmap'}>Heatmap</MenuItem>\n                        <MenuItem value={'violin'}>Violin</MenuItem>\n                    </Select>\n                </FormControl>\n\n            </Box>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(DistributionGroup);\n","import {InputLabel} from '@mui/material';\nimport Input from '@mui/material/Input';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport withStyles from '@mui/styles/withStyles';\nimport * as scaleChromatic from 'd3-scale-chromatic';\nimport React from 'react';\nimport ColorSchemeLegend from './ColorSchemeLegend';\nimport {createColorScale, fixInterpolatorName, getInterpolator, interpolators} from \"./util\";\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        'flex-direction': 'column',\n    },\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1)\n    },\n\n});\n\nfunction stripInterpolate(name) {\n    if (name.startsWith(\"interpolate\")) {\n        name = name.substring(\"interpolate\".length);\n    }\n    return name;\n}\n\n\nclass ColorSchemeSelector extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {forceUpdate: false};\n    }\n\n    onInterpolatorChange = (event) => {\n        let name = event.target.value;\n        this.props.handleInterpolator(Object.assign({}, this.props.interpolator, {\n            name: name,\n            value: getInterpolator(name)\n        }));\n    };\n\n    getScale(name) {\n        return createColorScale({\n            name: name,\n            value: scaleChromatic[name],\n            reversed: this.props.interpolator.reversed\n        }).domain([0, 1]);\n    }\n\n    render() {\n\n        const {classes, interpolator} = this.props;\n        if (interpolator.reversed == null) {\n            interpolator.reversed = false;\n        }\n        const interpolatorName = fixInterpolatorName(interpolator.name);\n        const width = this.props.width || 176;\n        const height = 14;\n        return <>\n            <InputLabel shrink={true}>Color Scheme</InputLabel>\n            <Select\n                input={<Input/>}\n                className={classes.select}\n                onChange={this.onInterpolatorChange}\n                value={interpolatorName}\n                multiple={false}>\n                <MenuItem key=\"Diverging\" value=\"Diverging\" divider disabled>\n                    Diverging\n                </MenuItem>\n                {interpolators['Diverging'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n\n                    </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Single Hue)\" value=\"Sequential (Single Hue)\" divider disabled>\n                    Sequential (Single Hue)\n                </MenuItem>\n                {interpolators['Sequential (Single Hue)'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n                    </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Multi-Hue)\" value=\"Sequential (Multi-Hue)\" divider disabled>\n                    Sequential (Multi-Hue)\n                </MenuItem>\n                {interpolators['Sequential (Multi-Hue)'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n\n                    </MenuItem>))}\n\n                <MenuItem key=\"Cyclical\" value=\"Cyclical\" divider disabled>\n                    Cyclical\n                </MenuItem>\n                {interpolators['Cyclical'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n                    </MenuItem>))}\n            </Select>\n        </>;\n    }\n}\n\n\nexport default withStyles(styles)(ColorSchemeSelector);\n","import {InputLabel, Switch, Tooltip} from '@mui/material';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport {debounce} from 'lodash';\nimport React from 'react';\nimport ColorSchemeSelector from './ColorSchemeSelector';\nimport {numberFormat, numberFormat2f} from './formatters';\nimport {stripTrailingZeros} from './util';\n\n\nexport class EditableColorScheme extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.updateMin = debounce(this.updateMin, 500);\n        this.updateMax = debounce(this.updateMax, 500);\n    }\n\n    onMinChange = (event) => {\n        this.props.onMinUIChange(event.target.value);\n        this.updateMin(event.target.value);\n    };\n\n    updateMin = (value) => {\n        this.props.onMinChange(parseFloat(value));\n    };\n\n    onMaxChange = (event) => {\n        this.props.onMaxUIChange(event.target.value);\n        this.updateMax(event.target.value);\n    };\n\n    updateMax = (value) => {\n        this.props.onMaxChange(parseFloat(value));\n    };\n\n    onReversedChange = (event) => {\n        this.props.onInterpolator(Object.assign({}, this.props.interpolator, {reversed: event.target.checked}));\n    };\n\n    render() {\n        const {domain, textColor, interpolator, onInterpolator, min, max} = this.props;\n        let colorMin = \"\";\n        let colorMax = \"\";\n        if (domain) {\n            if (!isNaN(domain[0])) {\n                colorMin = stripTrailingZeros(numberFormat(domain[0]));\n            }\n            if (!isNaN(domain[1])) {\n                colorMax = stripTrailingZeros(numberFormat(domain[1]));\n            }\n            if (colorMin !== '' && colorMin === colorMax) {\n                colorMin = stripTrailingZeros(numberFormat2f(domain[0]));\n                colorMax = stripTrailingZeros(numberFormat2f(domain[1]));\n            }\n        }\n        const width = 176;\n        return <>\n            <ColorSchemeSelector handleInterpolator={onInterpolator}\n                                 interpolator={interpolator}/>\n            <>\n                <div style={{color: textColor, width: width}}><Typography\n                    variant={\"caption\"}>{colorMin}</Typography><Typography\n                    variant={\"caption\"}\n                    style={{float: 'right'}}>{colorMax}</Typography></div>\n                <InputLabel disabled={domain == null} shrink={true} variant={\"standard\"}>Custom Color\n                    Range</InputLabel>\n                <TextField\n                    InputLabelProps={{shrink: true}} style={{width: 90, marginRight: 4}}\n                    size=\"small\" type=\"text\"\n                    disabled={domain == null}\n                    onChange={this.onMinChange} label={\"Min\"}\n                    value={min}/>\n                <TextField InputLabelProps={{shrink: true}} style={{width: 90}} size=\"small\"\n                           type=\"text\"\n                           disabled={domain == null}\n                           onChange={this.onMaxChange} label={\"Max\"}\n                           value={max}/>\n            </>\n            <Tooltip title={\"Select to invert the color order\"}>\n                <div><FormControlLabel\n                    control={\n                        <Switch\n                            checked={interpolator.reversed}\n                            onChange={this.onReversedChange}\n                        />\n                    }\n                    label=\"Reverse Colors\"\n                /></div>\n            </Tooltip>\n        </>;\n    }\n}\n\n\n","import {InputLabel, Switch} from '@mui/material';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport {debounce} from 'lodash';\nimport React from 'react';\nimport SizeLegend from './SizeLegend';\n\n\nexport class EditableSizeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {minSize: '', maxSize: ''};\n        this.updateMinSize = debounce(this.updateMinSize, 500);\n        this.updateMaxSize = debounce(this.updateMaxSize, 500);\n    }\n\n\n    onMinSizeChange = (event) => {\n        this.setState({minSize: event.target.value});\n        this.updateMinSize(event.target.value);\n    };\n\n    updateMinSize = (value) => {\n        value = parseFloat(value);\n        this.props.onOptions({minSize: value});\n    };\n\n    onMaxSizeChange = (event) => {\n        this.setState({maxSize: event.target.value});\n        this.updateMaxSize(event.target.value);\n    };\n\n    updateMaxSize = (value) => {\n        value = parseFloat(value);\n        this.props.onOptions({maxSize: value});\n    };\n\n    onReversedChange = (event) => {\n        this.props.onReversedChange(event.target.checked);\n    };\n\n    render() {\n\n        const {sizeScale, reversed, showReversed, textColor} = this.props;\n\n        return <>\n            <SizeLegend style={{display: 'block'}}\n                        width={174}\n                        textColor={textColor}\n                        label={true} height={40}\n                        scale={sizeScale}/>\n            {showReversed && <div><FormControlLabel\n                control={\n                    <Switch\n                        checked={reversed}\n                        onChange={this.onReversedChange}\n                    />\n                }\n                label=\"Reverse Sizes\"\n            /></div>}\n            <InputLabel style={{marginTop: 16}} shrink={true} variant={\"standard\"}>Custom Size Range</InputLabel>\n            <TextField InputLabelProps={{shrink: true}} style={{width: 90, marginRight: 4}}\n                       size=\"small\" type=\"text\"\n                       onChange={this.onMinSizeChange} label={\"Min\"}\n                       value={this.state.minSize}/>\n            <TextField InputLabelProps={{shrink: true}} style={{width: 90}} size=\"small\" type=\"text\"\n                       onChange={this.onMaxSizeChange} label={\"Max\"}\n                       value={this.state.maxSize}/>\n        </>;\n    }\n}\n\n\n","import {quantileSorted} from 'd3-array';\n\n\n// Scott, D. W. (1992) Multivariate Density Estimation: Theory, Practice, and\n// Visualization. Wiley.\n// export function nrd(x) {\n//     let h = iqr(x) / 1.34;\n//     return 1.06 * Math.min(Math.sqrt(variance(x)), h)\n//         * Math.pow(x.length, -1 / 5);\n// }\n\n// Silverman, B. W. (1986) Density Estimation. London: Chapman and Hall.\n// export function nrd0(x) {\n//     let hi = Math.sqrt(variance(x));\n//     let lo;\n//     if (!(lo = Math.min(hi, iqr(x) / 1.34))) {\n//         (lo = hi) || (lo = Math.abs(x[1])) || (lo = 1);\n//     }\n//     return .9 * lo * Math.pow(x.length, -.2);\n// }\n\nexport function nrd0(stats) {\n    let hi = Math.sqrt(stats.variance);\n    const iqr = stats.q3 - stats.q1;\n    let lo;\n    if (!(lo = Math.min(hi, iqr / 1.34))) {\n        (lo = hi) || (lo = Math.abs(stats.x0)) || (lo = 1);\n    }\n    return .9 * lo * Math.pow(stats.n, -.2);\n}\n\nexport function boxplotStats(x) {\n    x = x.slice().sort((a, b) => a - b);\n    const q3 = quantileSorted(x, 0.75);\n    const q1 = quantileSorted(x, 0.25);\n    const q50 = quantileSorted(x, 0.5);\n    const w = 1.5;\n    let upperAdjacentValue = -Number.MAX_VALUE;\n    let lowerAdjacentValue = Number.MAX_VALUE;\n    // The upper adjacent value (UAV) is the largest observation that is\n    // less than or equal to\n    // the upper inner fence (UIF), which is the third quartile plus\n    // 1.5*IQR.\n    //\n    // The lower adjacent value (LAV) is the smallest observation that is\n    // greater than or equal\n    // to the lower inner fence (LIF), which is the first quartile minus\n    // 1.5*IQR.\n    let upperOutlier = q3 + w * (q3 - q1);\n    let lowerOutlier = q1 - w * (q3 - q1);\n    let sum = 0;\n    for (let i = 0, n = x.length; i < n; i++) {\n        const value = x[i];\n        if (value <= upperOutlier) {\n            upperAdjacentValue = Math.max(upperAdjacentValue, value);\n        }\n        if (value >= lowerOutlier) {\n            lowerAdjacentValue = Math.min(lowerAdjacentValue, value);\n        }\n        sum += value;\n    }\n    const mean = sum / x.length;\n    if (lowerAdjacentValue > q1) {\n        lowerAdjacentValue = q1;\n    }\n    if (upperAdjacentValue < q3) {\n        upperAdjacentValue = q3;\n    }\n    return {\n        mean: mean,\n        upperAdjacentValue: upperAdjacentValue,\n        lowerAdjacentValue: lowerAdjacentValue,\n        median: q50,\n        q3: q3,\n        q1: q1,\n        variance: variance(x, mean),\n        n: x.length,\n        x0: x[0]\n    };\n}\n\nfunction variance(x, mean) {\n    let sum = 0;\n    let n = x.length;\n\n    for (let i = 0; i < n; i++) {\n        const v = x[i];\n        let diff = v - mean;\n        diff = diff * diff;\n        sum += diff;\n    }\n    if (n <= 1) {\n        return NaN;\n    }\n    n = n - 1;\n    if (n < 1) {\n        n = 1;\n    }\n    return sum / n;\n}\n\n\nfunction gaussian(v) {\n    return (1 / Math.sqrt(2 * Math.PI)) * Math.exp(-0.5 * v * v);\n}\n\nfunction createKDE(bandwidth, kernel, values) {\n    const len = values.length;\n    const factor = 1 / (len * bandwidth);\n\n    return function (x) {\n        let sum = 0;\n        for (let i = 0; i < len; i++) {\n            sum += kernel((x - values[i]) / bandwidth);\n        }\n        return factor * sum;\n    };\n}\n\n\nexport function density(values, bandwidth, gridsize = 200) {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    for (let i = 0, n = values.length; i < n; i++) {\n        const value = values[i];\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n    }\n    const span = max - min;\n    const step = span / (gridsize - 1);\n    const x = new Float32Array(gridsize);\n    const y = new Float32Array(gridsize);\n    let maxKDE = 0;\n    const kde = createKDE(bandwidth, gaussian, values);\n    for (let i = 0, j = min; i < gridsize; i++, j += step) {\n        const v = kde(j);\n        x[i] = j;\n        y[i] = v;\n        maxKDE = Math.max(maxKDE, v);\n    }\n    return {x: x, y: y, max: maxKDE};\n}\n\n","import {regularizedGammaQValue} from './RegularizedGamma';\nimport {rankdata} from './util';\n\nconst SQRT2 = Math.sqrt(2.0);\nconst EXTREME_VALUE_BOUND = 40;\n\nfunction calculateAsymptoticPValue(Umin, n1, n2) {\n\n    /* long multiplication to avoid overflow (double not used due to efficiency\n     * and to avoid precision loss)\n     */\n    const n1n2prod = n1 * n2;\n\n    // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n    const EU = n1n2prod / 2.0;\n    const VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n\n    const z = (Umin - EU) / Math.sqrt(VarU);\n\n    return 2 * standardNormalCumulativeProbability(z, 0, 1);\n}\n\nfunction erfc(x) {\n    if (Math.abs(x) > EXTREME_VALUE_BOUND) {\n        return x > 0 ? 0 : 2;\n    }\n    const ret = regularizedGammaQValue(0.5, x * x, 1e-15, 10000);\n    return x < 0 ?\n        2 - ret :\n        ret;\n}\n\nfunction standardNormalCumulativeProbability(x, mean, standardDeviation) {\n    const dev = x - mean;\n    if (Math.abs(dev) > 40 * standardDeviation) {\n        return dev < 0 ? 0.0 : 1.0;\n    }\n    return 0.5 * erfc(-dev / (standardDeviation * SQRT2));\n\n}\n\nexport function mannWhitney(x, y) {\n    const Umax = mannWhitneyU(x, y);\n\n    /*\n     * It can be shown that U1 + U2 = n1 * n2\n     */\n    const Umin = x.length * y.length - Umax;\n    const p = calculateAsymptoticPValue(Umin, x.length, y.length);\n    return {statistic: Umax, p: p};\n}\n\nfunction mannWhitneyU(x, y) {\n    const z = []; // combine x and y\n    for (let i = 0, n = x.length; i < n; i++) {\n        z.push(x[i]);\n    }\n    for (let i = 0, n = y.length; i < n; i++) {\n        z.push(y[i]);\n    }\n    const ranks = rankdata(z);\n    let sumRankX = 0;\n\n    /*\n     * The ranks for x is in the first x.length entries in ranks because x\n     * is in the first x.length entries in z\n     */\n    for (let i = 0; i < x.length; ++i) {\n        sumRankX += ranks[i];\n    }\n\n    /*\n     * U1 = R1 - (n1 * (n1 + 1)) / 2 where R1 is sum of ranks for sample 1,\n     * e.g. x, n1 is the number of observations in sample 1.\n     */\n    const U1 = sumRankX - (x.length * (x.length + 1)) / 2;\n\n    /*\n     * It can be shown that U1 + U2 = n1 * n2\n     */\n    const U2 = x.length * y.length - U1;\n\n    return Math.max(U1, U2);\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport {scaleLinear} from 'd3-scale';\nimport React, {useEffect, useRef} from 'react';\nimport {CANVAS_FONT} from './ChartUtil';\nimport {CHIP_SIZE} from './DotPlotCanvas';\n\n\nfunction drawAxis(context, xscale, textColor, size) {\n    context.lineWidth = 1;\n    const format = xscale.tickFormat(4);\n    const ticks = xscale.ticks(4);\n    context.textAlign = \"right\";\n    context.textBaseline = \"middle\";\n    context.fillStyle = textColor;\n    context.strokeStyle = textColor;\n\n    const tickWidth = 4;\n    let textWidth = size.x - tickWidth;\n\n    context.lineWidth = 0.5;\n    context.beginPath();\n    context.moveTo(textWidth + tickWidth, xscale(xscale.domain()[0]));\n    context.lineTo(textWidth + tickWidth, xscale(xscale.domain()[1]));\n    context.stroke();\n    ticks.forEach(tick => {\n        const pix = xscale(tick);\n        context.fillText(format(tick), textWidth, pix);\n        context.beginPath();\n        context.moveTo(textWidth, pix);\n        context.lineTo(textWidth + tickWidth, pix);\n        context.stroke();\n    });\n    context.lineWidth = 1;\n}\n\nfunction Axis(props) {\n    const {xscale, textColor, violinHeight, size} = props;\n    const canvasRef = useRef(null);\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.font = CANVAS_FONT;\n        context\n            .clearRect(0, 0, canvas.width, canvas.height);\n        context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        drawAxis(context, xscale, textColor, size);\n    });\n\n    return (\n        <canvas\n            ref={canvasRef}\n            width={size.x * window.devicePixelRatio}\n            height={(size.y + violinHeight) * window.devicePixelRatio}\n            style={{width: size.x, height: size.y + violinHeight}}\n        />\n    );\n}\n\nfunction FeatureCategory(props) {\n    const {\n        categoryColorScales,\n        categoryIndex,\n        data,\n        feature,\n        featureIndex,\n        names,\n        options,\n        size,\n        textColor,\n        xscale,\n        yscale,\n    } = props;\n    const canvasRef = useRef(null);\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.font = CANVAS_FONT;\n        context\n            .clearRect(0, 0, canvas.width, canvas.height);\n        context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        drawCategory(context, size, names, feature, featureIndex, data, categoryIndex, xscale, yscale, categoryColorScales, textColor, options, true);\n    });\n\n    return (\n        <canvas\n            ref={canvasRef}\n            onMouseOut={event => props.onTooltip(null)}\n            onMouseMove={event => props.onTooltip(data[categoryIndex][featureIndex])}\n            width={options.violinWidth * window.devicePixelRatio}\n            height={(size.y + options.violinHeight) * window.devicePixelRatio}\n            style={{width: options.violinWidth, height: size.y + options.violinHeight}}\n        />\n    );\n}\n\nfunction drawCategory(context, size, names, feature, featureIndex, data, categoryIndex, xscale, yscale, categoryColorScales, textColor, options, drawCategories) {\n    const {violinScale, violinHeight, violinWidth, violinShowBoxplot} = options;\n    context.save();\n    context.strokeStyle = textColor;\n    const lineCap = context.lineCap;\n    const lineJoin = context.lineJoin;\n    const item = data[categoryIndex][featureIndex];\n    if (violinScale === 'width') {\n        yscale = scaleLinear().domain([-item.density.max, item.density.max]).range([4, violinWidth - 4]); // horizontal position\n    }\n    context.lineCap = 'round';\n    context.lineJoin = 'round';\n    const density = item.density;\n    // context.fillStyle = colorScale(item.mean);\n    // context.translate(size.x + categoryIndex * violinWidth, 0);\n    context.beginPath();\n    context.moveTo(yscale(density.y[0]), xscale(density.x[0]));\n\n    for (let i = 1, n = density.x.length; i < n; i++) {\n        context.lineTo(yscale(-density.y[i]), xscale(density.x[i]));\n    }\n    for (let i = density.x.length - 2; i > 0; i--) {\n        context.lineTo(yscale(density.y[i]), xscale(density.x[i]));\n    }\n    // context.closePath();\n\n    // context.fill();\n    context.stroke();\n    const boxplotWidth = 6;\n    context.lineCap = lineCap;\n    context.lineJoin = lineJoin;\n    if (violinShowBoxplot) {\n        // iqr box\n        context.strokeRect(violinWidth / 2 - boxplotWidth / 2, xscale(item.boxplotStats.q3), boxplotWidth, xscale(item.boxplotStats.q1) - xscale(item.boxplotStats.q3));\n\n        // median\n        context.beginPath();\n        context.moveTo(violinWidth / 2 - boxplotWidth / 2, xscale(item.boxplotStats.median));\n        context.lineTo(violinWidth / 2 - boxplotWidth / 2 + boxplotWidth, xscale(item.boxplotStats.median));\n        context.stroke();\n\n        // mean\n        // context.setLineDash([2, 5]);\n        // context.beginPath();\n        // context.moveTo(violinWidth / 2 - boxplotWidth / 2, xscale(item.boxplotStats.mean));\n        // context.lineTo(violinWidth / 2 - boxplotWidth / 2 + boxplotWidth, xscale(item.boxplotStats.mean));\n        // context.stroke();\n        // context.setLineDash([]);\n\n        // line from q3 to upperAdjacentValue\n        context.beginPath();\n        context.moveTo(violinWidth / 2, xscale(item.boxplotStats.upperAdjacentValue));\n        context.lineTo(violinWidth / 2, xscale(item.boxplotStats.q3));\n        context.stroke();\n        // line from q1 to lowerAdjacentValue\n        context.beginPath();\n        context.moveTo(violinWidth / 2, xscale(item.boxplotStats.q1));\n        context.lineTo(violinWidth / 2, xscale(item.boxplotStats.lowerAdjacentValue));\n        context.stroke();\n    }\n    context.restore();\n    if (drawCategories) {\n        // draw chips and categories\n        context.textBaseline = 'middle';\n        context.textAlign = \"left\";\n        const height = violinHeight + size.y - 1;\n        const name = item.name;\n        const centerPix = violinWidth / 2;\n        for (let j = 0; j < name.length; j++) {\n            // chip, 2px, text, 4px, ...\n            const chipStartCoord = j === 0 ? 0 : size.endCoordinates[j - 1];\n            const categoryColorScale = categoryColorScales[j];\n            const category = item.categories[j];\n            context.fillStyle = categoryColorScale(category);\n            context.beginPath();\n            context.rect(centerPix - CHIP_SIZE + 4, height - CHIP_SIZE - chipStartCoord, CHIP_SIZE, CHIP_SIZE);\n            context.fill();\n            context.stroke();\n\n            context.save();\n            context.fillStyle = textColor;\n            context.translate(centerPix, height - chipStartCoord - CHIP_SIZE - 2);\n            context.rotate(-Math.PI / 2);\n            context.fillText(name[j], 0, 0);\n            context.restore();\n        }\n    }\n\n}\n\nexport function getViolinPlotScales(data, featureIndex, options) {\n    const {violinScale, violinHeight, violinWidth} = options;\n    let xmin = Number.MAX_VALUE;\n    let xmax = -Number.MAX_VALUE;\n    let ymax = -Number.MAX_VALUE;\n    const names = data.map(array => array[0].name); // array of arrays\n    for (let i = 0; i < names.length; i++) {\n        const item = data[i][featureIndex];\n        xmin = Math.min(xmin, item.density.x[0]);\n        xmax = Math.max(xmax, item.density.x[item.density.x.length - 1]);\n        ymax = Math.max(ymax, item.density.max);\n    }\n\n    let yscale;\n    if (violinScale === 'area') {\n        yscale = scaleLinear().domain([-ymax, ymax]).range([4, violinWidth - 4]); // horizontal position\n    }\n    const xscale = scaleLinear().domain([xmin, xmax]).range([violinHeight - 1, 6]).nice(); // vertical position\n    return {xscale, yscale};\n}\n\nexport function drawFeature(context, size, feature, data, colorScale, options, drawCategories, categoryColorScales, textColor, xscale, yscale) {\n\n    const features = data[0].map(item => item.feature);\n    const featureIndex = features.indexOf(feature);\n    const names = data.map(array => array[0].name); // array of arrays\n    drawAxis(context, xscale, textColor, size);\n    context.translate(size.x, 0);\n    for (let categoryIndex = 0; categoryIndex < names.length; categoryIndex++) {\n        context.save();\n        context.translate(categoryIndex * options.violinWidth, 0);\n        drawCategory(context, size, names, feature, featureIndex, data, categoryIndex, xscale, yscale, categoryColorScales, textColor, options, drawCategories);\n        context.restore();\n    }\n\n    // // x axis\n    // context.beginPath();\n    // context.moveTo(textWidth + tickWidth, xscale(xscale.domain()[0]));\n    // context.lineTo(size.width + size.x - 4, xscale(xscale.domain()[0]));\n    // context.stroke();\n\n}\n\nexport default function ViolinPlotOneFeature(props) {\n    const {data, feature, textColor, size, options, onTooltip, categoryColorScales} = props;\n    const features = data[0].map(item => item.feature);\n    const categories = data.map(array => array[0].name);\n    const featureIndex = features.indexOf(feature);\n    const {xscale, yscale} = getViolinPlotScales(data, featureIndex, options);\n    return (\n        <Box borderColor=\"text.primary\" border={1}\n             style={{display: 'inline-block', margin: 2}}>\n            <Typography color=\"textPrimary\" component={\"h4\"}\n                        style={{\n                            marginTop: '3.2px',\n                        }}>{feature}</Typography>\n            <Axis xscale={xscale} textColor={textColor} violinHeight={options.violinHeight} size={size}/>\n            {categories.map((category, categoryIndex) => <FeatureCategory options={options}\n                                                                          key={category}\n                                                                          categoryIndex={categoryIndex}\n                                                                          data={data}\n                                                                          feature={feature}\n                                                                          featureIndex={featureIndex}\n                                                                          names={categories}\n                                                                          xscale={xscale}\n                                                                          yscale={yscale}\n                                                                          textColor={textColor}\n                                                                          onTooltip={onTooltip}\n                                                                          categoryColorScales={categoryColorScales}\n                                                                          size={size}/>)}\n        </Box>);\n\n}\n\n\n\n\n\n","import {Tooltip} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport React from 'react';\nimport {CANVAS_FONT, SVG_FONT} from './ChartUtil';\nimport {getNameWidth} from './DotPlotCanvas';\nimport {intFormat, numberFormat2f} from './formatters';\nimport {stripTrailingZeros} from './util';\nimport ViolinPlotOneFeature, {drawFeature, getViolinPlotScales} from './ViolinPlotOneFeature';\n\nconst yaxisWidth = 30;\n\n\nexport default class ViolinPlot extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.canvas = null;\n        this.state = {saveImageEl: null};\n    }\n\n\n    handleSaveImageMenu = (event) => {\n        this.setState({saveImageEl: event.currentTarget});\n    };\n    handleSaveImageMenuClose = (event) => {\n        this.setState({saveImageEl: null});\n    };\n    handleSaveImage = (format) => {\n        this.setState({saveImageEl: null});\n        let context;\n\n        let canvas;\n        if (format === 'svg') {\n            context = new window.C2S(10, 10);\n            context.font = SVG_FONT;\n        } else {\n            canvas = document.createElement('canvas');\n            context = canvas.getContext('2d');\n            context.font = CANVAS_FONT;\n        }\n\n        const size = this.getSize(context);\n\n        const colorScaleHeight = 15;\n        const height = size.totalHeight + size.y + colorScaleHeight + 20;\n        const width = Math.max(200, size.width + size.x);\n\n        if (format === 'svg') {\n            context = new window.C2S(width, height);\n            context.font = SVG_FONT;\n        } else {\n            canvas.width = width * window.devicePixelRatio;\n            canvas.height = height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            context.font = CANVAS_FONT;\n        }\n        const textColor = 'black';\n        // const textColor = this.props.textColor;\n        context.fillStyle = textColor === 'white' ? 'black' : 'white';\n        context.fillRect(0, 0, width, height);\n        this.drawContext(context, size);\n\n        if (format === 'svg') {\n            let svg = context.getSerializedSvg();\n            let blob = new Blob([svg], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, this.props.data[0][0].dimension + '.svg');\n        } else {\n            canvas.toBlob(blob => {\n                window.saveAs(blob, this.props.data[0][0].dimension + '.png', true);\n            });\n        }\n    };\n\n    drawContext(context, size) {\n        const {categoryColorScales, colorScale, data, options, textColor} = this.props;\n        const {violinHeight, violinWidth} = options;\n        const features = data[0].map(item => item.feature);\n        const categories = data.map(array => array[0].name);\n        for (let i = 0; i < features.length; i++) {\n            context.save();\n            context.translate(0, violinHeight * i);\n            const {xscale, yscale} = getViolinPlotScales(data, i, options);\n            drawFeature(context, size, features[i], data, colorScale, options, i === features.length - 1, categoryColorScales, textColor, xscale, yscale);\n            context.textBaseline = 'top';\n            context.textAlign = \"middle\";\n            context.fillStyle = textColor;\n            context.fillText(features[i], (violinWidth * categories.length) / 2, 0);\n            context.restore();\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    onTooltip = (item) => {\n        if (item) {\n            const median = item.boxplotStats.median;\n            let tip = 'mean: ' + stripTrailingZeros(numberFormat2f(item.mean)) + ', median: ' + stripTrailingZeros(numberFormat2f(median)) + ', % expressed: ' + stripTrailingZeros(numberFormat2f(item.percentExpressed)) + ', # cells: ' + intFormat(item.n) + ', ' + item.name.join(', ');\n            this.props.setTooltip(tip);\n        } else {\n            this.props.setTooltip('');\n        }\n    };\n\n    getSize(context) {\n        const {data, options} = this.props;\n        const {violinHeight, violinWidth} = options;\n        const categories = data.map(array => array[0].name);\n        const features = data[0].map(item => item.feature);\n        const nameWidth = getNameWidth(data, context);\n        const totalHeight = features.length * violinHeight + 4;\n        const width = categories.length * violinWidth + 4;\n        return {\n            x: yaxisWidth,\n            endCoordinates: nameWidth.endCoordinates,\n            y: nameWidth.sum,\n            width: width,\n            totalHeight: totalHeight\n        };\n    }\n\n    render() {\n        const {saveImageEl} = this.state;\n        const {categoryColorScales, colorScale, data, options, textColor} = this.props;\n        const features = data[0].map(item => item.feature);\n        const dimension = data[0][0].dimension;\n        const dummyCanvas = document.createElement('canvas');\n        const dummyContext = dummyCanvas.getContext('2d');\n        dummyContext.font = CANVAS_FONT;\n        const size = this.getSize(dummyContext);\n\n        return (<div style={{position: 'relative'}}>\n            <div>\n                <Typography style={{display: 'inline-block'}} component={\"h4\"}\n                            color=\"textPrimary\">{dimension}{this.props.subtitle &&\n                <small>({this.props.subtitle})</small>}</Typography>\n                <Tooltip title={\"Save Image\"}>\n                    <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false}\n                                size={'small'}\n                                aria-label=\"Save Image\" onClick={this.handleSaveImageMenu}>\n                        <PhotoCameraIcon/>\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    id=\"save-image-menu\"\n                    anchorEl={saveImageEl}\n                    keepMounted\n                    open={Boolean(saveImageEl)}\n                    onClose={this.handleSaveImageMenuClose}\n                >\n                    <MenuItem onClick={e => this.handleSaveImage('png')}>PNG</MenuItem>\n                    <MenuItem onClick={e => this.handleSaveImage('svg')}>SVG</MenuItem>\n\n                </Menu>\n\n            </div>\n\n            {features.map(feature => {\n                return <ViolinPlotOneFeature onTooltip={this.onTooltip}\n                                             key={feature}\n                                             feature={feature}\n                                             data={data}\n                                             categoryColorScales={categoryColorScales}\n                                             options={options}\n                                             size={size}\n                                             textColor={textColor}\n                                             colorScale={colorScale}/>;\n            })}\n\n        </div>);\n\n    }\n}\n\n\n\n\n","import {scaleOrdinal} from 'd3-scale';\nimport {schemeCategory10} from 'd3-scale-chromatic';\nimport {groupBy, partial} from 'lodash';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDistributionPlotInterpolator, setDistributionPlotOptions} from './actions';\nimport DistributionGroup from './DistributionGroup';\nimport Typography from '@mui/material/Typography';\n\n\nfunction DistributionPlots(props) {\n\n\n    function onInterpolator(dataType, value) {\n        const existingInterpolator = props.distributionPlotInterpolator[dataType];\n        value.scale = existingInterpolator.scale;\n        props.distributionPlotInterpolator[dataType] = value;\n        props.onInterpolator(Object.assign({}, props.distributionPlotInterpolator));\n    }\n\n    function onColorScalingChange(dataType, value) {\n        const existingInterpolator = props.distributionPlotInterpolator[dataType];\n        existingInterpolator.scale = value;\n        props.onInterpolator(Object.assign({}, props.distributionPlotInterpolator));\n    }\n\n    function onDistributionPlotOptionsDataType(dataType, value) {\n        props.distributionPlotOptions[dataType] = Object.assign({}, props.distributionPlotOptions[dataType], value);\n        onDistributionPlotOptions(Object.assign({}, props.distributionPlotOptions));\n    }\n    \n    const {\n        cachedData,\n        categoricalNames,\n        chartOptions,\n        dataset,\n        distributionData,\n        distributionPlotOptions,\n        distributionPlotInterpolator,\n        embeddingData,\n        globalFeatureSummary,\n        onDistributionPlotOptions,\n        selectedDistributionData,\n        setTooltip\n    } = props;\n    const textColor = chartOptions.darkMode ? 'white' : 'black';\n    const keys = Object.keys(distributionData);\n    const typeToInfo = {\n        X: {order: 0, name: 'Features'},\n        modules: {order: 1, name: 'Modules'},\n        obs: {order: 2, name: 'Observations'}\n    };\n    keys.sort((a, b) => typeToInfo[a].order - typeToInfo[b].order);\n    return keys.map(key => {\n        const name = typeToInfo[key].name;\n        let dimension2data = groupBy(distributionData[key], 'dimension');\n        let dimension2selecteddata = groupBy(selectedDistributionData[key], 'dimension');\n        return <div key={key}><Typography color=\"textPrimary\"\n                                          variant={\"h5\"}>{name}</Typography>{Object.keys(dimension2data).map(dimension => {\n            const data = dimension2data[dimension];\n            const categoryColorScales = [];\n            data[0].dimensions.forEach(dimension => {\n                let found = false;\n                for (let i = 0; i < embeddingData.length; i++) {\n                    if (dimension === embeddingData[i].name) {\n                        categoryColorScales.push(embeddingData[i].colorScale); // TODO make color scale independent of embedding\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    categoryColorScales.push(scaleOrdinal(schemeCategory10)); // TODO make color scale independent of embedding\n                }\n            });\n\n            return <DistributionGroup key={dimension}\n                                      cachedData={cachedData}\n                                      setTooltip={setTooltip}\n                                      showDotPlotOption={key==='X'}\n                                      categoryColorScales={categoryColorScales}\n                                      dataset={dataset}\n                                      distributionData={data}\n                                      globalFeatureSummary={globalFeatureSummary}\n                                      selectedData={dimension2selecteddata[dimension]}\n                                      interpolator={distributionPlotInterpolator[key]}\n                                      distributionPlotOptions={distributionPlotOptions[key]}\n                                      categoricalNames={categoricalNames}\n                                      textColor={textColor}\n                                      handleInterpolator={partial(onInterpolator, key)}\n                                      onColorScalingChange={partial(onColorScalingChange, key)}\n                                      onDistributionPlotOptions={partial(onDistributionPlotOptionsDataType, key)}/>;\n        })}</div>;\n    });\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        cachedData: state.cachedData,\n        categoricalNames: state.categoricalNames,\n        chartOptions: state.chartOptions,\n        dataset: state.dataset,\n        distributionData: state.distributionData,\n        distributionPlotOptions: state.distributionPlotOptions,\n        distributionPlotInterpolator: state.distributionPlotInterpolator,\n        embeddingData: state.embeddingData,\n        globalFeatureSummary: state.globalFeatureSummary,\n        selectedDistributionData: state.selectedDistributionData\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDistributionPlotOptions: (payload) => {\n            dispatch(setDistributionPlotOptions(payload));\n        },\n        onInterpolator: value => {\n            dispatch(setDistributionPlotInterpolator(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(DistributionPlots));\n\n","import Divider from '@mui/material/Divider';\nimport React, {useRef} from 'react';\n\nimport {connect} from 'react-redux';\nimport {setPrimaryChartSize} from './actions';\n\n\nfunction DraggableDivider(props) {\n    const dragging = useRef(false);\n    const clientY = useRef(-1);\n    const primaryChartHeight = useRef(-1);\n\n    function onMouseDown(event) {\n        dragging.current = true;\n        clientY.current = event.clientY;\n        primaryChartHeight.current = props.primaryChartSize.height;\n        document.body.style.cursor = 'ns-resize';\n        window.addEventListener('mousemove', onMouseMove);\n        window.addEventListener('mouseup', onMouseUp);\n    }\n\n    function onMouseUp(event) {\n        if (dragging.current) {\n            window.removeEventListener('mousemove', onMouseMove);\n            window.removeEventListener('mouseup', onMouseUp);\n            document.body.style.cursor = null;\n        }\n        dragging.current = false;\n    }\n\n    function onMouseMove(event) {\n        if (dragging.current) {\n            const primaryChartSize = props.primaryChartSize;\n            const delta = clientY.current - event.clientY;\n            props.handlePrimaryChartSize({\n                width: primaryChartSize.width,\n                height: Math.max(50, primaryChartHeight.current - delta)\n            });\n        }\n    }\n\n\n    const {activeFeature} = props;\n\n    return (\n        <div style={{\n            height: 10, cursor: 'ns-resize',\n            display: activeFeature ? 'flex' : 'none',\n            alignItems: 'center', justifyContent: 'center'\n        }}\n             onMouseDown={onMouseDown}>\n            <Divider style={{width: '100%'}}/>\n        </div>\n    );\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        activeFeature: state.activeFeature,\n        primaryChartSize: state.primaryChartSize\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handlePrimaryChartSize: value => {\n            dispatch(setPrimaryChartSize(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DraggableDivider));\n\n","import {CircularProgress, InputLabel, Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Link from '@mui/material/Link';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport withStyles from '@mui/styles/withStyles';\nimport Tab from '@mui/material/Tab';\nimport Tabs from '@mui/material/Tabs';\nimport TextField from '@mui/material/TextField';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport LinkIcon from '@mui/icons-material/Link';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {EDIT_DATASET_DIALOG, saveDataset, setDialog, setMessage} from './actions';\nimport {REACT_MD_OVERRIDES} from './util';\n\nconst styles = theme => ({\n\n    formControl: {\n        minWidth: 200,\n        marginTop: theme.spacing(1)\n    },\n    select: {\n        minWidth: 200\n    }\n});\n\nconst favoriteSpecies = [\"Homo sapiens\", \"Mus musculus\"];\nconst otherSpecies = [\"Gallus gallus\", \"Macaca fascicularis\", \"Macaca mulatta\", \"Rattus norvegicus\"];\n\n\nfunction getUniqueArray(text) {\n    let tokens = text.split(',');\n    let values = new Set();\n    for (let i = 0; i < tokens.length; i++) {\n        let s = tokens[i].trim().toLowerCase();\n        if (s !== '') {\n            values.add(s);\n        }\n    }\n    return Array.from(values);\n}\n\nclass EditNewDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.init = false;\n        this.fileInputRef = React.createRef();\n        this.fileDropRef = React.createRef();\n        this.dragIndicator = React.createRef();\n        this.state = {\n            url: '',\n            writePreviewTabValue: \"Write\",\n            uploadTabValue: \"URL\",\n            species: this.props.dataset != null ? this.props.dataset.species : '',\n            name: this.props.dataset != null ? this.props.dataset.name : '',\n            title: this.props.title != null ? (this.props.dataset.title != null ? this.props.dataset.title : '') : '',\n            description: this.props.dataset != null ? (this.props.dataset.description != null ? this.props.dataset.description : '') : '',\n            readers: '',\n            loading: this.props.dataset != null\n        };\n    }\n\n    showDragIndicator(event, show) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.dragIndicator.current.style.background = show ? '#1976d2' : '';\n    }\n\n\n    initDragDrop = () => {\n        if (!this.init) {\n            const fileDropRef = this.fileDropRef.current;\n            this.init = true;\n\n            fileDropRef.addEventListener('dragover', (e) => {\n                this.showDragIndicator(e, true);\n            });\n            fileDropRef.addEventListener('dragenter', (e) => {\n                this.showDragIndicator(e, true);\n            });\n            fileDropRef.addEventListener('dragend', (e) => {\n                this.showDragIndicator(e, false);\n            });\n            fileDropRef.addEventListener('dragleave', (e) => {\n                this.showDragIndicator(e, false);\n            });\n            fileDropRef.addEventListener('drop', (e) => {\n                this.showDragIndicator(e, false);\n                const filesArray = e.dataTransfer.files;\n                if (filesArray.length === 1) {\n                    this.setState({file: filesArray[0]});\n                }\n            });\n        }\n    };\n\n\n    componentDidMount() {\n        if (this.props.dataset != null) {\n            let readers = this.props.dataset.readers;\n            if (readers) {\n                let myIndex = readers.indexOf(this.props.email);\n                if (myIndex !== -1) {\n                    readers.splice(myIndex, 1);\n                }\n                readers = readers.join(', ');\n            }\n            this.setState({\n                file: null,\n                species: this.props.dataset.species != null ? this.props.dataset.species : '',\n                name: this.props.dataset.name,\n                description: this.props.dataset.description != null ? this.props.dataset.description : '',\n                title: this.props.dataset.title != null ? this.props.dataset.title : '',\n                loading: false,\n                url: this.props.dataset.url,\n                readers: readers\n            });\n        }\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        if (name === '') {\n            return;\n        }\n        let url = null;\n        let file = null;\n        const isNew = this.props.dataset == null;\n        if (isNew) {\n            if (this.state.uploadTabValue === 1 || !this.props.serverInfo.upload) {\n                url = this.state.url.trim();\n\n            } else {\n                file = this.state.file;\n            }\n        }\n\n        let description = this.state.description.trim();\n        let title = this.state.title.trim();\n        let species = this.state.species;\n        this.setState({loading: true});\n\n        let readers = null;\n        if (this.state.readers != null) {\n            readers = getUniqueArray(this.state.readers);\n        }\n        this.props.handleSave({\n            dataset: this.props.dataset,\n            name: name,\n            title: title,\n            description: description,\n            url: url,\n            file: file,\n            species: species,\n            readers: readers\n        });\n    };\n\n    onWritePreviewTabChanged = (event, value) => {\n        this.setState({writePreviewTabValue: value});\n    };\n\n    onUploadTabChanged = (event, value) => {\n        this.setState({uploadTabValue: value});\n    };\n\n    onEmailChanged = (event) => {\n        this.setState({readers: event.target.value});\n    };\n    onUrlChanged = (event) => {\n        this.setState({url: event.target.value});\n    };\n    onFilesChanged = () => {\n        const files = this.fileInputRef.current.files;\n        this.setState({file: files[0]});\n    };\n    onSpeciesChange = (event) => {\n        this.setState({species: event.target.value});\n    };\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n    onDescriptionChanged = (event) => {\n        this.setState({description: event.target.value});\n    };\n    onTitleChanged = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    render() {\n        const canUpload = this.props.serverInfo.upload;\n        const isNew = this.props.dataset == null;\n        let saveEnabled = !this.state.loading && this.state.name.trim() !== '';\n        const isAuthEnabled = this.props.serverInfo.clientId !== '';\n\n        if (isNew) {\n            if (this.state.uploadTabValue === 1 || !this.props.serverInfo.upload) {\n                const url = this.state.url.trim();\n                saveEnabled = saveEnabled && url !== '';\n            } else {\n                saveEnabled = saveEnabled && this.state.file != null;\n            }\n        }\n        return (\n            <Dialog\n                open={true}\n                ref={this.fileDropRef}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'lg'}\n                TransitionProps={{\n                    onEntered: e => this.initDragDrop()\n                }}>\n                <DialogTitle id=\"edit-dataset-dialog-title\">{isNew\n                    ? 'New'\n                    : 'Edit'} Dataset</DialogTitle>\n                <DialogContent>\n                    <Box>\n                        {this.state.loading && <CircularProgress/>}\n                        <TextField\n                            size={\"small\"}\n                            disabled={this.state.loading}\n                            autoComplete=\"off\"\n                            required={true}\n                            value={this.state.name}\n                            onChange={this.onNameChanged}\n                            margin=\"dense\"\n                            label=\"Name\"\n                            fullWidth\n                        />\n\n                        <div style={{display: isNew && canUpload ? '' : 'none'}}>\n                            <FormControl className={this.props.classes.formControl}>\n                                <InputLabel shrink required>Source</InputLabel>\n                            </FormControl>\n                            <Tabs value={this.state.uploadTabValue} onChange={this.onUploadTabChanged}\n                                  aria-label=\"upload\">\n                                <Tab value=\"My Computer\" label=\"My Computer\" icon={<CloudUploadIcon/>}/>\n                                <Tab value=\"URL\" label=\"URL\" icon={<LinkIcon/>}/>\n                            </Tabs>\n                            <div\n                                role=\"tabpanel\"\n                                hidden={this.state.uploadTabValue !== \"My Computer\"}\n                            >\n                                <div ref={this.dragIndicator}>\n                                    <Button size=\"small\" variant=\"outlined\" disabled={this.state.loading}\n                                            onClick={e => this.fileInputRef.current.click()}>Select File</Button>\n                                    <Typography style={{display: 'inline-block', paddingLeft: '1em'}} component={\"h3\"}>or\n                                        Drag\n                                        And Drop</Typography>\n                                    <input hidden ref={this.fileInputRef} type=\"file\" onChange={this.onFilesChanged}/>\n                                    <Typography style={{display: 'block'}} color=\"textPrimary\"\n                                                variant={\"caption\"}>{this.state.file ? this.state.file.name : ''}</Typography>\n                                </div>\n                                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\n                            </div>\n\n\n                            <div role=\"tabpanel\" hidden={this.state.uploadTabValue !== \"URL\"}>\n                                <TextField\n                                    size={\"small\"}\n                                    required={true}\n                                    disabled={this.state.loading}\n                                    autoComplete=\"off\"\n                                    value={this.state.url}\n                                    onChange={this.onUrlChanged}\n                                    margin=\"dense\"\n                                    helperText={this.props.serverInfo.email ? \"Please ensure that \" + this.props.serverInfo.email + \" has read permission to this URL\" : ''}\n                                    label={\"URL\"}\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n\n                        <TextField\n                            size={\"small\"}\n                            style={{display: isNew && canUpload ? 'none' : ''}}\n                            required={true}\n                            disabled={this.state.loading || !isNew}\n                            autoComplete=\"off\"\n                            value={this.state.url}\n                            onChange={this.onUrlChanged}\n                            margin=\"dense\"\n                            helperText={this.props.serverInfo.email ? \"Please ensure that \" + this.props.serverInfo.email + \" has read permission to this URL\" : ''}\n                            label={\"URL\"}\n                            fullWidth\n                        />\n\n                        <FormControl className={this.props.classes.formControl}>\n                            <InputLabel id=\"species-label\">Species</InputLabel>\n                            <Select\n                                label={\"Species\"}\n                                size={\"small\"}\n                                labelId=\"species-label\"\n                                value={this.state.species}\n                                onChange={this.onSpeciesChange}\n                            >\n                                {favoriteSpecies.map(species => <MenuItem key={species}\n                                                                          value={species}>{species}</MenuItem>)}\n                                <MenuItem divider={true}/>\n                                {otherSpecies.map(species => <MenuItem key={species}\n                                                                       value={species}>{species}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n\n\n                        <TextField\n                            size={\"small\"}\n                            disabled={this.state.loading}\n                            autoComplete=\"off\"\n                            required={false}\n                            value={this.state.title}\n                            onChange={this.onTitleChanged}\n                            margin=\"dense\"\n                            label=\"Title\"\n                            fullWidth\n                            inputProps={{maxLength: 255}}\n                        />\n                        <FormControl className={this.props.classes.formControl}>\n                            <InputLabel shrink>Summary</InputLabel>\n                            <FormHelperText style={{marginTop: 14}}><Link\n                                href={\"https://www.markdownguide.org/cheat-sheet/\"}\n                                target=\"_blank\">Markdown Cheat Sheet</Link></FormHelperText>\n                        </FormControl>\n\n\n                        <Tabs value={this.state.writePreviewTabValue} onChange={this.onWritePreviewTabChanged}\n                              aria-label=\"description-editor\">\n                            <Tab value=\"Write\" label=\"Write\"/>\n                            <Tab value=\"Preview\" label=\"Preview\"/>\n                        </Tabs>\n\n                        <div role=\"tabpanel\" hidden={this.state.writePreviewTabValue !== \"Write\"}>\n                            <TextField\n                                size={\"small\"}\n                                disabled={this.state.loading}\n                                autoComplete=\"off\"\n                                required={false}\n                                value={this.state.description}\n                                onChange={this.onDescriptionChanged}\n                                margin=\"dense\"\n                                fullWidth\n                                variant=\"outlined\"\n                                rows={8}\n                                maxRows={8}\n                                multiline={true}\n                                inputProps={{maxLength: 1000}}\n                            />\n                        </div>\n                        <div role=\"tabpanel\" hidden={this.state.writePreviewTabValue !== \"Preview\"}>\n                            {this.state.description !== '' && <Box border={1}>\n                                <ReactMarkdown options={{overrides: REACT_MD_OVERRIDES}}\n                                               children={this.state.description}/>\n                            </Box>}\n                        </div>\n\n                        <TextField\n                            size={\"small\"}\n                            value={this.state.readers}\n                            onChange={this.onEmailChanged}\n                            margin=\"dense\"\n                            label=\"Readers\"\n                            helperText={isAuthEnabled ? \"Enter comma separated list of emails\" : \"Enable authentication to permit sharing\"}\n                            disabled={this.state.loading || !isAuthEnabled}\n                            fullWidth\n                            multiline\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose}>\n                        Cancel\n                    </Button>\n                    <Button disabled={!saveEnabled} onClick={this.handleSave}\n                            variant=\"contained\" color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dialog === EDIT_DATASET_DIALOG ? state.dataset : null,\n        email: state.email,\n        serverInfo: state.serverInfo\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveDataset(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        }\n\n    };\n};\n\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps\n)(EditNewDatasetDialog));\n","import {Typography} from '@mui/material';\nimport Chip from '@mui/material/Chip';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport {styled, useTheme} from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Autocomplete, {autocompleteClasses} from '@mui/material/Autocomplete';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {sortableContainer, sortableElement} from 'react-sortable-hoc';\nimport {VariableSizeList} from 'react-window';\nimport Popper from '@mui/material/Popper';\nimport Link from '@mui/material/Link';\n\n\nconst LISTBOX_PADDING = 0; // px\n\nfunction getTextMatch(text, inputValue) {\n    inputValue = inputValue.toLowerCase();\n    if (inputValue !== '') {\n        const index = text.toLowerCase().indexOf(inputValue);\n        if (index !== -1) { // bold the matching text when searching\n            const inputLength = inputValue.length;\n            const before = text.substring(0, index);\n            const match = text.substring(index, index + inputLength);\n            const after = text.substring(index + inputLength);\n            return [before, match, after];\n        }\n    }\n}\n\nfunction renderRow(props) {\n    const {data, index, style} = props;\n    const dataSet = data[index];\n    const inlineStyle = {\n        ...style,\n        top: style.top + LISTBOX_PADDING\n    };\n\n\n    if (dataSet.hasOwnProperty('group')) {\n        inlineStyle.whiteSpace = 'nowrap';\n        return (\n            <ListSubheader disableGutters={true} key={dataSet.key} component=\"div\" style={inlineStyle}>\n                {dataSet.group} <Link href=\"#\" onClick={e => dataSet.selectGroup(e, dataSet.group)}>All</Link>\n            </ListSubheader>\n        );\n    }\n    const item = dataSet[1];\n    const text = item.text != null ? item.text : item;\n    const icon = item.icon != null ? item.icon : null;\n    const inputValue = dataSet[2];\n    const textMatch = getTextMatch(text, inputValue);\n    if (textMatch) {\n        return <Typography component=\"li\" {...dataSet[0]} title={text} noWrap style={inlineStyle}>\n            {icon}{textMatch[0]}<b>{textMatch[1]}</b>{textMatch[2]}\n        </Typography>;\n    }\n    return <Typography component=\"li\" {...dataSet[0]} title={text} noWrap style={inlineStyle}>\n        {icon}{text}\n    </Typography>;\n\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n    const outerProps = React.useContext(OuterElementContext);\n    return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data) {\n    const ref = React.useRef(null);\n    React.useEffect(() => {\n        if (ref.current != null) {\n            ref.current.resetAfterIndex(0, true);\n        }\n    }, [data]);\n    return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n    const {children, ...other} = props;\n    const itemData = [];\n    children.forEach((item) => {\n        itemData.push(item);\n        itemData.push(...(item.children || []));\n    });\n\n    const theme = useTheme();\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), {\n        noSsr: true\n    });\n\n    const itemCount = itemData.length;\n    const itemSize = smUp ? 24 : 30;\n\n    const getChildSize = (child) => {\n        if (child.hasOwnProperty('group')) {\n            return 30;\n        }\n\n        return itemSize;\n    };\n\n    const getHeight = () => {\n        if (itemCount > 8) {\n            return 8 * itemSize;\n        }\n        return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n    };\n\n    const gridRef = useResetCache(itemCount);\n\n    return (\n        <div ref={ref}>\n            <OuterElementContext.Provider value={other}>\n                <VariableSizeList\n                    itemData={itemData}\n                    height={getHeight() + 2 * LISTBOX_PADDING}\n                    width=\"100%\"\n                    ref={gridRef}\n                    outerElementType={OuterElementType}\n                    innerElementType=\"ul\"\n                    itemSize={(index) => getChildSize(itemData[index])}\n                    overscanCount={5}\n                    itemCount={itemCount}\n                >\n                    {renderRow}\n                </VariableSizeList>\n            </OuterElementContext.Provider>\n        </div>\n    );\n});\n\nListboxComponent.propTypes = {\n    children: PropTypes.node\n};\n\nconst StyledPopper = styled(Popper)({\n    [`& .${autocompleteClasses.listbox}`]: {\n        boxSizing: 'border-box',\n        '& ul': {\n            padding: 0,\n            margin: 0\n        }\n    }\n});\n\n\nexport default function AutocompleteVirtualized(props) {\n    const ref = React.createRef();\n    const {value, options, onChange} = props;\n\n    function onDrop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        let dt = event.dataTransfer;\n        let files = dt.files;\n        let reader = new FileReader();\n        reader.onload = function (event) {\n            let text = event.target.result.trim();\n            let tokens = text.split(/[\\n,\\t]/);\n            enterTokens(event, tokens);\n        };\n\n        reader.onerror = function (event) {\n            alert(\"Unable to read file.\");\n        };\n\n        reader.readAsText(files[0]);\n        showDragIndicator(false);\n    };\n\n    function enterTokens(event, tokens) {\n        const results = value;\n        tokens = tokens.map(token => token.toLowerCase().trim().replace(/\"/g, '')).filter(token => token !== '');\n        if (tokens.length > 0) {\n            let textToOption = new Map();\n            for (let i = 0; i < options.length; i++) {\n                const option = options[i];\n                const text = option.text != null ? option.text : option;\n                const textLowerCase = text.toLowerCase();\n                textToOption.set(textLowerCase, option);\n            }\n            results.forEach(option => { // remove existing\n                const text = option.text != null ? option.text : option;\n                textToOption.delete(text.toLowerCase());\n            });\n            tokens.forEach(token => {\n                const option = textToOption.get(token);\n                if (option != null) {\n                    textToOption.delete(token); // delete so that we don't add new token 2x\n                    results.push(option);\n                }\n            });\n        }\n        onChange(event, results);\n    }\n\n    function onPaste(event) {\n        let text = event.clipboardData.getData('text/plain');\n        if (text != null && text.length > 0) {\n            event.preventDefault();\n            event.stopPropagation();\n            text = text.trim();\n            let tokens = text.split(/[\\n,\\t]/);\n            enterTokens(event, tokens);\n        }\n    };\n\n    function showDragIndicator(show) {\n        ref.current.style.background = show ? '#1976d2' : '';\n    }\n\n    function onDragOver(event) {\n        if (event.dataTransfer.files.length > 0) {\n            event.preventDefault();\n            event.stopPropagation();\n            showDragIndicator(true);\n        }\n\n    };\n\n    function onDragEnd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        showDragIndicator(false);\n    };\n\n\n    const onChipClick = props.onChipClick ? (event, option) => {\n        props.onChipClick(event, option);\n    } : null;\n\n    let getOptionSelected = props.getOptionSelected;\n    if (getOptionSelected == null) {\n        getOptionSelected = props.groupBy ? (option, value) => option.id === value.id && option.group === value.group : (option, value) => option === value;\n    }\n    let getChipText = props.getChipText;\n    if (getChipText == null) {\n        getChipText = (option) => option;\n    }\n    let getChipIcon = props.getChipIcon;\n    if (getChipIcon == null) {\n        getChipIcon = (option) => null;\n    }\n\n\n    let getChipTitle = props.getChipTitle;\n    if (getChipTitle == null) {\n        getChipTitle = (option) => null;\n    }\n    let getOptionLabel = props.getOptionLabel;\n    if (getOptionLabel == null) {\n        getOptionLabel = props.groupBy ? (option) => option.text : (option) => option;\n    }\n\n    const selectGroup = (event, group) => {\n\n        const uniqueValues = new Set(value);\n        options.forEach(option => {\n            if (option.group === group && !uniqueValues.has(option.id)) {\n                uniqueValues.add(option.id);\n            }\n        });\n        // ensure everything in group is added\n        // newValue.splice(index, 1);\n        props.onChange(event, Array.from(uniqueValues));\n    };\n\n    const filterOptions = (options, {inputValue}) => {\n        inputValue = inputValue.trim().toLowerCase();\n        if (inputValue === '') {\n            return options;\n        }\n        const inputLength = inputValue.length;\n        const exactMatches = [];\n        const startsWithMatches = [];\n        const containsMatches = [];\n        for (let i = 0, n = options.length; i < n; i++) {\n            const option = options[i];\n            const text = getOptionLabel(option).toLowerCase();\n            const index = text.indexOf(inputValue);\n            if (index === 0) {\n                if (text.length === inputLength) {\n                    exactMatches.push(option);\n                } else {\n                    startsWithMatches.push(option);\n                }\n            } else if (index !== -1) {\n                containsMatches.push(option);\n            }\n        }\n        return exactMatches.concat(startsWithMatches).concat(containsMatches);\n    };\n    const handleTagDelete = (event, index) => {\n        const newValue = value.slice();\n        newValue.splice(index, 1);\n        props.onChange(event, newValue);\n    };\n\n    const onSortEnd = (event) => {\n        const newValue = value.slice();\n        const tmp = newValue[event.newIndex];\n        newValue[event.newIndex] = newValue[event.oldIndex];\n        newValue[event.oldIndex] = tmp;\n        onChange(event, newValue);\n    };\n\n    const SortableItem = sortableElement(({option, sortIndex}) => {\n        return (\n            <Chip\n                tabIndex=\"-1\"\n                key={sortIndex}\n                style={{zIndex: 1000000}}\n                onDelete={event => handleTagDelete(event, sortIndex)}\n                onClick={onChipClick ? event => onChipClick(event, option) : null}\n                label={getChipText(option)}\n                title={getChipTitle(option)}\n                size=\"small\"\n                icon={getChipIcon(option)}/>\n        );\n    });\n\n    const SortableList = sortableContainer(({items}) => {\n        return (\n            <ul style={{padding: 0, marginTop: 0, marginBottom: 0, maxWidth: 240, overflow: 'hidden'}}>\n                {items.map((option, index) => {\n                        return <SortableItem key={index} option={option} index={index} sortIndex={index}/>;\n                    }\n                )}\n            </ul>\n        );\n    });\n    const multiple = props.multiple != null ? props.multiple : true;\n    return <>\n        <Autocomplete\n            data-testid={props.testId}\n            multiple={multiple}\n            ref={ref}\n            size={\"small\"}\n            disableListWrap\n            freeSolo={props.freeSolo != null ? props.freeSolo : false}\n            blurOnSelect={true}\n            openOnFocus={false}\n            autoHighlight={true}\n            filterOptions={filterOptions}\n            isOptionEqualToValue={getOptionSelected}\n            value={value}\n            filterSelectedOptions={true}\n            getOptionLabel={getOptionLabel}\n            groupBy={props.groupBy}\n            ChipProps={{size: 'small'}}\n            ListboxComponent={ListboxComponent}\n            PopperComponent={StyledPopper}\n            options={options}\n            onChange={onChange}\n            renderTags={(value, getTagProps) =>\n                null\n            }\n            renderInput={(params) => (\n                <TextField {...params} label={props.label} helperText={props.helperText} fullWidth={true}\n                           margin={\"dense\"}/>\n            )}\n            renderGroup={(params) => {\n                params.selectGroup = selectGroup;\n                return params;\n            }}\n            renderOption={(props, option, {inputValue}) => [props, option, inputValue]}\n            onPaste={onPaste}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            onDragEnd={onDragEnd}\n            onDragLeave={onDragEnd}\n        />\n\n        {multiple && <SortableList\n            distance={2}\n            onSortEnd={onSortEnd}\n            axis=\"xy\" items={props.value}\n        />}\n\n    </>;\n};\n;\n;\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {IconButton, ListItem, ListItemText} from '@mui/material';\nimport {intFormat} from './formatters';\nimport {FixedSizeList} from 'react-window';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AutocompleteVirtualized from './AutocompleteVirtualized';\nimport FormControl from '@mui/material/FormControl';\nimport {FEATURE_TYPE, getCategoryValue} from './util';\nimport Link from '@mui/material/Link';\nimport {isString} from 'lodash';\n\nexport default function CategoricalLegend(props) {\n    const listRef = useRef();\n    const [contextMenu, setContextMenu] = useState(null);\n    const [newName, setNewName] = useState('');\n    const [positiveMarkers, setPositiveMarkers] = useState([]);\n    const [negativeMarkers, setNegativeMarkers] = useState([]);\n    const [menu, setMenu] = useState(null);\n    const [color, setColor] = useState(null);\n    const [originalCategory, setOriginalCategory] = useState(null);\n    const {\n        categoricalNames,\n        datasetFilter,\n        features,\n        featureSummary,\n        globalFeatureSummary,\n        handleScrollPosition,\n        height,\n        name,\n        scale,\n        legendScrollPosition,\n        serverInfo,\n        visible\n    } = props;\n    // restore scroll position\n    useEffect(() => {\n        const p = legendScrollPosition[name];\n        if (p != null) {\n            console.log('scrollTo');\n            listRef.current.scrollTo(p);\n        }\n\n        return () => {\n            if (listRef.current) {\n                handleScrollPosition({name: name, value: listRef.current.state.scrollOffset});\n            }\n        };\n    }, [name]);\n\n    // save scroll position\n    useEffect(() => {\n\n\n    }, [name]);\n\n    function handleDialogClose(e) {\n        setMenu(null);\n    }\n\n    function handleColorChange(e) {\n        setColor(e.target.value);\n    }\n\n    function handleNameChange(e) {\n        setNewName(e.target.value);\n    }\n\n    function handleNameChangeSelector(e, value) {\n        setNewName(value);\n    }\n\n\n    function handleColorChangeApply(e) {\n        props.handleColorChange({\n            name: props.name,\n            originalValue: originalCategory,\n            color: color\n        });\n    }\n\n    function handleNameChangeApply(e) {\n        const name = isString(newName) ? newName.trim() : newName.text;\n        props.handleNameChange({\n            name: props.name,\n            originalValue: originalCategory,\n            newValue: name === '' ? null : name,\n            positiveMarkers: positiveMarkers,\n            negativeMarkers: negativeMarkers\n        });\n        setMenu(null);\n    }\n\n    function handleEditColor(e) {\n        setContextMenu(null);\n        setMenu('color');\n    }\n\n    function handleEditName(e) {\n        setContextMenu(null);\n        setMenu('name');\n\n    }\n\n    function handleContextmenuClose(e) {\n        setContextMenu(null);\n    }\n\n    function onRowClick(event, category) {\n        event.preventDefault();\n        props.handleClick({\n            name: props.name,\n            value: category,\n            shiftKey: event.shiftKey,\n            metaKey: event.ctrlKey || event.metaKey\n        });\n    }\n\n    function onContextmenu(event, originalCategory) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        setContextMenu({\n            mouseX: event.clientX - 2,\n            mouseY: event.clientY - 4\n        });\n        let cat = renamedCategories[originalCategory];\n        if (cat == null) {\n            cat = {};\n        }\n        if (serverInfo.ontology != null) {\n            setNewName(cat.newValue != null ? {text: cat.newValue} : null);\n        } else {\n            setNewName(cat.newValue != null ? cat.newValue : originalCategory);\n        }\n        setNegativeMarkers(cat.negativeMarkers != null ? cat.negativeMarkers : []);\n        setPositiveMarkers(cat.positiveMarkers != null ? cat.positiveMarkers : []);\n        setOriginalCategory(originalCategory);\n        setColor(props.scale(originalCategory));\n    }\n\n\n    const categoricalFilter = datasetFilter[name];\n    const selectionSummary = featureSummary[name];\n    let selectedDimensionToCount = {};\n    if (selectionSummary != null) {\n        for (let i = 0; i < selectionSummary.counts.length; i++) {\n            selectedDimensionToCount[selectionSummary.categories[i]] = selectionSummary.counts[i];\n        }\n    }\n    const globalDimensionSummary = globalFeatureSummary[name];\n    const categories = globalDimensionSummary.categories.slice(0); // make a copy so that when sorting, counts stays in same order as categories\n    const renamedCategories = categoricalNames[name] || {};\n    // if (sort === 'ascending' || sort === 'descending') {\n    //     categories.sort((a, b) => {\n    //         let renamed1 = renamedCategories[a];\n    //         if (renamed1 != null) {\n    //             a = renamed1;\n    //         }\n    //         let renamed2 = renamedCategories[b];\n    //         if (renamed2 != null) {\n    //             b = renamed2;\n    //         }\n    //         return NATSORT(a, b);\n    //     });\n    //     if (sort === 'descending') {\n    //         categories.reverse();\n    //     }\n    // }\n\n    function onNegativeMarkers(event, value) {\n        setNegativeMarkers(value);\n    }\n\n    function onPositiveMarkers(event, value) {\n        setPositiveMarkers(value);\n    }\n\n    function addFeatures(event, features) {\n        props.handleSearchTokens(features, FEATURE_TYPE.X, false, false);\n    }\n\n    function renderRow(props) {\n        const {index, style} = props;\n        const category = categories[index];\n        const categoryIndex = globalDimensionSummary.categories.indexOf(category);\n        const isSelected = categoricalFilter != null && categoricalFilter.value.indexOf(category) !== -1;\n        let renamedCategory = getCategoryValue(renamedCategories, category);\n\n        return (\n            <ListItem disableGutters={true} divider={true} dense={true}\n                      onContextMenu={event => onContextmenu(event, category)}\n                      onClick={event => onRowClick(event, category)}\n                      selected={isSelected} button style={style}\n                      key={index}>\n\n                <div style={{\n                    marginBottom: 15,\n                    marginRight: 2,\n                    display: 'inline-block',\n                    width: 12,\n                    height: 12,\n                    background: scale(category)\n                }}></div>\n\n                <ListItemText title={renamedCategory} primaryTypographyProps={{noWrap: true}} primary={renamedCategory}\n                              secondary={(selectionSummary == null ? '' : intFormat(selectedDimensionToCount[category] || 0) + ' / ') + intFormat(globalDimensionSummary.counts[categoryIndex])}/>\n                <IconButton\n                    onClick={event => onContextmenu(event, category)}\n                    aria-label=\"menu\"\n                    size=\"large\">\n                    <MenuIcon></MenuIcon>\n                </IconButton>\n            </ListItem>\n        );\n    }\n\n\n    if (!visible) {\n        return null;\n    }\n    return (\n        <>\n            <div data-testid=\"categorical-legend\">\n                <FixedSizeList height={height} width={250} itemSize={40}\n                               itemCount={categories.length} ref={listRef} onScroll={(e) => {\n                    if (e.scrollDirection === 'forward' && e.scrollOffset === 0) {\n                        return; // event fired on initialization\n                    }\n                    handleScrollPosition({name: name, value: e.scrollOffset});\n                }}>\n                    {renderRow}\n                </FixedSizeList>\n            </div>\n\n            <Dialog open={Boolean(menu)} onClose={handleDialogClose}\n                    aria-labelledby=\"edit-category-dialog-title\" fullWidth={true}>\n                {menu == 'color' && <>\n                    <DialogTitle\n                        id=\"edit-category-dialog-title\">Edit {renamedCategories[originalCategory] != null ? renamedCategories[originalCategory].newValue : originalCategory} Color</DialogTitle>\n                    <DialogContent>\n                        <input type=\"color\" value={color}\n                               onChange={handleColorChange} style={{width: 100}}/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleDialogClose} color=\"primary\">\n                            Close\n                        </Button>\n                        <Button onClick={handleColorChangeApply} color=\"primary\">\n                            Apply\n                        </Button>\n                    </DialogActions>\n                </>}\n                {menu == 'name' && <>\n                    <DialogTitle\n                        id=\"edit-category-dialog-title\">Annotate {renamedCategories[originalCategory] != null ? renamedCategories[originalCategory].newValue : originalCategory}</DialogTitle>\n                    <DialogContent>\n\n                        {serverInfo.ontology == null && <TextField\n                            size={\"small\"}\n                            inputProps={{maxLength: 1000}}\n                            fullWidth={true}\n                            type=\"text\"\n                            required={false}\n                            autoComplete=\"off\"\n                            value={newName}\n                            onChange={handleNameChange}\n                            margin=\"dense\"\n                            label={\"Category Name\"}\n                            helperText={\"Enter cell type or other annotation\"}\n                        />}\n                        {serverInfo.ontology != null && <FormControl sx={{display: 'block'}}><AutocompleteVirtualized\n                            textFieldSx={{width: '90%'}}\n                            label={\"Cell Type\"}\n                            multiple={false}\n                            getOptionLabel={(option) => option.text}\n                            getChipText={(option) => option.text}\n                            options={serverInfo.ontology.cellTypes}\n                            value={newName}\n                            getOptionSelected={(option, value) => option.text === value}\n                            onChange={handleNameChangeSelector}\n                        /></FormControl>}\n\n\n                        <FormControl sx={{display: 'block'}}>\n                            <AutocompleteVirtualized\n                                textFieldSx={{width: '90%'}}\n                                label={\"Positive Genes/Features\"}\n                                options={features}\n                                value={positiveMarkers}\n                                onChange={onPositiveMarkers}\n                            />\n                            <div><Link\n                                style={{\n                                    float: 'right',\n                                    marginRight: 4,\n                                    fontSize: '0.75rem',\n                                    transform: 'translateY(-20px)',\n                                    display: positiveMarkers.length === 0 ? 'none' : ''\n                                }}\n                                onClick={e => addFeatures(e, positiveMarkers)}>View All</Link></div>\n                        </FormControl>\n\n\n                        <FormControl sx={{display: 'block'}}>\n                            <AutocompleteVirtualized\n                                label={\"Negative Genes/Features\"}\n                                options={features}\n                                value={negativeMarkers}\n                                onChange={onNegativeMarkers}\n                            />\n                            <div><Link\n                                style={{\n                                    float: 'right',\n                                    marginRight: 4,\n                                    fontSize: '0.75rem',\n                                    transform: 'translateY(-20px)',\n                                    display: negativeMarkers.length === 0 ? 'none' : ''\n                                }}\n                                onClick={e => addFeatures(e, negativeMarkers)}>View All</Link></div>\n                        </FormControl>\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleDialogClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleNameChangeApply} color=\"primary\">\n                            OK\n                        </Button>\n                    </DialogActions>\n                </>}\n            </Dialog>\n            <Menu\n                anchorReference=\"anchorPosition\"\n                anchorPosition={\n                    contextMenu != null\n                        ? {top: contextMenu.mouseY, left: contextMenu.mouseX}\n                        : undefined\n                }\n                open={Boolean(contextMenu)}\n                onClose={handleContextmenuClose}\n            >\n                <MenuItem onClick={handleEditName}>Annotate</MenuItem>\n                <MenuItem onClick={handleEditColor}>Edit Color</MenuItem>\n            </Menu>\n        </>\n    );\n\n}\n\n","import React from 'react';\nimport {numberFormat, numberFormat0} from './formatters';\nimport {FEATURE_TYPE, stripTrailingZeros} from './util';\n\n\nfunction ContinuousLegend(props) {\n\n    const {name, featureSummary, globalFeatureSummary, nObs, nObsSelected, type} = props;\n    const selectionSummary = featureSummary[name];\n    const globalSummary = globalFeatureSummary[name];\n    const summaryNames = ['all'];\n    // TODO compute unselected mean and % expressed from globals\n    if (selectionSummary != null) {\n        summaryNames.push('selection');\n        //  summaryNames.push('rest');\n    }\n\n    function getTable(summaryNames, selectionSummary, globalSummary) {\n        const showPercentExpressed = globalSummary.numExpressed != null && type === FEATURE_TYPE.X;\n        const showMin = type !== FEATURE_TYPE.X;\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <td></td>\n                    {summaryNames.map(summaryName => {\n                        return <td key={summaryName}><small>{summaryName}</small></td>;\n                    })}\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td style={{textAlign: 'right'}}>{'Mean'}:</td>\n                    <td>{stripTrailingZeros(numberFormat(globalSummary.mean))}</td>\n                    {selectionSummary && <td>{stripTrailingZeros(numberFormat(selectionSummary.mean))}</td>}\n                </tr>\n                {showPercentExpressed &&\n                <tr>\n                    <td style={{textAlign: 'right'}}>{'% Expressed'}:</td>\n                    <td>{numberFormat0(100 * globalSummary.numExpressed / nObs)}</td>\n                    {selectionSummary &&\n                    <td>{numberFormat0(100 * selectionSummary.numExpressed / nObsSelected)}</td>}\n                </tr>}\n                {showMin && <tr>\n                    <td style={{textAlign: 'right'}}>{'Min'}:</td>\n                    <td>{stripTrailingZeros(numberFormat(globalSummary.min))}</td>\n                    {selectionSummary && <td>{stripTrailingZeros(numberFormat(selectionSummary.min))}</td>}\n                </tr>}\n                <tr>\n                    <td style={{textAlign: 'right'}}>{'Max'}:</td>\n                    <td>{stripTrailingZeros(numberFormat(globalSummary.max))}</td>\n                    {selectionSummary && <td>{stripTrailingZeros(numberFormat(selectionSummary.max))}</td>}\n                </tr>\n                </tbody>\n            </table>\n        );\n    }\n\n\n    return (\n        <>\n            {globalSummary != null && name !== '__count' && getTable(summaryNames, selectionSummary, globalSummary)}\n        </>);\n\n}\n\nexport default ContinuousLegend;\n\n\n","import {InputLabel} from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport {debounce} from 'lodash';\nimport React from 'react';\n\n\nclass MeasureFilter extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.handleValueUpdate = debounce(this.handleValueUpdate, 500);\n    }\n\n    getFilter() {\n        let filter = this.props.datasetFilter[this.props.name];\n        if (filter == null) {\n            filter = {operation: \">\", value: NaN, uiValue: \"\"};\n            this.props.datasetFilter[this.props.name] = filter;\n        }\n        return filter;\n    }\n\n    handleValueUpdate = () => {\n        const filter = this.getFilter();\n        let value = parseFloat(filter.uiValue);\n        this.props.handleUpdate({name: this.props.name, value: value, update: true});\n\n    };\n\n    handleOperationChanged = (event) => {\n        const operation = event.target.value;\n        this.props.handleUpdate({name: this.props.name, operation: operation, update: true});\n    };\n\n    handleValueChange = (event) => {\n        const filter = this.getFilter();\n        filter.uiValue = event.target.value;\n        this.props.handleUpdate({\n            name: this.props.name,\n            operation: filter.operation,\n            value: filter.value,\n            update: false\n        });\n        this.handleValueUpdate();\n    };\n\n    render() {\n        const {name} = this.props;\n        const filter = this.getFilter();\n        const id = name + '_filter';\n\n        return (\n\n            <div style={{display: 'flex'}}>\n                <InputLabel id={id + '_label'}>Filter</InputLabel>\n                <Select\n                    label={\"Filter\"}\n                    size={\"small\"}\n                    labelId={id + '_label'}\n                    id={id}\n                    style={{marginRight: 6}}\n                    value={filter.operation}\n                    onChange={this.handleOperationChanged}\n                >\n                    <MenuItem value={\"\"}></MenuItem>\n                    <MenuItem value={\">\"}>{\">\"}</MenuItem>\n                    <MenuItem value={\"<\"}>{\"<\"}</MenuItem>\n                    <MenuItem value={\"=\"}>{\"=\"}</MenuItem>\n                    <MenuItem value={\">=\"}>{\">=\"}</MenuItem>\n                    <MenuItem value={\"<=\"}>{\"<=\"}</MenuItem>\n                    <MenuItem value={\"!=\"}>{\"!=\"}</MenuItem>\n                </Select>\n\n                <TextField size={\"small\"}\n                           onChange={this.handleValueChange} value={filter.uiValue} style={{maxWidth: 60}}/>\n\n            </div>\n        );\n    }\n}\n\nexport default MeasureFilter;\n\n\n\n","import {debounce} from 'lodash';\nimport React from 'react';\nimport ContinuousLegend from './ContinuousLegend';\nimport MeasureFilter from './MeasureFilter';\n\nclass ColorSchemeLegendWrapper extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {min: '', max: ''};\n        this.onMinUpdate = debounce(this.onMinUpdate, 500);\n        this.onMaxUpdate = debounce(this.onMaxUpdate, 500);\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.name !== this.props.name) {\n            this.setState({\n                min: '',\n                max: ''\n            });\n        }\n    }\n\n    onMinChange = (event) => {\n        this.setState({min: event.target.value});\n        this.onMinUpdate(parseFloat(event.target.value));\n    };\n\n    onMinUpdate = (value) => {\n        if (isNaN(value)) {\n            delete this.props.globalFeatureSummary[this.props.name].customMin;\n        } else {\n            this.props.globalFeatureSummary[this.props.name].customMin = value;\n        }\n        this.props.handleDomain({name: this.props.name, summary: this.props.globalFeatureSummary[this.props.name]});\n    };\n\n    onMaxChange = (event) => {\n        this.setState({max: event.target.value});\n        this.onMaxUpdate(parseFloat(event.target.value));\n    };\n\n    onMaxUpdate = (value) => {\n\n        if (isNaN(value)) {\n            delete this.props.globalFeatureSummary[this.props.name].customMax;\n        } else {\n            this.props.globalFeatureSummary[this.props.name].customMax = value;\n        }\n\n        this.props.handleDomain({name: this.props.name, summary: this.props.globalFeatureSummary[this.props.name]});\n\n    };\n\n    render() {\n        const {\n            datasetFilter,\n            featureSummary,\n            globalFeatureSummary,\n            handleUpdate,\n            name,\n            nObs,\n            nObsSelected,\n            type\n        } = this.props;\n        let style = {display: 'inline-block', verticalAlign: 'top'};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        const isCount = name === '__count';\n        return (\n            <div data-testid=\"continuous-legend\" className=\"cirro-condensed\" style={style}>\n                {/*ContinuousLegend shows stats table */}\n                <ContinuousLegend name={name}\n                                  featureSummary={featureSummary}\n                                  nObs={nObs}\n                                  nObsSelected={nObsSelected}\n                                  globalFeatureSummary={globalFeatureSummary}\n                                  type={type}></ContinuousLegend>\n                {/*{!isCount && this.props.handleDomain &&*/}\n                {/*<InputLabel shrink={true} variant={\"standard\"}>Custom Color Scale</InputLabel>}*/}\n                {/*{name !== '__count' && this.props.handleDomain &&*/}\n                {/*<TextField InputLabelProps={{shrink: true}} margin=\"none\"*/}\n                {/*           style={{maxWidth: 60, marginRight: 4, marginTop: 0}}*/}\n                {/*           size=\"small\" type=\"text\"*/}\n\n                {/*           onChange={this.onMinChange} label=\"Min\"*/}\n                {/*           value={this.state.min}/>}*/}\n                {/*{!isCount && this.props.handleDomain &&*/}\n                {/*<TextField InputLabelProps={{shrink: true}} margin=\"none\" style={{maxWidth: 60, marginTop: 0}}*/}\n                {/*           size=\"small\"*/}\n                {/*           type=\"text\"*/}\n\n                {/*           onChange={this.onMaxChange} label=\"Max\"*/}\n                {/*           value={this.state.max}/>}*/}\n                {!isCount &&\n                <MeasureFilter datasetFilter={datasetFilter} name={name} handleUpdate={handleUpdate}/>}\n            </div>);\n\n    }\n}\n\nexport default ColorSchemeLegendWrapper;\n","class CanvasOverlayHd {\n    constructor(viewer, options) {\n        this._viewer = viewer;\n        this.backingScale = 1;\n        this._containerWidth = 0;\n        this._containerHeight = 0;\n\n\n        // this._canvasdiv.style.left = 0;\n        // this._canvasdiv.style.top = 0;\n\n\n        this._canvas = document.createElement('canvas');\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.width = '100%';\n        this._canvas.style.height = '100%';\n        this._viewer.canvas.appendChild(this._canvas);\n        this.onRedraw = options.onRedraw || function () {\n        };\n        this.clearBeforeRedraw = (typeof (options.clearBeforeRedraw) !== 'undefined') ?\n            options.clearBeforeRedraw : true;\n\n        this._viewer.addHandler('update-viewport', () => {\n            this.resize();\n            this._updateCanvas();\n        });\n        this._viewer.addHandler('open', () => {\n            this.resize();\n            this._updateCanvas();\n        });\n    }\n\n    static getTileIndexFromPixel(viewer, webPoint) {\n        let viewportPos = viewer.viewport.pointFromPixel(webPoint);\n        for (let i = 0, count = viewer.world.getItemCount(); i < count; i++) {\n            let tiledImage = viewer.world.getItemAt(i);\n            // box = viewer.world.getItemAt(i).getBounds();\n            // if (viewportPos.x > box.x &&\n            //   viewportPos.y > box.y &&\n            //   viewportPos.x < box.x + box.width &&\n            //   viewportPos.y < box.y + box.height) {\n            //\n            // }\n            // tiledImage.lastDrawn.forEach(function (tile) {\n            //   if (tile.bounds.containsPoint(viewportPos)) {\n            //     console.log('lastDrawn', tile);\n            //   }\n            // });\n\n            let viewportPosRect = new window.OpenSeadragon.Rect(viewportPos.x, viewportPos.y, 0, 0);\n            let tileSourcePosRect = tiledImage._viewportToTiledImageRectangle(viewportPosRect);\n            let tileSourcePos = tileSourcePosRect.getTopLeft();\n            let source = tiledImage.source;\n            if (tileSourcePos.x >= 0 && tileSourcePos.x <= 1 && tileSourcePos.y >= 0 &&\n                tileSourcePos.y <= 1 / source.aspectRatio) {\n                return i;\n                // for (let level = source.minLevel; level <= source.maxLevel; level++) {\n                //   let tilePoint = source.getTileAtPoint(level, tileSourcePos);\n                //   return i;\n                // }\n            }\n        }\n        return -1;\n    }\n\n    canvas() {\n        return this._canvas;\n    }\n\n    context2d() {\n        return this._canvas.getContext('2d');\n    }\n\n    clear() {\n        this._canvas.getContext('2d').clearRect(0, 0, this._containerWidth * this.backingScale, this._containerHeight * this.backingScale);\n    }\n\n    resize() {\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        let backingScaleUpdated = this.backingScale !== backingScale;\n        this.backingScale = backingScale;\n        if (this._containerWidth !== this._viewer.container.clientWidth || backingScaleUpdated) {\n            this._containerWidth = this._viewer.container.clientWidth;\n            this._canvas.setAttribute('width', backingScale * this._containerWidth);\n            this._canvas.setAttribute('width', backingScale * this._containerWidth);\n            // this._canvas.style.width = this._containerWidth + 'px';\n        }\n\n        if (this._containerHeight !== this._viewer.container.clientHeight || backingScaleUpdated) {\n            this._containerHeight = this._viewer.container.clientHeight;\n            this._canvas.setAttribute('height', backingScale * this._containerHeight);\n            this._canvas.setAttribute('height', backingScale * this._containerHeight);\n            // this._canvas.style.height = this._containerHeight + 'px';\n        }\n    }\n\n    _updateCanvas() {\n        let viewportZoom = this._viewer.viewport.getZoom(true);\n        if (this.clearBeforeRedraw) {\n            this.clear();\n        }\n        let context = this._canvas.getContext('2d');\n        for (let i = 0, count = this._viewer.world.getItemCount(); i < count; i++) {\n            let image = this._viewer.world.getItemAt(i);\n            if (image) {\n                let zoom = image.viewportToImageZoom(viewportZoom);\n                let vp = image.imageToViewportCoordinates(0, 0, true);\n                let p = this._viewer.viewport.pixelFromPoint(vp, true);\n                context.scale(this.backingScale, this.backingScale);\n                context.translate(p.x, p.y);\n                context.scale(zoom, zoom);\n                this.onRedraw({index: i, context: context, x: p.x, y: p.y, zoom: zoom});\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n        }\n    }\n}\n\nexport default CanvasOverlayHd;\n","import OpenSeadragon from 'openseadragon';\nconst svgNS = 'http://www.w3.org/2000/svg';\n\n\nclass OpenseadragonSvgOverlay {\n\n    constructor(viewer) {\n        let self = this;\n\n        this._viewer = viewer;\n        this._containerWidth = 0;\n        this._containerHeight = 0;\n\n        this._svg = document.createElementNS(svgNS, 'svg');\n        this._svg.style.position = 'absolute';\n        this._svg.style.left = 0;\n        this._svg.style.top = 0;\n        this._svg.style.width = '100%';\n        this._svg.style.height = '100%';\n        this._viewer.canvas.appendChild(this._svg);\n\n        this._node = document.createElementNS(svgNS, 'g');\n        this._svg.appendChild(this._node);\n\n        this._viewer.addHandler('update-viewport', () => {\n            self.resize();\n        });\n\n        this._viewer.addHandler('open', function () {\n            self.resize();\n        });\n\n        this._viewer.addHandler('rotate', function (evt) {\n            self.resize();\n        });\n\n        this._viewer.addHandler('resize', function () {\n            self.resize();\n        });\n\n        this.resize();\n    }\n\n    node() {\n        return this._node;\n    }\n\n\n    resize() {\n        if (this._containerWidth !== this._viewer.container.clientWidth) {\n            this._containerWidth = this._viewer.container.clientWidth;\n            this._svg.setAttribute('width', this._containerWidth);\n        }\n\n        if (this._containerHeight !== this._viewer.container.clientHeight) {\n            this._containerHeight = this._viewer.container.clientHeight;\n            this._svg.setAttribute('height', this._containerHeight);\n        }\n\n        let p = this._viewer.viewport.pixelFromPoint(new OpenSeadragon.Point(0, 0), true);\n        let zoom = this._viewer.viewport.getZoom(true);\n        if (this._viewer.world.getItemCount() > 0) {\n            zoom = this._viewer.world.getItemAt(0).viewportToImageZoom(zoom);\n        }\n        // TODO: Expose an accessor for _containerInnerSize in the OSD API so we don't have to use the private variable.\n        //  let scale = this._viewer.viewport._containerInnerSize.x * zoom;\n\n        let rotation = this._viewer.viewport.getRotation();\n        this._node.setAttribute('transform',\n            'translate(' + p.x + ',' + p.y + ') scale(' + zoom + ') rotate(' + rotation + ')');\n    }\n}\n\n\nexport default OpenseadragonSvgOverlay;","import CircularProgress from '@mui/material/CircularProgress';\nimport withStyles from '@mui/styles/withStyles';\nimport {bind, uniqueId} from 'lodash';\nimport OpenSeadragon from 'openseadragon';\nimport React from 'react';\nimport simplify from 'simplify-js';\nimport {getEmbeddingKey} from './actions';\nimport CanvasOverlayHd from './CanvasOverlayHd';\nimport ChartToolbar from './ChartToolbar';\nimport {saveImage} from './ChartUtil';\nimport {numberFormat2f} from './formatters';\nimport OpenseadragonSvgOverlay from './OpenseadragonSvgOverlay';\nimport {getCategoryLabelsPositions, getLabels} from './ThreeUtil';\nimport {arrayToSvgPath, isPointInside} from './util';\n\n\nexport function getSpotRadius(trace, pointSize) {\n    return pointSize * (trace.embedding.spatial.spot_diameter ? trace.embedding.spatial.spot_diameter / 2 : 20);\n}\n\nexport function drawEmbeddingImage(context, chartSize, trace, selection, markerOpacity, unselectedMarkerOpacity, chartOptions, categoricalNames, obsCat, cachedData, spotRadius) {\n    if (trace.tileSource.ready) {\n        const img = trace.tileSource.levels[trace.tileSource.levels.length - 1].context2D.canvas;\n        if (chartSize == null) {\n            chartSize = {width: img.width, height: img.height};\n        }\n        const zoom = Math.min(chartSize.width / img.width, chartSize.height / img.height);\n        context.drawImage(img, 0, 0, img.width * zoom, img.height * zoom);\n        context.scale(zoom, zoom);\n        drawSpots(context, zoom, trace, selection, markerOpacity, unselectedMarkerOpacity, spotRadius);\n        drawLabels(context, zoom, trace, chartOptions, categoricalNames, obsCat, cachedData);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n}\n\nfunction drawLabels(context, zoom, trace, chartOptions, categoricalNames, obsCat, cachedData) {\n    const showLabels = obsCat.length > 0;\n    if (showLabels) {\n        context.textAlign = 'center';\n        context.textBaseline = \"middle\";\n        const darkMode = true;\n        const fontSize = Math.ceil(chartOptions.labelFontSize / zoom);\n        context.fillStyle = darkMode ? 'white' : 'black';\n        context.strokeStyle = darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n        context.lineWidth = chartOptions.labelStrokeWidth;\n\n        context.font = fontSize + 'px Roboto Condensed,Helvetica,Arial,sans-serif';\n\n        const labelsPositions = getCategoryLabelsPositions(trace.embedding, obsCat, cachedData);\n        const labels = getLabels(obsCat, labelsPositions.labels, categoricalNames);\n        for (let i = 0, index = 0, n = labels.length; i < n; i++, index += 3) {\n            let x = labelsPositions.positions[index];\n            let y = labelsPositions.positions[index + 1];\n            context.strokeText('' + labels[i], x, y);\n            context.fillText('' + labels[i], x, y);\n        }\n    }\n}\n\nfunction drawSpots(context, zoom, trace, selection, markerOpacity, unselectedMarkerOpacity, spotRadius) {\n    context.lineWidth = 2 * 1 / zoom;\n    if (context.setLineDash) {\n        context.setLineDash([2, 2]);\n    }\n    const isSelectionEmpty = selection.size === 0;\n    const indices = trace.indices;\n    if (!isSelectionEmpty) { // draw unselected cells 1st\n        context.globalAlpha = unselectedMarkerOpacity;\n        for (let i = 0; i < trace.x.length; i++) {\n            let index = indices[i];\n            let x = trace.x[index];\n            let y = trace.y[index];\n            if (!selection.has(index)) {\n                context.fillStyle = trace.colors[index];\n                context.beginPath();\n                context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n                context.fill();\n            }\n        }\n        context.globalAlpha = markerOpacity;\n        for (let i = 0; i < trace.x.length; i++) {\n            let index = indices[i];\n            let x = trace.x[index];\n            let y = trace.y[index];\n            if (selection.has(index)) {\n                context.fillStyle = trace.colors[index];\n                context.beginPath();\n                context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n                context.fill();\n            }\n        }\n    } else {\n        context.globalAlpha = markerOpacity;\n        for (let i = 0; i < trace.x.length; i++) {\n            let index = indices[i];\n            let x = trace.x[index];\n            let y = trace.y[index];\n            context.fillStyle = trace.colors[index];\n            context.beginPath();\n            context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n            context.fill();\n        }\n    }\n    context.globalAlpha = 1;\n    if (context.setLineDash) {\n        context.setLineDash([]);\n    }\n};\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4),\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0,\n        },\n        position: 'absolute',\n        zIndex: 1,\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    }\n});\n\nclass ImageChart extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.id = uniqueId('cirro-image');\n        this.editSelection = false;\n        this.state = {loading: false};\n    }\n\n    findPointsInPolygon(points) {\n        let data = this.props.trace;\n        // let spotRadius = data[0].embedding.spotDiameter / 2;\n        let indices = [];\n        for (let i = 0; i < data.x.length; i++) {\n            if (isPointInside({x: data.x[i], y: data.y[i]}, points)) {\n                indices.push(i);\n            }\n        }\n        return indices;\n    }\n\n    findPointsInRectangle(rect) {\n        let data = this.props.trace;\n        const spotRadius = getSpotRadius(data, this.props.pointSize);\n        let indices = [];\n        const x = parseFloat(rect.getAttribute('x'));\n        const y = parseFloat(rect.getAttribute('y'));\n        const x2 = x + parseFloat(rect.getAttribute('width'));\n        const y2 = y + parseFloat(rect.getAttribute('height'));\n        for (let i = 0; i < data.x.length; i++) {\n            const px = data.x[i];\n            const py = data.y[i];\n            if (px <= x2 && x <= px + spotRadius && py <= y2 && y <= py + spotRadius) {\n                indices.push(i);\n            }\n        }\n        return indices;\n    }\n\n\n    findPointIndex(xpix, ypix) {\n        let data = this.props.trace;\n        const spotRadius = getSpotRadius(data, this.props.pointSize);\n        for (let i = 0; i < data.x.length; i++) {\n            if (Math.abs(data.x[i] - xpix) <= spotRadius && Math.abs(data.y[i] - ypix) <= spotRadius) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    setTooltip(xpix, ypix) {\n        let trace = this.props.trace;\n        const point = this.findPointIndex(xpix, ypix);\n        if (point != -1) {\n            let value = trace.values[point];\n            let categoryObject = this.props.categoricalNames[trace.name];\n            if (categoryObject) {\n                let renamedValue = categoryObject[value];\n                if (renamedValue != null) {\n                    value = renamedValue;\n                }\n            }\n            if (typeof value === 'number') {\n                value = numberFormat2f(value);\n                if (value.endsWith('.00')) {\n                    value = value.substring(0, value.lastIndexOf('.'));\n                }\n            }\n            this.props.setTooltip('' + value);\n        } else {\n            this.props.setTooltip('');\n        }\n    }\n\n\n    drawContext(context, chartSize) {\n        const img = this.viewer.source.levels[this.viewer.source.levels.length - 1].context2D.canvas;\n        if (chartSize == null) {\n            chartSize = {width: img.width, height: img.height};\n        }\n\n        const zoom = Math.min(chartSize.width / img.width, chartSize.height / img.height);\n        context.drawImage(img, 0, 0, img.width * zoom, img.height * zoom);\n        this._drawOverlay({context: context, zoom: zoom});\n    }\n\n    _drawOverlay(opts) {\n        let context = opts.context;\n        let trace = this.props.trace;\n        const selection = this.props.selection;\n        let markerOpacity = this.props.markerOpacity;\n        let unselectedMarkerOpacity = this.props.unselectedMarkerOpacity;\n        const spotRadius = getSpotRadius(trace, this.props.pointSize);\n        drawSpots(context, opts.zoom, trace, selection, markerOpacity, unselectedMarkerOpacity, spotRadius);\n        drawLabels(context, opts.zoom, trace, this.props.chartOptions, this.props.categoricalNames, this.props.obsCat, this.props.cachedData);\n    }\n\n    createViewer() {\n        if (this.viewer) {\n            this.viewer.destroy();\n        }\n        // let tileSource = new OpenSeadragon.ImageTileSource({\n        //     url: url,\n        //     buildPyramid: true,\n        //     crossOriginPolicy: \"Anonymous\"\n        // });\n        if (!this.props.trace.tileSource.ready) {\n            this.setState({loading: true});\n            this.props.trace.tileSource.addOnceHandler('ready', (src) => {\n                this.setState({loading: false});\n            });\n        } else {\n            this.setState({loading: false});\n        }\n        this.viewer = new OpenSeadragon({\n            id: this.id,\n            gestureSettingsMouse: {dblClickToZoom: true, clickToZoom: false},\n            autoResize: true,\n            showFullPageControl: false,\n            collectionMode: false,\n            // visibilityRatio: 0.2,\n            showNavigationControl: false,\n            // prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/',\n            tileSources: this.props.trace.tileSource\n        });\n        let viewer = this.viewer;\n\n        let _this = this;\n        this.canvasOverlay = new CanvasOverlayHd(this.viewer, {\n            onRedraw: function (opts) {\n                _this._drawOverlay(opts);\n            },\n        });\n        // let tooltip = document.createElement(\"div\");\n        // tooltip.style.background = 'rgba(0,0,0,0.5)';\n        // tooltip.style.color = 'white';\n        // tooltip.style.position = 'absolute';\n        // this.viewer.canvas.appendChild(tooltip);\n\n        let lassoPathArray = [];\n        let startCoordinates = [0, 0];\n        let lastBoundingBox = {x: 0, y: 0, width: 0, height: 0};\n\n        this.viewer.innerTracker.moveHandler = function (event) {\n            if (viewer.world == null) {\n                _this.props.setTooltip('');\n            } else if (_this.props.chartOptions.dragmode === 'pan' && viewer.world.getItemCount() > 0) {\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n                _this.setTooltip(imagePoint.x, imagePoint.y);\n                // if (title !== '') {\n                //     tooltip.innerHTML = title;\n                //     tooltip.style.left = (webPoint.x + 8) + 'px';\n                //     tooltip.style.top = (webPoint.y + 8) + 'px';\n                //     tooltip.style.display = '';\n                // } else {\n                //     tooltip.style.display = 'none';\n                // }\n            } else {\n                _this.props.setTooltip('');\n            }\n        };\n        //\n        // this.viewer.innerTracker.scrollHandler = function (event) {\n        //     if (lassoState > -1) {\n        //         event.preventDefaultAction = true;\n        //     }\n        // };\n\n\n        this.viewer.addHandler('canvas-drag', function (event) {\n            if ((_this.props.chartOptions.dragmode === 'lasso' || _this.props.chartOptions.dragmode === 'select') && viewer.world.getItemCount() > 0) {\n                event.preventDefaultAction = true;\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n                lassoPathArray.push({x: imagePoint.x, y: imagePoint.y});\n                if (_this.props.chartOptions.dragmode === 'lasso') {\n                    lassoPathArray = simplify(lassoPathArray);\n                    lassoPath.setAttribute('d', arrayToSvgPath(lassoPathArray));\n                } else {\n                    lastBoundingBox.x = Math.min(imagePoint.x, startCoordinates[0]);\n                    lastBoundingBox.y = Math.max(imagePoint.y, startCoordinates[1]);\n                    lastBoundingBox.width =\n                        Math.max(imagePoint.x, startCoordinates[0]) - lastBoundingBox.x;\n                    lastBoundingBox.height =\n                        lastBoundingBox.y - Math.min(imagePoint.y, startCoordinates[1]);\n\n                    rectElement.setAttribute('x', '' + lastBoundingBox.x);\n                    rectElement.setAttribute(\n                        'y',\n                        '' + (lastBoundingBox.y - lastBoundingBox.height)\n                    );\n                    rectElement.setAttribute('width', '' + lastBoundingBox.width);\n                    rectElement.setAttribute('height', '' + lastBoundingBox.height);\n                }\n            }\n        });\n\n        this.viewer.addHandler('canvas-press', function (event) {\n            if (_this.props.chartOptions.dragmode === 'lasso' || _this.props.chartOptions.dragmode === 'select') {\n                event.preventDefaultAction = true;\n                _this.editSelection = event.metaKey || event.ctrlKey;\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n\n                if (_this.props.chartOptions.dragmode === 'lasso') {\n                    lassoPathArray = [];\n                    lassoPathArray.push({x: imagePoint.x, y: imagePoint.y});\n                    lassoPathArray = simplify(lassoPathArray);\n                    lassoPath.setAttribute('d', arrayToSvgPath(lassoPathArray));\n                } else {\n                    startCoordinates = [imagePoint.x, imagePoint.y];\n                    lastBoundingBox = {\n                        x: startCoordinates[0],\n                        y: startCoordinates[1],\n                        width: 1,\n                        height: 1,\n                    };\n\n                }\n            }\n        });\n\n        this.viewer.addHandler('canvas-release', function (event) {\n            if (_this.props.chartOptions.dragmode === 'lasso') {\n                event.preventDefaultAction = true;\n                const indices = new Set(_this.findPointsInPolygon(lassoPathArray));\n                lassoPathArray = [];\n                lassoPath.setAttribute('d', '');\n                _this.props.onSelected({\n                    name: getEmbeddingKey(_this.props.trace.embedding),\n                    clear: !_this.editSelection,\n                    value: {basis: _this.props.trace.embedding, indices: indices}\n                });\n            } else if (_this.props.chartOptions.dragmode === 'select') {\n                event.preventDefaultAction = true;\n                const indices = new Set(_this.findPointsInRectangle(rectElement));\n                rectElement.removeAttribute('x');\n                rectElement.removeAttribute('y');\n                rectElement.removeAttribute('width');\n                rectElement.removeAttribute('height');\n                _this.props.onSelected({\n                    name: getEmbeddingKey(_this.props.trace.embedding),\n                    clear: !_this.editSelection,\n                    value: {basis: _this.props.trace.embedding, indices: indices}\n                });\n            }\n        });\n\n        // this.viewer.innerTracker.clickHandler = function (event) {\n        //     if (_this.props.chartOptions.dragmode === 'pan') {\n        //         let webPoint = event.position;\n        //         let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n        //         let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n        //         const point = _this.findPointIndex(imagePoint.x, imagePoint.y);\n        //         if (point === -1) {\n        //             //   this.props.onSelected({name: getEmbeddingKey(trace.embedding)});\n        //         } else {\n        //             _this.props.onSelected({\n        //                 name: getEmbeddingKey(_this.props.trace.embedding),\n        //                 clear: !_this.props.chartOptions.editSelection,\n        //                 value: {basis: _this.props.trace.embedding, points: [point]}\n        //             });\n        //         }\n        //     }\n        // };\n\n        viewer.addHandler('canvas-exit', function (event) {\n            _this.props.setTooltip('');\n\n        });\n\n        let svgOverlay = new OpenseadragonSvgOverlay(viewer);\n        let lassoPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        let rectElement = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        [lassoPath, rectElement].forEach(elem => {\n            elem.setAttribute('stroke', 'black');\n            elem.setAttribute('stroke-width', '3px');\n            elem.setAttribute('fill', '#0bb');\n            elem.setAttribute('fill-opacity', '0.3');\n            elem.setAttribute('stroke-dasharray', '2 2');\n            svgOverlay.node().appendChild(elem);\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.canvasOverlay) {\n            this.canvasOverlay._updateCanvas();\n        }\n        // if (this.viewer && prevProps.chartSize !== this.props.chartSize) {\n        //     this.viewer.viewport.resize();\n        // }\n    }\n\n    componentWillUnmount() {\n        if (this.viewer) {\n            this.viewer.destroy();\n        }\n        this.viewer = null;\n    }\n\n    componentDidMount() {\n        if (this.viewer == null) {\n            this.createViewer(this.props.trace.url);\n        }\n    }\n\n\n    onSaveImage = (format) => {\n        const {trace} = this.props;\n        const img = this.viewer.source.levels[this.viewer.source.levels.length - 1].context2D.canvas;\n        saveImage(trace, {width: img.width, height: img.height}, bind(this.drawContext, this), format);\n    };\n\n    // onEditSelection = () => {\n    //     this.props.chartOptions.editSelection = !this.props.chartOptions.editSelection;\n    //     this.props.setChartOptions(this.props.chartOptions);\n    // };\n\n\n    onZoomIn = () => {\n        this.viewer.viewport.zoomBy(this.viewer.zoomPerClick / 1.0);\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onZoomOut = () => {\n        this.viewer.viewport.zoomBy(1.0 / this.viewer.zoomPerClick);\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onHome = () => {\n        this.viewer.viewport.goHome();\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onDragMode = (mode) => {\n        this.props.chartOptions.dragmode = mode;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    render() {\n        return <>\n            <div className={this.props.classes.root}>\n                <ChartToolbar\n                    dragmode={this.props.chartOptions.dragmode}\n                    // editSelection={this.props.chartOptions.editSelection}\n                    onGallery={this.props.onGallery}\n                    animating={false}\n                    onZoomIn={this.onZoomIn}\n                    onZoomOut={this.onZoomOut}\n                    is3d={false}\n                    onHome={this.onHome}\n                    onSaveImage={this.onSaveImage}\n                    onDragMode={this.onDragMode}\n                    // onEditSelection={this.onEditSelection}\n                >\n                </ChartToolbar>\n            </div>\n            <div style={{\n                display: 'inline-block',\n                width: this.props.chartSize.width,\n                height: this.props.chartSize.height\n            }}\n                 id={this.id}>\n            </div>\n            {this.state.loading && <CircularProgress style={{\n                position: 'absolute',\n                left: this.props.chartSize.width / 2,\n                top: this.props.chartSize.height / 2\n            }} size={20}/>}\n        </>;\n    }\n}\n\n\nexport default withStyles(styles)(ImageChart);\n","import {Tooltip, Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport {find} from 'lodash';\nimport React from 'react';\n\n\nimport {connect} from 'react-redux';\nimport {\n    getTraceKey,\n    handleBrushFilterUpdated,\n    handleCategoricalNameChange,\n    handleColorChange,\n    handleDimensionFilterUpdated,\n    handleDomainChange,\n    handleMeasureFilterUpdated,\n    setChartOptions,\n    setEmbeddingData,\n    setLegendScrollPosition,\n    setPrimaryChartSize,\n    setSearchTokens\n} from './actions';\nimport CategoricalLegend from './CategoricalLegend';\nimport ColorSchemeLegendWrapper from './ColorSchemeLegendWrapper';\nimport ImageChart from './ImageChart';\nimport MetaEmbedding from './MetaEmbedding';\nimport ScatterChartThree from './ScatterChartThree';\nimport {FEATURE_TYPE, TRACE_TYPE_META_IMAGE} from './util';\nimport memoize from 'memoize-one';\n\n// TODO-this causes an unnecessary redraw when searchTokens is updated\nconst getActiveEmbeddingLabels = memoize(\n    (searchTokens, embeddingLabels) => {\n        return searchTokens.filter(item => item.type === FEATURE_TYPE.OBS_CAT && embeddingLabels.indexOf(item.value) !== -1).map(item => item.value);\n    }\n);\n\nclass EmbeddingChart extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {showLegend: true};\n        this.resizeListener = () => {\n            let width = window.innerWidth - 280;\n            let height = Math.max(300, window.innerHeight - 370);\n            this.props.handlePrimaryChartSize({width: width, height: height});\n            this.windowHeight = window.innerHeight;\n        };\n        window.addEventListener('resize', this.resizeListener);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resizeListener);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.activeFeature == null || this.props.activeFeature == null || prevProps.activeFeature.name !== this.props.activeFeature.name) {\n            this.setState({showLegend: true});\n        }\n    }\n\n    handleToggleLegend = (e) => {\n        e.preventDefault();\n        this.setState({showLegend: !this.state.showLegend});\n    };\n\n    onCamera = (eventName, cameraDef) => {\n        const {embeddingData, activeFeature} = this.props;\n        const primaryTrace = find(embeddingData, item => getTraceKey(item) === activeFeature.embeddingKey);\n        for (let i = 0, n = embeddingData.length; i < n; i++) {\n            if (primaryTrace.embedding.name === embeddingData[i].embedding.name) {\n                embeddingData[i].camera = cameraDef;\n            }\n        }\n        this.props.handleEmbeddingData(this.props.embeddingData.slice());\n    };\n\n\n    render() {\n        const {\n            activeFeature,\n            cachedData,\n            categoricalNames,\n            chartOptions,\n            dataset,\n            datasetFilter,\n            embeddingData,\n            embeddingLabels,\n            featureSummary,\n            globalFeatureSummary,\n            handleSearchTokens,\n            handleScrollPosition,\n            legendScrollPosition,\n            markerOpacity,\n            onCategoricalNameChange,\n            onChartOptions,\n            onColorChange,\n            onDimensionFilterUpdated,\n            onDomain,\n            onGallery,\n            onMeasureFilterUpdated,\n            onSelect,\n            pointSize,\n            primaryChartSize,\n            searchTokens,\n            serverInfo,\n            selection,\n            setTooltip,\n            shape,\n            unselectedMarkerOpacity,\n            unselectedPointSize\n        } = this.props;\n\n        if (activeFeature == null) {\n            return null;\n        }\n        const primaryTrace = find(embeddingData, item => getTraceKey(item) === activeFeature.embeddingKey);\n        if (primaryTrace == null) {\n            console.log(activeFeature.embeddingKey + ' not found');\n            return null;\n        }\n        const nObsSelected = selection.size;\n        const activeEmbeddingLabels = getActiveEmbeddingLabels(searchTokens, embeddingLabels);\n        const displayName = primaryTrace.name === '__count' ? '' : primaryTrace.name;\n        return (\n            <Box bgcolor={\"inherit\"} color=\"inherit\" style={{position: 'relative'}}>\n                <Box data-testid=\"chart-extra\" color=\"text.primary\" sx={{\n                    marginTop: 3.2,\n                    position: 'absolute',\n                    textAlign: 'right',\n                    overflow: 'hidden',\n                    // whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    maxWidth: 300,\n                    right: 8,\n                    zIndex: 1000\n                }}>\n                    {displayName !== '' &&\n                    <Tooltip title={\"Embedding: \" + primaryTrace.embedding.name}><Link\n                        onClick={this.handleToggleLegend}>\n                        <Typography\n                            color=\"textPrimary\" style={{marginRight: 14}}\n                            component={\"h4\"}>{displayName}</Typography></Link></Tooltip>\n                    }\n                    {primaryTrace.continuous ?\n                        <ColorSchemeLegendWrapper\n                            handleDomain={onDomain}\n                            style={{\n                                display: this.state.showLegend ? 'block' : 'none'\n                            }}\n                            handleUpdate={onMeasureFilterUpdated}\n                            datasetFilter={datasetFilter}\n                            featureSummary={featureSummary}\n                            globalFeatureSummary={globalFeatureSummary}\n                            nObs={shape[0]}\n                            nObsSelected={nObsSelected}\n                            name={primaryTrace.name}\n                            type={activeFeature.type}\n                        /> :\n                        <CategoricalLegend\n                            legendScrollPosition={legendScrollPosition}\n                            handleScrollPosition={handleScrollPosition}\n                            visible={this.state.showLegend}\n                            height={primaryChartSize.height - 40}\n                            features={dataset.features}\n                            datasetFilter={datasetFilter}\n                            handleClick={onDimensionFilterUpdated}\n                            handleColorChange={onColorChange}\n                            handleNameChange={onCategoricalNameChange}\n                            handleSearchTokens={handleSearchTokens}\n                            categoricalNames={categoricalNames}\n                            name={primaryTrace.name}\n                            scale={primaryTrace.colorScale}\n                            nObs={shape[0]}\n                            nObsSelected={nObsSelected}\n                            globalFeatureSummary={globalFeatureSummary}\n                            featureSummary={featureSummary}\n                            serverInfo={serverInfo}/>\n                    }\n                </Box>\n\n                {primaryTrace.type === 'scatter' && primaryTrace.embedding.mode == null &&\n                <ScatterChartThree trace={primaryTrace}\n                                   cachedData={cachedData}\n                                   obsCat={activeEmbeddingLabels}\n                                   chartSize={primaryChartSize}\n                                   setChartOptions={onChartOptions}\n                                   chartOptions={chartOptions}\n                                   categoricalNames={categoricalNames}\n                                   selection={selection}\n                                   onSelected={onSelect}\n                                   pointSize={pointSize}\n                                   unselectedPointSize={unselectedPointSize}\n                                   markerOpacity={markerOpacity}\n                                   unselectedMarkerOpacity={unselectedMarkerOpacity}\n                                   color={primaryTrace.colors}\n                                   onGallery={onGallery}\n                                   onCamera={this.onCamera}\n                                   setTooltip={setTooltip}\n                                   handleClick={onDimensionFilterUpdated}\n\n                />}\n\n                {primaryTrace.type === TRACE_TYPE_META_IMAGE &&\n                <MetaEmbedding trace={primaryTrace}\n                               cachedData={cachedData}\n                               chartSize={primaryChartSize}\n                               setChartOptions={onChartOptions}\n                               chartOptions={chartOptions}\n                               dataset={dataset}\n                               selection={selection}\n                               categoricalNames={categoricalNames}\n                               markerOpacity={markerOpacity}\n                               onSelected={onSelect}\n                               onGallery={onGallery}\n                               setTooltip={setTooltip}\n\n                />}\n                {primaryTrace.type === 'image' && <ImageChart\n                    cachedData={cachedData}\n                    obsCat={activeEmbeddingLabels}\n                    setChartOptions={onChartOptions}\n                    chartOptions={chartOptions}\n                    style={{display: 'inline-block'}}\n                    trace={primaryTrace}\n                    pointSize={pointSize}\n                    chartSize={primaryChartSize}\n                    categoricalNames={categoricalNames}\n                    selection={selection}\n                    onInitialized={this.onInitialized}\n                    markerOpacity={markerOpacity}\n                    unselectedMarkerOpacity={unselectedMarkerOpacity}\n                    onSelected={onSelect}\n                    onGallery={onGallery}\n                    setTooltip={setTooltip}\n                />}\n            </Box>);\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        activeFeature: state.activeFeature,\n        embeddingData: state.embeddingData,\n        cachedData: state.cachedData,\n        categoricalNames: state.categoricalNames,\n        chartOptions: state.chartOptions,\n        dataset: state.dataset,\n        datasetFilter: state.datasetFilter,\n        embeddingLabels: state.embeddingLabels,\n        featureSummary: state.featureSummary,\n        globalFeatureSummary: state.globalFeatureSummary,\n        legendScrollPosition: state.legendScrollPosition,\n        markerOpacity: state.markerOpacity,\n        selection: state.selection,\n        pointSize: state.pointSize,\n        primaryChartSize: state.primaryChartSize,\n        serverInfo: state.serverInfo,\n        shape: state.dataset.shape,\n        searchTokens: state.searchTokens,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        unselectedPointSize: state.unselectedPointSize\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onChartOptions: (options) => {\n            dispatch(setChartOptions(options));\n        },\n        onDomain: (value) => {\n            dispatch(handleDomainChange(value));\n        },\n        onDimensionFilterUpdated: (e) => {\n            dispatch(handleDimensionFilterUpdated(e));\n        },\n        onColorChange: (e) => {\n            dispatch(handleColorChange(e));\n        },\n        onCategoricalNameChange: (e) => {\n            dispatch(handleCategoricalNameChange(e));\n        },\n        onMeasureFilterUpdated: (e) => {\n            dispatch(handleMeasureFilterUpdated(e));\n        },\n        onSelect: (e) => {\n            dispatch(handleBrushFilterUpdated(e));\n        },\n\n        handleScrollPosition: value => {\n            dispatch(setLegendScrollPosition(value));\n        },\n        handlePrimaryChartSize: value => {\n            dispatch(setPrimaryChartSize(value));\n        },\n        handleEmbeddingData: (value) => {\n            dispatch(setEmbeddingData(value));\n        },\n        handleSearchTokens: (value, type, updateActiveFeatures, clear) => {\n            dispatch(setSearchTokens(value == null ? [] : value, type, updateActiveFeatures, clear));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(EmbeddingChart));\n\n","import {Tooltip} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {drawEmbeddingImage, getSpotRadius} from './ImageChart';\nimport {drawLabels, getVisualizer} from './ScatterChartThree';\nimport {\n    getCategoryLabelsPositions,\n    getLabels,\n    getScaleFactor,\n    POINT_VISUALIZER_ID,\n    updateScatterChart\n} from './ThreeUtil';\n\nfunction getImageUrl(cachedData,\n                     categoricalNames,\n                     chartOptions,\n                     chartSize,\n                     markerOpacity,\n                     obsCat,\n                     pointSize,\n                     selection,\n                     traceInfo,\n                     unselectedMarkerOpacity) {\n    let canvas = document.createElement('canvas');\n    canvas.width = chartSize * window.devicePixelRatio;\n    canvas.height = chartSize * window.devicePixelRatio;\n    const context = canvas.getContext('2d');\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    drawEmbeddingImage(context, {\n        width: chartSize,\n        height: chartSize\n    }, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, chartOptions, categoricalNames, obsCat, cachedData, getSpotRadius(traceInfo, pointSize));\n    return canvas.toDataURL();\n}\n\nexport default function GalleryImage(props) {\n    const [url, setUrl] = useState(null);\n    const [overlayUrl, setOverlayUrl] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const elementRef = useRef();\n\n\n    function onSelect(event) {\n        event.preventDefault();\n        props.onSelect(props.traceInfo);\n    }\n\n    const {\n        cachedData,\n        categoricalNames,\n        chartOptions,\n        chartSize,\n        containerElement,\n        primaryChartSize,\n        markerOpacity,\n        obsCat,\n        pointSize,\n        scatterPlot,\n        selection,\n        traceInfo,\n        unselectedMarkerOpacity,\n        unselectedPointSize\n    } = props;\n\n    useEffect(() => {\n        if (traceInfo.type === 'scatter' && traceInfo.embedding.mode == null) {\n            let spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n            spriteVisualizer.zoomFactor = getScaleFactor(primaryChartSize);\n\n            updateScatterChart(scatterPlot, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, pointSize, unselectedPointSize,\n                categoricalNames, chartOptions, obsCat, cachedData, traceInfo.camera);\n\n            const canvas = containerElement.querySelector('canvas');\n            const showLabels = obsCat.length > 0 && chartOptions.showGalleryLabels;\n            let overlayUrl = null;\n            if (showLabels) {\n                const labelsPositions = getCategoryLabelsPositions(traceInfo.embedding, obsCat, cachedData);\n                const labelCanvas = document.createElement('canvas');\n                labelCanvas.width = chartSize * window.devicePixelRatio;\n                labelCanvas.height = chartSize * window.devicePixelRatio;\n                const context = labelCanvas.getContext('2d');\n                context.scale(window.devicePixelRatio, window.devicePixelRatio);\n                context.font = 'bold ' + chartOptions.labelFontSize + 'px Roboto Condensed';\n                drawLabels(context, getLabels(obsCat, labelsPositions.labels, categoricalNames), labelsPositions.positions, chartOptions, {\n                    width: chartSize,\n                    height: chartSize\n                }, scatterPlot.camera);\n                overlayUrl = labelCanvas.toDataURL();\n            }\n            setUrl(canvas.toDataURL());\n            setOverlayUrl(overlayUrl);\n            setLoading(false);\n        } else if (traceInfo.type === 'image') {\n            if (!traceInfo.tileSource.ready) {\n                setUrl(null);\n                setOverlayUrl(null);\n                setLoading(true);\n                traceInfo.tileSource.addOnceHandler('ready', () => {\n                    setLoading(false);\n                    setUrl(getImageUrl(cachedData,\n                        categoricalNames,\n                        chartOptions,\n                        chartSize,\n                        markerOpacity,\n                        obsCat,\n                        pointSize,\n                        selection,\n                        traceInfo,\n                        unselectedMarkerOpacity));\n                });\n            } else {\n                setUrl(getImageUrl(cachedData,\n                    categoricalNames,\n                    chartOptions,\n                    chartSize,\n                    markerOpacity,\n                    obsCat,\n                    pointSize,\n                    selection,\n                    traceInfo,\n                    unselectedMarkerOpacity));\n                setOverlayUrl(null);\n                setLoading(false);\n            }\n        } else {\n            const containerElement = elementRef.current;\n            containerElement.innerHTML = '';\n            const svg = traceInfo.gallerySource;\n            svg.setAttribute('width', chartSize);\n            svg.setAttribute('height', chartSize);\n            containerElement.append(svg);\n            setUrl(null);\n            setOverlayUrl(null);\n            setLoading(false);\n        }\n\n    }, [containerElement, primaryChartSize, cachedData, categoricalNames, chartOptions, chartSize, markerOpacity, obsCat, pointSize, scatterPlot, selection, traceInfo, unselectedMarkerOpacity, unselectedPointSize]);\n\n\n    let name = props.traceInfo.name;\n    if (name === '__count') {\n        name = '';\n    }\n    return (\n        <Box borderColor=\"text.primary\" border={1}\n             data-testid=\"gallery-image\"\n             style={{display: 'inline-block', margin: 2}}>\n            <div style={{\n                position: 'relative',\n                width: props.chartSize,\n                height: props.chartSize,\n                cursor: 'pointer'\n            }}>\n                <Tooltip title={\"Embedding: \" + props.traceInfo.embedding.name}>\n                    <Typography color=\"textPrimary\" variant={\"caption\"}\n                                onClick={onSelect}\n                                style={{\n                                    marginTop: 3.2,\n                                    position: 'absolute',\n                                    right: 4,\n                                    zIndex: 1000\n                                }}>{name}</Typography>\n                </Tooltip>\n                {loading && <CircularProgress\n                    style={{position: 'absolute', left: props.chartSize / 2, top: props.chartSize / 2}}\n                    size={20}/>}\n                <div onClick={onSelect} ref={elementRef}\n                     style={{position: 'absolute', left: 0, top: 0}}></div>\n                {url &&\n                <div style={{position: 'absolute', left: 0, top: 0}}>\n                    <img alt=\"\" src={url}\n                         width={props.chartSize * window.devicePixelRatio}\n                         height={props.chartSize * window.devicePixelRatio}\n                         onClick={onSelect}\n                         style={{\n                             width: props.chartSize,\n                             height: props.chartSize\n                         }}/>\n                </div>}\n                {overlayUrl &&\n                <div style={{position: 'absolute', left: 0, top: 0}}>\n                    <img alt=\"\" src={overlayUrl}\n                         onClick={onSelect}\n                         style={{\n                             width: props.chartSize,\n                             height: props.chartSize\n                         }}/></div>}\n\n\n            </div>\n        </Box>\n    );\n\n\n}\n\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {sortableContainer, sortableElement} from 'react-sortable-hoc';\nimport {getTraceKey, setActiveFeature, setEmbeddingData} from './actions';\nimport GalleryImage from './GalleryImage';\nimport {createScatterPlot} from './ThreeUtil';\nimport {findIndex} from 'lodash';\nimport {FEATURE_TYPE} from './util';\n\nfunction createContainer(chartSize) {\n    const containerElement = document.createElement('div');\n    containerElement.style.position = 'absolute';\n    containerElement.style.left = '-9999px';\n    containerElement.style.width = chartSize + 'px';\n    containerElement.style.height = chartSize + 'px';\n    return containerElement;\n}\n\n\nclass GalleryCharts extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.containerElement = createContainer(this.props.chartSize);\n        document.body.appendChild(this.containerElement);\n        this.scatterPlot = createScatterPlot(this.containerElement, window.ApplePaySession != null, false, false);\n    }\n\n    onChartSelected = (traceInfo) => {\n        this.props.handleActiveFeature({\n            name: traceInfo.name,\n            type: traceInfo.featureType,\n            embeddingKey: getTraceKey(traceInfo)\n        });\n        window.scrollTo(0, 0);\n    };\n\n    onSortEnd = (galleryTraces, e) => {\n        const oldTrace = galleryTraces[e.oldIndex];\n        const newTrace = galleryTraces[e.newIndex];\n        const embeddingData = this.props.embeddingData;\n        const oldIndex = findIndex(embeddingData, oldTrace);\n        const newIndex = findIndex(embeddingData, newTrace);\n        embeddingData.splice(oldIndex, 1);\n        embeddingData.splice(newIndex, 0, oldTrace);\n        this.props.handleEmbeddingData(embeddingData.slice());\n    };\n\n\n    render() {\n        const {\n            cachedData,\n            categoricalNames,\n            chartSize,\n            chartOptions,\n            embeddingData,\n            embeddingLabels,\n            markerOpacity,\n            pointSize,\n            primaryChartSize,\n            searchTokens,\n            selection,\n            unselectedMarkerOpacity,\n            unselectedPointSize\n        } = this.props;\n\n        if (this.containerElement.style.width !== this.props.chartSize + 'px') {\n            document.body.removeChild(this.containerElement);\n            this.containerElement = createContainer(this.props.chartSize);\n            document.body.appendChild(this.containerElement);\n            this.scatterPlot = createScatterPlot(this.containerElement, window.ApplePaySession, false, false);\n        }\n\n        const galleryTraces = embeddingData.filter(traceInfo => traceInfo.active);\n        const obsCat = searchTokens.filter(item => item.type === FEATURE_TYPE.OBS_CAT && embeddingLabels.indexOf(item.value) !== -1);\n        const SortableItem = sortableElement(({trace}) => <GalleryImage\n            traceInfo={trace}\n            obsCat={obsCat}\n            cachedData={cachedData}\n            scatterPlot={this.scatterPlot}\n            markerOpacity={markerOpacity}\n            chartOptions={chartOptions}\n            pointSize={pointSize}\n            unselectedPointSize={unselectedPointSize}\n            primaryChartSize={primaryChartSize}\n            chartSize={chartSize}\n            categoricalNames={categoricalNames}\n            unselectedMarkerOpacity={unselectedMarkerOpacity}\n            selection={selection}\n            containerElement={this.containerElement}\n            onSelect={this.onChartSelected}\n            key={getTraceKey(trace)}/>);\n\n        const SortableList = sortableContainer(({items}) => {\n            return (\n                <ul style={{padding: 0, marginTop: 4, marginBottom: 0}}>\n                    {items.map((trace, index) => (\n                        <SortableItem key={getTraceKey(trace)} index={index} trace={trace}/>\n                    ))}\n                </ul>\n            );\n        });\n\n        return (\n            <SortableList\n                distance={2}\n                axis=\"xy\" items={galleryTraces}\n                onSortEnd={(e) => this.onSortEnd(galleryTraces, e)}/>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cachedData: state.cachedData,\n        categoricalNames: state.categoricalNames,\n        chartOptions: state.chartOptions,\n        chartSize: state.chartSize,\n        embeddingData: state.embeddingData,\n        embeddingLabels: state.embeddingLabels,\n        markerOpacity: state.markerOpacity,\n        pointSize: state.pointSize,\n        primaryChartSize: state.primaryChartSize,\n        searchTokens: state.searchTokens,\n        selection: state.selection,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        unselectedPointSize: state.unselectedPointSize\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleActiveFeature: (value) => {\n            dispatch(setActiveFeature(value));\n        },\n        handleEmbeddingData: (value) => {\n            dispatch(setEmbeddingData(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(GalleryCharts));\n\n","import {Divider, Paper} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {REACT_MD_OVERRIDES} from './util';\nimport preval from 'preval.macro';\n\nfunction LandingPage(props) {\n    const buildDate = preval`module.exports = new Date().toDateString()`;\n    return <Paper elevation={0}>\n\n        <p>Cirrocumulus: an interactive tool for large-scale single-cell genomics</p>\n        <Typography variant=\"h5\">Links</Typography>\n        <ul>\n            <li><Link target=\"_blank\" rel=\"noopener noreferrer\"\n                      href=\"http://cirrocumulus.readthedocs.io/\">Documentation</Link></li>\n            <li><Link target=\"_blank\" rel=\"noopener noreferrer\"\n                      href=\"https://github.com/klarman-cell-observatory/cirrocumulus\">Source\n                Code</Link></li>\n        </ul>\n        <Typography variant=\"h5\">Primary Embedding Controls</Typography>\n        <ul>\n            <li>Pan: Mouse left click (2-d), right click (3-d)</li>\n            <li>Rotate 3-d: Mouse left click</li>\n            <li>Zoom: Mouse wheel</li>\n            <li>Select: When using lasso or select tool, hold down the Ctrl or Command key to add to selection</li>\n            <li>Resize: Click and drag the divider below the primary embedding</li>\n            <li>Tooltip: Mouse move</li>\n            <li>Select Category: Mouse click</li>\n        </ul>\n\n        <Typography variant=\"h5\">Embedding Gallery</Typography>\n        <ul>\n            <li>Drag charts to reorder</li>\n            <li>Click chart to set primary view</li>\n        </ul>\n        {props.serverInfo && props.serverInfo.footer &&\n        <Box><ReactMarkdown options={{overrides: REACT_MD_OVERRIDES}} children={props.serverInfo.footer}/></Box>}\n\n        <Divider/>\n        {process.env.REACT_APP_VERSION != null &&\n        <Typography variant=\"body2\">Version: {process.env.REACT_APP_VERSION}</Typography>}\n        <Typography variant=\"caption\" display=\"block\">{buildDate}</Typography>\n    </Paper>;\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        serverInfo: state.serverInfo\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {};\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(LandingPage));\n","import Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDialog} from './actions';\nimport LandingPage from './LandingPage';\n\nclass HelpDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n        };\n    }\n\n    handleClose = () => {\n        this.props.handleClose();\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"help-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogContent>\n                    <LandingPage/>\n                    {/*<Divider/>*/}\n\n                    {/*<small>Last Updated {CIRRO_BUILD_DATE}</small>*/}\n                </DialogContent>\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClose: value => {\n            dispatch(setDialog(null));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(HelpDialog));\n\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {saveView, setDialog, setMessage} from './actions';\n\nclass SaveDatasetViewDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            notes: ''\n        };\n    }\n\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n\n    onNotesChanged = (event) => {\n        this.setState({notes: event.target.value});\n    };\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        this.props.handleSave({name: this.state.name.trim(), notes: this.state.notes.trim().trim()});\n    };\n\n\n    render() {\n        const {name, notes} = this.state;\n        const create = true;\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-dataset-view-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"edit-dataset-view-dialog-title\">{create\n                    ? 'Save'\n                    : 'Edit'} Link</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        size=\"small\"\n                        margin=\"dense\"\n                        required={true}\n                        value={name}\n                        autoComplete=\"off\"\n                        onChange={this.onNameChanged}\n                        label=\"Name\"\n                        fullWidth\n                    />\n                    <TextField\n                        size=\"small\"\n                        margin=\"dense\"\n                        required={false}\n                        value={notes}\n                        autoComplete=\"off\"\n                        onChange={this.onNotesChanged}\n                        label=\"Notes\"\n                        multiline={true}\n                        fullWidth\n\n                    />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose}>\n                        Cancel\n                    </Button>\n                    <Button disabled={name.trim().length === 0} onClick={this.handleSave} variant=\"contained\"\n                            color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveView(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        }\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(SaveDatasetViewDialog));\n\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {saveFeatureSet, setDialog, setMessage} from './actions';\n\nclass SaveSetDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            name: '',\n            category: ''\n        };\n    }\n\n\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n\n    onCategoryChanged = (event) => {\n        this.setState({category: event.target.value});\n    };\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        let category = this.state.category;\n        if (category != null) {\n            category = category.trim();\n        }\n        this.setState({loading: true});\n        this.props.handleSave({name: name, category: category});\n    };\n\n\n    render() {\n        let {name, category} = this.state;\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-set-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"edit-set-dialog-title\">Create Set</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        size={\"small\"}\n                        required={true}\n                        autoComplete=\"off\"\n                        value={name}\n                        onChange={this.onNameChanged}\n                        margin=\"dense\"\n                        label=\"Set Name\"\n                        fullWidth\n                    />\n                    <TextField\n                        size={\"small\"}\n                        required={true}\n                        autoComplete=\"off\"\n                        value={category}\n                        onChange={this.onCategoryChanged}\n                        margin=\"dense\"\n                        label=\"Set Category\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose}>\n                        Cancel\n                    </Button>\n                    <Button disabled={name.trim().length === 0 || category.trim().length === 0}\n                            onClick={this.handleSave} variant=\"contained\" color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveFeatureSet(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(SaveSetDialog));\n\n","import {InputLabel, MenuItem, Select, Switch, Tooltip} from '@mui/material';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Slider from '@mui/material/Slider';\nimport withStyles from '@mui/styles/withStyles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport {debounce, findIndex} from 'lodash';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setJobResults} from './actions';\nimport {EditableColorScheme} from './EditableColorScheme';\nimport {EditableSizeLegend} from './EditableSizeLegend';\nimport {sortAndFilterJobResult, updateJob, updateTopNJobResult} from './DotPlotJobResultsPanel';\nimport {\n    createColorScale,\n    INTERPOLATOR_SCALING_MIN_MAX_CATEGORY,\n    INTERPOLATOR_SCALING_MIN_MAX_FEATURE,\n    NATSORT\n} from './util';\n\nconst styles = theme => ({\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(0, 1)\n    },\n    formControlInline: {\n        margin: theme.spacing(0, 1)\n    }\n});\n\nclass DotPlotJobResultOptions extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.handleJobResultDebounced = debounce(this.handleJobResultDebounced, 500);\n        this.sortAndFilterDebounced = debounce(this.sortAndFilterDebounced, 500);\n        this.updateTopNJobResultDebounced = debounce(this.updateTopNJobResultDebounced, 500);\n        this.state = {\n            forceUpdate: false,\n            min: '',\n            max: ''\n        };\n    }\n\n\n    updateTopNJobResultDebounced = () => {\n        const {jobResult} = this.props;\n        updateTopNJobResult(jobResult);\n        this.handleJobResults();\n    };\n\n    sortAndFilterDebounced = () => {\n        const {jobResult} = this.props;\n        sortAndFilterJobResult(jobResult);\n        this.handleJobResults();\n    };\n\n    handleJobResultDebounced = () => {\n        const {jobResult} = this.props;\n        updateJob(jobResult);\n        this.handleJobResults();\n    };\n\n    onSizeReversedChange = (value) => {\n        const {jobResult} = this.props;\n        jobResult.sizeScaleReversed = value;\n        jobResult.sizeScale = undefined;\n        updateJob(jobResult);\n        this.handleJobResults();\n    };\n\n    handleJobResults = () => {\n        const {jobResult, jobResults} = this.props;\n        const newJobResult = Object.assign({}, jobResult);\n        const index = findIndex(jobResults, item => item.id === jobResult.id);\n        if (index === -1) {\n            throw new Error(jobResult.id + ' not found');\n        }\n        jobResults[index] = newJobResult; // TODO not redux style\n        this.props.handleJobResults(jobResults.slice());\n    };\n\n    onSortChange = (event) => {\n        const {jobResult} = this.props;\n        jobResult.sortByGroup = event.target.value;\n        updateTopNJobResult(jobResult);\n        this.handleJobResults();\n    };\n\n    onMinUIChange = (value) => {\n        this.setState({min: value});\n    };\n    onMaxUIChange = (value) => {\n        this.setState({max: value});\n    };\n\n    onMinChange = (value) => {\n        const {jobResult} = this.props;\n        jobResult.options.min = value;\n        jobResult.colorScale = undefined;\n        updateJob(jobResult);\n        this.handleJobResults();\n    };\n\n    onMaxChange = (value) => {\n        const {jobResult} = this.props;\n        jobResult.options.max = value;\n        jobResult.colorScale = undefined;\n        updateJob(jobResult);\n        this.handleJobResults();\n    };\n\n    onOptions = (options) => {\n        const {jobResult} = this.props;\n        jobResult.options = Object.assign(jobResult.options, options);\n        jobResult.colorScale = undefined;\n        jobResult.sizeScale = undefined;\n        this.handleJobResultDebounced(this.props.jobResultId);\n    };\n\n    onInterpolator = (value) => {\n        const {jobResult} = this.props;\n        const scale = jobResult.interpolator.scale;\n        jobResult.interpolator = value;\n        jobResult.interpolator.scale = scale;\n        jobResult.colorScale = createColorScale(jobResult.interpolator).domain(jobResult.colorScale.domain()).clamp(true);\n        this.handleJobResults();\n    };\n\n    onColorScalingChange = (value) => {\n        const {jobResult} = this.props;\n        jobResult.colorScale = undefined;\n        jobResult.interpolator.scale = value;\n        updateJob(jobResult);\n        this.handleJobResults();\n    };\n\n    onColorChanged = (event) => {\n        const {jobResult} = this.props;\n        jobResult.colorScale = undefined;\n        jobResult.color = event.target.value;\n        updateJob(jobResult);\n        this.handleJobResults();\n    };\n\n    onSizeChanged = (event) => {\n        const {jobResult} = this.props;\n        jobResult.sizeScale = undefined;\n        jobResult.size = event.target.value;\n        updateJob(jobResult);\n        this.handleJobResults();\n    };\n\n    onNtopChange = (event, value) => {\n        const {jobResult} = this.props;\n        jobResult.ntopUI = value;\n        jobResult.ntop = value;\n        this.setState((prevState, props) => ({\n            forceUpdate: !prevState.forceUpdate\n        }));\n        this.updateTopNJobResultDebounced();\n    };\n\n    onByChanged = (event) => {\n        const {jobResult} = this.props;\n        jobResult.by = event.target.value;\n        sortAndFilterJobResult(jobResult);\n        this.handleJobResults();\n    };\n\n    onByAscendingChange = (event) => {\n        const {jobResult} = this.props;\n        jobResult.byAscending = event.target.checked;\n        sortAndFilterJobResult(jobResult);\n        this.handleJobResults();\n    };\n\n    onOperationChanged = (filter, value) => {\n        const {jobResult} = this.props;\n        filter[1] = value;\n        sortAndFilterJobResult(jobResult);\n        this.handleJobResults();\n    };\n\n    onValueChange = (filter, value) => {\n        filter[2] = parseFloat(value);\n        filter[3] = value;\n        this.setState((prevState, props) => ({\n            forceUpdate: !prevState.forceUpdate\n        }));\n        this.sortAndFilterDebounced();\n    };\n\n    render() {\n        const {\n            jobResult,\n            classes,\n            textColor\n        } = this.props;\n\n\n        const {\n            rowFilters,\n            color,\n            size,\n            by,\n            byAscending,\n            colorScale,\n            ntopUI,\n            interpolator,\n            sizeScale\n        } = jobResult;\n\n        const fields = jobResult.fields.slice();\n        fields.sort(NATSORT);\n\n        return <>\n            <div style={{marginTop: 16}}>\n                <Typography\n                    component={\"h2\"}>Rank Features</Typography>\n                <FormControl style={{display: 'block'}} className={classes.formControl}>\n                    <InputLabel>By</InputLabel>\n                    <Select\n                        label={\"By\"}\n                        size={\"small\"}\n                        onChange={this.onByChanged}\n                        value={by}\n                    >\n                        {fields.map(item => (\n                            <MenuItem key={item} value={item}>{item}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <div><FormControlLabel\n                    control={\n                        <Switch\n                            value={\"byAscending\"}\n                            checked={byAscending}\n                            onChange={this.onByAscendingChange}\n                        />\n                    }\n                    label=\"Ascending\"\n                /></div>\n                <InputLabel style={{marginLeft: 8, marginTop: 8}}>Number of Features</InputLabel>\n                <Slider\n                    min={5}\n                    max={Math.min(100, jobResult.data.length)}\n                    step={5}\n                    style={{marginLeft: 10, width: '86%'}}\n                    valueLabelDisplay=\"auto\"\n                    value={ntopUI}\n                    onChange={this.onNtopChange}/>\n                {jobResult.groups.length > 1 && <FormControl style={{display: 'block'}} className={classes.formControl}>\n                    <InputLabel>Sort Features</InputLabel>\n                    <Select\n                        label={\"Sort Features\"}\n                        size={\"small\"}\n                        onChange={this.onSortChange}\n                        value={jobResult.sortByGroup}\n                    >\n                        {jobResult.columns.map(index => (\n                            <MenuItem key={jobResult.groups[index]}\n                                      value={jobResult.groups[index]}>{jobResult.groups[index]}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>}\n            </div>\n            <div style={{marginTop: 8}}></div>\n            <Tooltip title=\"Filters are applied separately per cluster\"><Typography\n                component={\"h2\"}>Filters</Typography></Tooltip>\n\n            {rowFilters.map(filter => {\n                // [field, op, val, uiValue]\n                const id = 'job_result' + filter[0];\n                return <div key={filter[0]} style={{paddingTop: 8}}>\n                    <FormControl className={classes.formControlInline}>\n                        <InputLabel>{filter[0]}</InputLabel>\n                        <Select\n                            label={filter[0]}\n                            size={\"small\"}\n                            labelId={id + '_label'}\n                            id={id}\n                            style={{marginRight: 6}}\n                            value={filter[1]}\n                            onChange={event => this.onOperationChanged(filter, event.target.value)}\n                        >\n                            <MenuItem value={\"\"}></MenuItem>\n                            <MenuItem value={\">\"}>{\">\"}</MenuItem>\n                            <MenuItem value={\"<\"}>{\"<\"}</MenuItem>\n                            <MenuItem value={\"=\"}>{\"=\"}</MenuItem>\n                            <MenuItem value={\">=\"}>{\">=\"}</MenuItem>\n                            <MenuItem value={\"<=\"}>{\"<=\"}</MenuItem>\n                            <MenuItem value={\"!=\"}>{\"!=\"}</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField size={\"small\"}\n                               onChange={event => this.onValueChange(filter, event.target.value)} value={filter[3]}\n                               style={{maxWidth: 60, verticalAlign: 'bottom'}}/>\n                </div>;\n            })}\n\n\n            <Typography style={{marginTop: 16}}\n                        component={\"h2\"}>View Options</Typography>\n\n            <FormControl className={classes.formControl}>\n                <InputLabel>Color</InputLabel>\n                <Select\n                    label={\"Color\"}\n                    size={\"small\"}\n                    onChange={this.onColorChanged}\n                    value={color}\n                >\n                    {fields.map(item => (\n                        <MenuItem key={item} value={item}>{item}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            <EditableColorScheme domain={colorScale.domain()}\n                                 textColor={textColor}\n                                 interpolator={interpolator}\n                                 min={this.state.min}\n                                 max={this.state.max}\n                                 onMinChange={this.onMinChange}\n                                 onMaxChange={this.onMaxChange}\n                                 onMinUIChange={this.onMinUIChange}\n                                 onMaxUIChange={this.onMaxUIChange}\n                                 onInterpolator={this.onInterpolator}/>\n\n            {jobResult.groups.length > 1 && <FormControl className={this.props.classes.formControl}>\n                <InputLabel>Standardize</InputLabel>\n                <Select\n                    label={\"Standardize\"}\n                    size={\"small\"}\n                    onChange={event => this.onColorScalingChange(event.target.value)}\n                    value={interpolator.scale}\n                >\n                    <MenuItem value={\"none\"} divider>(None)</MenuItem>\n                    <MenuItem title={\"Standardize features between 0 and 1\"}\n                              value={INTERPOLATOR_SCALING_MIN_MAX_FEATURE}>Feature</MenuItem>\n                    <MenuItem title={\"Standardize groups between 0 and 1\"}\n                              value={INTERPOLATOR_SCALING_MIN_MAX_CATEGORY}>Category</MenuItem>\n\n                </Select>\n            </FormControl>}\n\n            <FormControl style={{marginTop: 16}} className={classes.formControl}>\n                <InputLabel>Size</InputLabel>\n                <Select\n                    label={\"Size\"}\n                    size={\"small\"}\n                    onChange={this.onSizeChanged}\n                    value={size}\n                >\n                    <MenuItem divider value={'none'}>{'(None)'}</MenuItem>\n                    {fields.map(item => (\n                        <MenuItem key={item} value={item}>{item}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            <div style={{display: size === 'none' ? 'none' : '', marginTop: 6}}>\n                <EditableSizeLegend sizeScale={sizeScale} textColor={textColor}\n                                    onOptions={this.onOptions} showReversed={true}\n                                    reversed={jobResult.sizeScaleReversed}\n                                    onReversedChange={this.onSizeReversedChange}/>\n            </div>\n        </>;\n    }\n}\n\nconst mapStateToProps = state => {\n        return {\n            textColor: state.chartOptions.darkMode ? 'white' : 'black',\n            jobResults: state.jobResults\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            handleJobResults: (payload) => {\n                dispatch(setJobResults(payload));\n            }\n        };\n    }\n;\n\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps\n)(DotPlotJobResultOptions));\n\n","import {connect} from 'react-redux';\nimport {find} from 'lodash';\nimport DotPlotJobResultOptions from './DotPlotJobResultOptions';\n\nfunction JobResultOptions(props) {\n    const {jobResultId, jobResults} = props;\n    const jobResult = jobResultId != null ? find(jobResults, item => item.id === jobResultId) : null;\n    const jobType = jobResult != null ? jobResult.type : null;\n    return <>\n        {jobType == 'de' && <DotPlotJobResultOptions jobResult={jobResult}/>}\n    </>;\n}\n\nconst mapStateToProps = state => {\n        return {\n            jobResultId: state.jobResultId,\n            jobResults: state.jobResults\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {};\n    }\n;\n\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(JobResultOptions));","import {SvgIcon} from '@mui/material';\n\nexport default function NumberIcon(props) {\n    return (\n        <SvgIcon {...props}>\n            <path\n                d=\"M5.41,21L6.12,17H2.12L2.47,15H6.47L7.53,9H3.53L3.88,7H7.88L8.59,3H10.59L9.88,7H15.88L16.59,3H18.59L17.88,7H21.88L21.53,9H17.53L16.47,15H20.47L20.12,17H16.12L15.41,21H13.41L14.12,17H8.12L7.41,21H5.41M9.53,9L8.47,15H14.47L15.53,9H9.53Z\"/>\n        </SvgIcon>\n    );\n}\n","import AutocompleteVirtualized from \"./AutocompleteVirtualized\";\nimport {\n    copyToClipboard,\n    FEATURE_TYPE,\n    getCategoryValue,\n    getFeatureSets,\n    NATSORT,\n    SERVER_CAPABILITY_FEATURE_SETS\n} from \"./util\";\nimport NumberIcon from \"./NumberIcon\";\nimport {InputLabel, Switch, Typography} from '@mui/material';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport Link from '@mui/material/Link';\nimport Tooltip from '@mui/material/Tooltip';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport FontDownloadRoundedIcon from '@mui/icons-material/FontDownloadRounded';\nimport {findIndex, groupBy, isArray, isObject} from 'lodash';\nimport memoize from \"memoize-one\";\nimport React, {useState} from 'react';\nimport withStyles from '@mui/styles/withStyles';\nimport {\n    deleteFeatureSet,\n    deleteView,\n    downloadSelectedIds,\n    getDatasetFilterNames,\n    getEmbeddingKey,\n    getTraceKey,\n    removeDatasetFilter,\n    SAVE_FEATURE_SET_DIALOG,\n    setActiveFeature,\n    setCombineDatasetFilters,\n    setDialog,\n    setSearchTokens,\n    setSelectedEmbedding,\n    setTab,\n    toggleEmbeddingLabel\n} from './actions';\nimport {intFormat} from \"./formatters\";\nimport Chip from '@mui/material/Chip';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport {connect} from 'react-redux';\n\nconst styles = theme => ({\n    toolbar: {\n        '& hr': {\n            margin: theme.spacing(0, 0.5)\n        }\n    }\n});\nexport const getAnnotationOptions = memoize(\n    (obs, obsCat) => {\n        const options = [];\n        obs.forEach(item => {\n            options.push({\n                group: 'Continuous', text: item, id: item, icon: <NumberIcon style={{\n                    marginRight: 2,\n                    fontSize: '0.9rem'\n                }}/>\n            });\n        });\n        obsCat.forEach(item => {\n            options.push({\n                group: 'Categorical', text: item, id: item, icon: <FontDownloadRoundedIcon style={{\n                    marginRight: 2,\n                    fontSize: '0.9rem'\n                }}/>\n            });\n        });\n        options.sort((item1, item2) => {\n            // const c = NATSORT(item1.group, item2.group);\n            // if (c !== 0) {\n            //     return c;\n            // }\n            return NATSORT(item1.text, item2.text);\n        });\n        return options;\n    }\n);\nconst getEmbeddingOptions = memoize(\n    (embeddings) => {\n        const options = [];\n        embeddings.forEach(embedding => {\n            options.push({\n                text: embedding.name + (embedding.mode ? ' ' + embedding.mode : ''),\n                id: getEmbeddingKey(embedding)\n            });\n        });\n\n        options.sort((item1, item2) => {\n            return NATSORT(item1.text.toLowerCase(), item2.text.toLowerCase());\n        });\n        return options;\n    }\n);\nconst getModulesOptions = memoize((items) => {\n        if (items) {\n            const options = items.slice();\n            const textField = options.length > 0 && options[0].name != null ? 'name' : 'id';\n            options.forEach(item => {\n                item.text = item[textField];\n            });\n            options.sort((item1, item2) => {\n                const g = NATSORT(item1.group.toLowerCase(), item2.group.toLowerCase());\n                if (g !== 0) {\n                    return g;\n                }\n                return NATSORT(item1.text.toLowerCase(), item2.text.toLowerCase());\n            });\n            return options;\n        }\n        return [];\n    }\n);\nconst getFeatureSetOptions = memoize((items, categoricalNames) => {\n        const options = items.map(item => ({group: item.category, text: item.name, id: item.id}));\n\n        options.forEach(item => {\n            let group = item.group;\n            let index = group.lastIndexOf(' (');\n            if (index !== -1) {\n                group = group.substring(0, index);\n            }\n            let nameMap = categoricalNames[group] || {};\n            item.text = getCategoryValue(nameMap, item.text);\n\n        });\n        options.sort((item1, item2) => {\n            const c = NATSORT(item1.group, item2.group);\n            if (c !== 0) {\n                return c;\n            }\n            return NATSORT(item1.text, item2.text);\n        });\n        return options;\n    }\n);\n\n\nfunction detailsView(item) {\n    const keys = Object.keys(item);\n    const index = keys.indexOf('id');\n    if (index !== -1) {\n        keys.splice(index, 1);\n    }\n    keys.sort(NATSORT);\n    return keys.map(key => {\n        let value = item[key];\n        if (isArray(value)) {\n            value = value.join(', ');\n        } else if (isObject(value)) {\n            value = JSON.stringify(value);\n        } else {\n            value = '' + value;\n        }\n        return <div key={key}><Typography color=\"textSecondary\">\n            {key}\n        </Typography>\n            <Typography variant=\"h6\" component=\"h3\">\n                {value}\n            </Typography>\n        </div>;\n    });\n}\n\nfunction ExplorePanel(props) {\n    const [selectedPopupMenuItem, setSelectedPopupMenuItem] = useState(null);\n    const [popupAnchorEl, setPopupAnchorEl] = useState(null);\n    const [selectedItem, setSelectedItem] = useState({});\n\n    function onDatasetFilterChipDeleted(name) {\n        props.removeDatasetFilter(name);\n    }\n\n    function onDatasetFilterCleared() {\n        props.removeDatasetFilter(null);\n    }\n\n    function handleCombineDatasetFilters(event) {\n        props.handleCombineDatasetFilters(event.target.checked ? 'or' : 'and');\n    }\n\n    function onFeaturesChange(event, value) {\n        props.handleSearchTokens(value, FEATURE_TYPE.X);\n    }\n\n    function onModulesChange(event, value) {\n        let values = [];\n        value.forEach(item => {\n            if (item.id !== undefined) {\n                values.push(item.id);\n            } else {\n                values.push(item);\n            }\n        });\n        props.handleSearchTokens(values, FEATURE_TYPE.MODULE);\n    }\n\n    function onObservationsIconClick(event, option) {\n        props.handleEmbeddingLabel(option);\n        event.stopPropagation();\n    }\n\n    function onObservationsChange(event, value) {\n        let values = [];\n        value.forEach(val => {\n            if (val.text !== undefined) {\n                values.push(val.text);\n            } else {\n                values.push(val);\n            }\n        });\n        props.handleSearchTokens(values, FEATURE_TYPE.OBS);\n    }\n\n    function onSaveFeatureList() {\n        props.handleDialog(SAVE_FEATURE_SET_DIALOG);\n    }\n\n\n    function onEmbeddingsChange(event, value) {\n        const selection = [];\n        const embeddingKeys = props.dataset.embeddings.map(item => getEmbeddingKey(item));\n        value.forEach(val => {\n            const id = val.id !== undefined ? val.id : val;\n            const index = embeddingKeys.indexOf(id);\n            let embedding = props.dataset.embeddings[index];\n            selection.push(embedding);\n        });\n        props.handleEmbeddings(selection);\n    }\n\n    function onFeatureSetsChange(event, value) {\n        let values = [];\n        value.forEach(val => {\n            if (val.id !== undefined) {\n                values.push(val.id);\n            } else {\n                values.push(val);\n            }\n        });\n        props.handleSearchTokens(values, FEATURE_TYPE.FEATURE_SET);\n    }\n\n    function onFeatureSetClick(event, option) {\n        event.stopPropagation();\n        const id = option.id;\n        const target = event.target.closest(\".MuiFormControl-root\");\n        let markers = props.markers;\n        let newFeatureSet = null;\n        for (let i = 0; i < markers.length; i++) {\n            if (markers[i].id === id) {\n                newFeatureSet = markers[i];\n                break;\n            }\n        }\n        if (newFeatureSet == null) {\n            console.log(id + ' not found');\n        }\n        setPopupAnchorEl(target);\n        setSelectedItem({value: newFeatureSet, type: FEATURE_TYPE.FEATURE_SET});\n    }\n\n    function onModulesClick(event, option) {\n        event.stopPropagation();\n        const target = event.target.closest(\".MuiFormControl-root\");\n\n        const modules = props.dataset.modules;\n        let selectedItem;\n        for (let i = 0, n = modules.length; i < n; i++) {\n            if (modules[i].id == option) {\n                selectedItem = modules[i];\n                break;\n            }\n        }\n        setPopupAnchorEl(target);\n        setSelectedItem({value: selectedItem, type: FEATURE_TYPE.MODULE});\n    }\n\n    function onMenuClose(event) {\n        setPopupAnchorEl(null);\n        setSelectedItem({});\n    }\n\n    function onViewFeatureSet(event) {\n        event.stopPropagation();\n        setPopupAnchorEl(null);\n        setSelectedPopupMenuItem('feature set view');\n    }\n\n    function onViewModule(event) {\n        event.stopPropagation();\n        setPopupAnchorEl(null);\n        setSelectedPopupMenuItem('module view');\n    }\n\n    function onCloseDialog(event) {\n        event.stopPropagation();\n        setSelectedItem({});\n        setSelectedPopupMenuItem(null);\n    }\n\n    function onDeleteFeatureSet(event) {\n        event.stopPropagation();\n        let searchTokens = props.searchTokens;\n        const featureSetId = selectedItem.value.id;\n        let value = searchTokens.filter(token => token.type === FEATURE_TYPE.FEATURE_SET && token.value.id !== featureSetId);\n        props.handleSearchTokens(value, FEATURE_TYPE.FEATURE_SET);\n        props.handleDeleteFeatureSet(featureSetId);\n        setSelectedItem({});\n        setPopupAnchorEl(null);\n    }\n\n    function onFilterChipClicked(event) {\n        onFeatureClick(event, event.target.innerText);\n    }\n\n    function onFeatureCopy(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        let searchTokens = props.searchTokens;\n        copyToClipboard(searchTokens.filter(token => token.type === FEATURE_TYPE.X).map(item => item.value).join('\\n'));\n    }\n\n    function onDownloadSelectedIds(event) {\n        event.preventDefault();\n        props.handleDownloadSelectedIds();\n    }\n\n    function onFeatureClick(event, option) {\n        event.stopPropagation();\n        const value = option.text !== undefined ? option.text : option;\n        let galleryTraces = props.embeddingData.filter(traceInfo => traceInfo.active);\n        for (let i = 0; i < galleryTraces.length; i++) {\n            if (galleryTraces[i].name === value) {\n                if (props.tab !== 'embedding') {\n                    props.handleTab('embedding');\n                }\n                props.handleActiveFeature({\n                    name: galleryTraces[i].name,\n                    type: galleryTraces[i].featureType,\n                    embeddingKey: getTraceKey(galleryTraces[i])\n                });\n                break;\n            }\n        }\n    }\n\n    const {\n        categoricalNames,\n        classes,\n        combineDatasetFilters,\n        dataset,\n        datasetFilter,\n        embeddingLabels,\n        embeddings,\n        markers,\n        searchTokens,\n        selection,\n        serverInfo,\n        tab\n    } = props;\n\n    const datasetFilterKeys = getDatasetFilterNames(datasetFilter);\n    datasetFilterKeys.sort(NATSORT);\n    const groupedSearchTokens = groupBy(searchTokens, 'type');\n    const obsCatSearchTokens = (groupedSearchTokens[FEATURE_TYPE.OBS_CAT] || []).map(item => item.value);\n    const xSearchTokens = (groupedSearchTokens[FEATURE_TYPE.X] || []).map(item => item.value);\n    const featureSets = getFeatureSets(markers, groupedSearchTokens[FEATURE_TYPE.FEATURE_SET] || []);\n    const moduleTokens = (groupedSearchTokens[FEATURE_TYPE.MODULE] || []).map(item => item.value);\n    const featureOptions = dataset.features;\n    const moduleOptions = getModulesOptions(dataset.modules);\n    const obsCat = dataset.obsCat;\n    const obs = dataset.obs;\n    const annotationOptions = getAnnotationOptions(obs, obsCat);\n    const featureSetOptions = getFeatureSetOptions(markers, categoricalNames);\n    const embeddingOptions = getEmbeddingOptions(dataset.embeddings);\n    const selectedEmbeddings = getEmbeddingOptions(embeddings);\n    return <>\n\n        {'feature set view' === selectedPopupMenuItem && <Dialog\n            open={true}\n            onClose={onCloseDialog}\n            aria-labelledby=\"view-dialog-title\"\n            fullWidth={true}\n            maxWidth={'lg'}\n        >\n            <DialogTitle id=\"view-dialog-title\">{selectedItem ? selectedItem.value.name : ''}</DialogTitle>\n            <DialogContent>\n                <TextField\n                    size=\"small\"\n                    value={selectedItem ? selectedItem.value.features.join('\\n') : ''}\n                    margin=\"dense\"\n                    fullWidth\n                    readOnly={true}\n                    variant=\"outlined\"\n                    multiline={true}\n                />\n            </DialogContent>\n        </Dialog>}\n        {selectedItem.type === FEATURE_TYPE.FEATURE_SET && <Menu\n            id=\"feature-set-menu\"\n            anchorEl={popupAnchorEl}\n            open={Boolean(popupAnchorEl)}\n            onClose={onMenuClose}\n        >\n            <MenuItem onClick={onViewFeatureSet}>View</MenuItem>\n            <MenuItem divider={true}/>\n            <MenuItem disabled={selectedItem.value.readonly}\n                      onClick={onDeleteFeatureSet}>Delete</MenuItem>\n        </Menu>}\n\n        {'module view' === selectedPopupMenuItem && <Dialog\n            open={true}\n            onClose={onCloseDialog}\n            aria-labelledby=\"view-dialog-title\"\n            fullWidth={true}\n            maxWidth={'lg'}\n        >\n            <DialogTitle id=\"view-dialog-title\">{selectedItem ? selectedItem.value.id : ''}</DialogTitle>\n            <DialogContent>\n\n                {detailsView(selectedItem.value)}\n                {/*<DataGrid*/}\n                {/*    rows={rows}*/}\n                {/*    columns={columns}*/}\n                {/*    pageSize={5}*/}\n                {/*    rowsPerPageOptions={[5]}*/}\n                {/*    checkboxSelection*/}\n                {/*    disableSelectionOnClick*/}\n                {/*/>*/}\n            </DialogContent>\n        </Dialog>}\n\n        {selectedItem.type === FEATURE_TYPE.MODULE && <Menu\n            id=\"module-menu\"\n            anchorEl={popupAnchorEl}\n            open={Boolean(popupAnchorEl)}\n            onClose={onMenuClose}\n        >\n            <MenuItem onClick={onViewModule}>View</MenuItem>\n        </Menu>}\n        <div style={tab === 'embedding' || tab === 'distribution' || tab === 'composition' ? null : {display: 'none'}}>\n\n            <Typography gutterBottom={false} component={\"h1\"}\n                        style={{textTransform: 'uppercase', letterSpacing: '0.1em'}}>Explore</Typography>\n            {tab === 'embedding' && embeddingOptions.length > 0 &&\n            <FormControl sx={{display: 'block'}}>\n                <AutocompleteVirtualized label={\"Embeddings\"}\n                                         testId={'embeddings-input'}\n                                         options={embeddingOptions}\n                                         getChipTitle={(option) => {\n                                             return option.text;\n                                         }}\n                                         getOptionLabel={(option) => option.text}\n                                         value={selectedEmbeddings}\n                                         getChipText={(option) => option.text}\n                                         getOptionSelected={(option, value) => findIndex(selectedEmbeddings, item => item.id === option.id) !== -1}\n                                         onChange={onEmbeddingsChange}\n                />\n            </FormControl>}\n            {featureOptions.length > 0 && <FormControl sx={{display: 'block'}}>\n                <AutocompleteVirtualized onChipClick={onFeatureClick}\n                                         label={\"Genes/Features\"}\n                                         testId={'genes-input'}\n                                         options={featureOptions}\n                                         value={xSearchTokens}\n                                         getOptionLabel={(option) => option}\n                                         onChange={onFeaturesChange}\n                                         helperText={\"Enter or paste list\"}\n\n                />\n                <div><Link\n                    style={{\n                        float: 'right',\n                        marginRight: 4,\n                        fontSize: '0.75rem',\n                        transform: 'translateY(-50px)',\n                        display: xSearchTokens.length === 0 ? 'none' : ''\n                    }}\n                    onClick={onFeatureCopy}>Copy</Link></div>\n\n            </FormControl>}\n            {annotationOptions.length > 0 && <FormControl sx={{display: 'block'}}>\n                <AutocompleteVirtualized label={\"Cell Metadata\"}\n                                         testId={'cell-meta-input'}\n                                         options={annotationOptions}\n                                         value={searchTokens.filter(token => token.type === FEATURE_TYPE.OBS_CAT || token.type === FEATURE_TYPE.OBS).map(token => token.value)}\n                                         onChipClick={onFeatureClick}\n                                         getOptionLabel={(option) => option.text}\n                                         getChipIcon={(option) => {\n                                             return obsCatSearchTokens.indexOf(option) !== -1 ?\n                                                 <FontDownloadRoundedIcon\n                                                     onClick={(event) => {\n                                                         onObservationsIconClick(event, option);\n                                                     }}\n                                                     title={\"Toggle Show/Hide Labels\"}\n                                                     style={{\n                                                         marginLeft: 4,\n                                                         marginTop: 0,\n                                                         marginRight: 0,\n                                                         marginBottom: 0\n                                                     }}\n                                                     className={\"MuiChip-deleteIcon MuiChip-deleteIconSmall\" + (embeddingLabels.indexOf(option) !== -1 ? ' cirro-active' : '')}/> : null;\n                                         }}\n                                         getOptionSelected={(option, value) => option.id === value}\n                                         onChange={onObservationsChange}/>\n            </FormControl>}\n\n            {moduleOptions.length > 0 && <FormControl sx={{display: 'block'}}>\n                <AutocompleteVirtualized\n                    label={\"Modules\"}\n                    testId={'modules-input'}\n                    options={moduleOptions}\n                    value={moduleTokens}\n                    getOptionSelected={(option, value) => option.id === value}\n                    groupBy={(option) => option.group}\n                    onChange={onModulesChange}\n                    getOptionLabel={(option) => option.text}\n                    onChipClick={onModulesClick}\n                    getChipIcon={(option) => {\n                        return <ArrowDropDownIcon onClick={(event) => {\n                            onModulesClick(event, option);\n                        }}/>;\n                    }}\n                />\n            </FormControl>}\n            {<FormControl sx={{display: 'block'}}>\n                <AutocompleteVirtualized label={\"Sets\"}\n                                         testId={'sets-input'}\n                                         options={featureSetOptions}\n                                         value={featureSets}\n                                         getChipTitle={(option) => {\n                                             return option.category + ', ' + option.name;\n                                         }}\n                                         onChipClick={onFeatureSetClick}\n                                         getChipIcon={(option) => {\n                                             return <ArrowDropDownIcon onClick={(event) => {\n                                                 onFeatureSetClick(event, option);\n                                             }}/>;\n                                         }}\n                                         groupBy={(option) => option.group}\n                                         onChange={onFeatureSetsChange}\n                                         getOptionSelected={(option, value) => option.id === value.id}\n                                         getChipText={option => option.name}\n                />\n                {serverInfo.capabilities.has(SERVER_CAPABILITY_FEATURE_SETS) && <div>\n                    <Tooltip title={\"Save Current Genes/Features\"}>\n                        <Link\n                            style={{\n                                float: 'right',\n                                fontSize: '0.75rem',\n                                marginRight: 4,\n                                display: xSearchTokens.length === 0 ? 'none' : ''\n                            }}\n                            onClick={onSaveFeatureList}>Save</Link></Tooltip></div>}\n            </FormControl>}\n        </div>\n        <div style={{maxHeight: 500}}>\n            <Divider inset=\"true\"/>\n            <Typography gutterBottom={false} component={\"h1\"}\n                        style={{textTransform: 'uppercase'}}>Filters</Typography>\n            <Grid alignContent={\"flex-start\"} container alignItems=\"center\"\n                  spacing={0}>\n                <Grid item><InputLabel shrink={true}>Combine</InputLabel></Grid>\n                <Grid item>AND</Grid>\n                <Grid item>\n                    <Switch\n                        size=\"small\"\n                        checked={combineDatasetFilters === 'or'}\n                        onChange={handleCombineDatasetFilters}\n                    />\n                </Grid>\n                <Grid item>OR</Grid>\n            </Grid>\n            {datasetFilterKeys.length > 0 && selection.size > 0 &&\n            <>\n                <div style={{marginBottom: 2}}>\n                    {intFormat(selection.size) + \" / \" + intFormat(dataset.shape[0]) + \": \"}\n                    {datasetFilterKeys.map(key => {\n                        return (\n                            <Chip\n                                onDelete={() => {\n                                    onDatasetFilterChipDeleted(key);\n                                }}\n                                onClick={onFilterChipClicked}\n                                size={\"small\"}\n                                style={{marginRight: 2, verticalAlign: 'bottom'}}\n                                key={key}\n                                label={key}/>\n                        );\n                    })}\n                    <Divider/>\n                    <Grid container alignItems=\"center\" className={classes.toolbar}\n                          disabled={datasetFilterKeys.length === 0}>\n                        <Tooltip title={\"Clear All\"}>\n                            <IconButton size={'small'}\n                                        onClick={onDatasetFilterCleared}><HighlightOffIcon/></IconButton>\n                        </Tooltip>\n                        <Tooltip title={\"Download Selected IDs\"}>\n                            <IconButton size={'small'}\n                                        onClick={onDownloadSelectedIds}><CloudDownloadIcon/></IconButton>\n                        </Tooltip>\n                    </Grid>\n                </div>\n            </>\n            }\n\n        </div>\n    </>;\n}\n\n\nconst mapStateToProps = state => {\n        return {\n            activeFeature: state.activeFeature,\n            categoricalNames: state.categoricalNames,\n            combineDatasetFilters: state.combineDatasetFilters,\n            dataset: state.dataset,\n            datasetFilter: state.datasetFilter,\n            datasetFilters: state.datasetFilters,\n            embeddingData: state.embeddingData,\n            embeddingLabels: state.embeddingLabels,\n            embeddings: state.embeddings,\n            markers: state.markers,\n            savedDatasetFilter: state.savedDatasetFilter,\n            searchTokens: state.searchTokens,\n            selection: state.selection,\n            serverInfo: state.serverInfo,\n            tab: state.tab\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n        handleTab: (value) => {\n            dispatch(setTab(value));\n        },\n        handleActiveFeature: (value) => {\n            dispatch(setActiveFeature(value));\n        },\n        handleCombineDatasetFilters: (value) => {\n            dispatch(setCombineDatasetFilters(value));\n        },\n        handleDownloadSelectedIds: () => {\n            dispatch(downloadSelectedIds());\n        },\n        removeDatasetFilter: (filter) => {\n            dispatch(removeDatasetFilter(filter));\n        },\n        handleEmbeddings: value => {\n            dispatch(setSelectedEmbedding(value));\n        },\n        handleEmbeddingLabel: value => {\n            dispatch(toggleEmbeddingLabel(value));\n        },\n        handleSearchTokens: (value, type) => {\n            dispatch(setSearchTokens(value == null ? [] : value, type));\n        },\n        handleDeleteView: value => {\n            dispatch(deleteView(value));\n        },\n        handleDeleteFeatureSet: value => {\n            dispatch(deleteFeatureSet(value));\n        }\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps\n)(ExplorePanel));","import Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\nimport {DialogActions, Divider, Switch, Typography} from '@mui/material';\nimport Button from '@mui/material/Button';\nimport {SERVER_CAPABILITY_JOBS} from './util';\nimport Tooltip from '@mui/material/Tooltip';\nimport Grid from '@mui/material/Grid';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport {intFormat} from './formatters';\nimport FormControl from '@mui/material/FormControl';\nimport AutocompleteVirtualized from './AutocompleteVirtualized';\nimport FontDownloadRoundedIcon from '@mui/icons-material/FontDownloadRounded';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport React, {useEffect, useState} from 'react';\nimport {datasetFilterToJson, setDialog, setTab, submitJob} from './actions';\nimport {connect} from 'react-redux';\nimport {getAnnotationOptions} from './ExplorePanel';\n\nfunction JobPanel(props) {\n    const {\n        compareActions,\n        combineDatasetFilters,\n        dataset,\n        datasetFilter,\n        handleSubmitJob,\n        selection,\n        serverInfo,\n        tab\n    } = props;\n\n    const [compareGroups, setCompareGroups] = useState('selected');\n    const [group1, setGroup1] = useState(null);\n    const [group1Count, setGroup1Count] = useState(null);\n\n    const [group2, setGroup2] = useState(null);\n    const [group2Count, setGroup2Count] = useState(null);\n\n    const [jobName, setJobName] = useState('');\n    const [jobParams, setJobParams] = useState(null);\n    const [compareMenu, setCompareMenu] = useState(null);\n\n    const [compareCategories, setCompareCategories] = useState([]);\n\n    const obsCatOptions = getAnnotationOptions([], dataset.obsCat);\n\n    useEffect(() => {\n        setGroup1(null);\n        setGroup1Count(null);\n        setGroup2(null);\n        setGroup2Count(null);\n        setCompareCategories([]);\n        setJobParams(null);\n    }, [dataset]);\n\n    function onCompareGroups(event) {\n        setCompareGroups(event.target.checked ? 'selected' : 'all');\n    }\n\n    function onJobNameChange(event) {\n        setJobName(event.target.value);\n    }\n\n    function onSubmitJobCancel() {\n        setJobName('');\n        setJobParams(null);\n    }\n\n    function onSubmitJobOK() {\n        jobParams.name = jobName;\n        handleSubmitJob(jobParams);\n        setJobName('');\n        setJobParams(null);\n    }\n\n    function onSetGroup(groupNumber) {\n        const g = datasetFilterToJson(dataset, datasetFilter, combineDatasetFilters);\n        const count = selection.size;\n        if (groupNumber === 1) {\n            setGroup1(g);\n            setGroup1Count(count);\n        } else {\n            setGroup2(g);\n            setGroup2Count(count);\n        }\n    }\n\n    function onCompareCategories(event, value) {\n        let values = [];\n        value.forEach(val => {\n            if (val.text !== undefined) {\n                values.push(val.text);\n            } else {\n                values.push(val);\n            }\n        });\n        setCompareCategories(values);\n\n    }\n\n    function onSubmitJob(jobType, version) {\n        setJobName('');\n        const p = {\n            type: jobType,\n            params: {version: version}\n        };\n        if (compareGroups === 'selected') {\n            p.params.filter = group1;\n            p.params.filter2 = group2;\n        } else {\n            p.params.obs = compareCategories;\n        }\n        setJobParams(p);\n    }\n\n\n    return <>\n        <Dialog\n            open={jobParams != null}\n            onClose={onSubmitJobCancel}\n            aria-labelledby=\"submit-job-dialog-title\"\n            aria-describedby=\"submit-job-dialog-description\"\n        >\n            <DialogTitle id=\"submit-job-dialog-title\">Submit</DialogTitle>\n            <DialogContent>\n                {/*<DialogContentText id=\"submit-job-dialog-description\">*/}\n                {/*    Job Details*/}\n                {/*</DialogContentText>*/}\n                <TextField\n                    size={\"small\"}\n                    onChange={onJobNameChange}\n                    value={jobName}\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Job Name\"\n                    type=\"text\"\n                    fullWidth\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onSubmitJobCancel}>\n                    Cancel\n                </Button>\n                <Button disabled={jobName === ''} variant=\"contained\" onClick={e => onSubmitJobOK(jobName)}\n                        color=\"primary\">\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        {serverInfo.capabilities.has(SERVER_CAPABILITY_JOBS) &&\n        <div style={tab === 'embedding' ? null : {display: 'none'}}>\n            <Divider/>\n            <Typography gutterBottom={false} component={\"h1\"}\n                        style={{textTransform: 'uppercase'}}>Compare</Typography>\n\n            <Grid alignContent={\"flex-start\"} container alignItems=\"center\"\n                  spacing={0}>\n                {/*<Grid item><InputLabel shrink={true}>Combine</InputLabel></Grid>*/}\n                <Tooltip\n                    title={\"Compare all pairs in a category\"}><Grid item>ALL PAIRS</Grid></Tooltip>\n                <Grid item>\n                    <Switch\n                        size=\"small\"\n                        checked={compareGroups === 'selected'}\n                        onChange={onCompareGroups}\n                    />\n                </Grid>\n                <Tooltip\n                    title={\"Choose a specific pair\"}><Grid item>SELECTED</Grid></Tooltip>\n            </Grid>\n            {compareGroups === 'selected' &&\n            <ButtonGroup variant=\"outlined\" disabled={selection.size === 0}>\n                <Tooltip\n                    title={'Group one' + (group1Count ? ' (' + intFormat(group1Count) + ' cells)' : '')}>\n                    <Button size={\"small\"}\n                            onClick={event => onSetGroup(1)}>1</Button>\n                </Tooltip>\n                <Tooltip\n                    title={'Group two' + (group2Count ? ' (' + intFormat(group2Count) + ' cells)' : '')}>\n                    <Button size={\"small\"}\n                            onClick={event => onSetGroup(2)}>2</Button>\n                </Tooltip>\n            </ButtonGroup>}\n            {compareGroups === 'all' && <FormControl sx={{display: 'block'}}>\n                <AutocompleteVirtualized label={\"Metadata Categories\"}\n                                         testId={'compare-meta-input'}\n                                         options={obsCatOptions}\n                                         value={compareCategories}\n                                         getOptionLabel={(option) => option.text}\n                                         getChipIcon={(option) => {\n                                             return <FontDownloadRoundedIcon\n                                                 style={{\n                                                     marginLeft: 4,\n                                                     marginTop: 0,\n                                                     marginRight: 0,\n                                                     marginBottom: 0\n                                                 }}\n                                                 className={\"MuiChip-deleteIcon MuiChip-deleteIconSmall\"}/>;\n                                         }}\n                                         getOptionSelected={(option, value) => option.id === value}\n                                         onChange={onCompareCategories}/>\n            </FormControl>}\n\n            <Button size={\"small\"} variant={\"outlined\"}\n                    endIcon={<ArrowDropDownIcon/>}\n                    disabled={(compareGroups === 'selected' && (group1 == null || group2 == null)) || (compareGroups === 'all' && compareCategories.length === 0)}\n                    onClick={event => setCompareMenu(event.currentTarget)}>\n                GO</Button>\n            <Menu\n                variant={\"menu\"}\n                id=\"compare-menu\"\n                anchorEl={compareMenu}\n                open={Boolean(compareMenu)}\n                onClose={event => setCompareMenu(null)}\n            >\n                {compareActions.map(action => <MenuItem title={action.title}\n                                                        key={action.jobType}\n                                                        onClick={event => {\n                                                            onSubmitJob(action.jobType, action.version);\n                                                            setCompareMenu(null);\n                                                        }}>{action.title}</MenuItem>)}\n\n            </Menu>\n        </div>}\n    </>;\n}\n\n\nconst mapStateToProps = state => {\n        return {\n            combineDatasetFilters: state.combineDatasetFilters,\n            dataset: state.dataset,\n            datasetFilter: state.datasetFilter,\n            selection: state.selection,\n            serverInfo: state.serverInfo,\n            tab: state.tab\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            handleDialog: (value) => {\n                dispatch(setDialog(value));\n            },\n            handleTab: (value) => {\n                dispatch(setTab(value));\n            },\n            handleSubmitJob: value => {\n                dispatch(submitJob(value));\n            }\n        };\n    }\n;\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(JobPanel));","import {InputLabel, Switch, Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Slider from '@mui/material/Slider';\nimport InfoIcon from '@mui/icons-material/Info';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {debounce, find} from 'lodash';\nimport React from 'react';\nimport {\n    deleteFeatureSet,\n    deleteView,\n    getTraceKey,\n    handleDomainChange,\n    openView,\n    removeDatasetFilter,\n    SAVE_DATASET_FILTER_DIALOG,\n    setActiveFeature,\n    setChartOptions,\n    setChartSize,\n    setCombineDatasetFilters,\n    setDialog,\n    setDistributionPlotOptions,\n    setInterpolator,\n    setMarkerOpacity,\n    setPointSize,\n    setSearchTokens,\n    setSelectedEmbedding,\n    setTab,\n    setUnselectedMarkerOpacity,\n    setUnselectedPointSize,\n    submitJob,\n    toggleEmbeddingLabel\n} from './actions';\nimport {EditableColorScheme} from './EditableColorScheme';\nimport JobResultOptions from './JobResultOptions';\nimport {copyToClipboard, REACT_MD_OVERRIDES, SERVER_CAPABILITY_LINKS, TRACE_TYPE_META_IMAGE} from './util';\nimport Link from \"@mui/material/Link\";\nimport withStyles from '@mui/styles/withStyles';\nimport {connect} from 'react-redux';\nimport Divider from \"@mui/material/Divider\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport ExplorePanel from './ExplorePanel';\nimport JobPanel from './JobPanel';\nimport Popover from '@mui/material/Popover';\nimport ReactMarkdown from 'markdown-to-jsx';\n\nconst pointSizeOptions = [{value: 0.1, label: '10%'}, {value: 0.25, label: '25%'}, {value: 0.5, label: '50%'}, {\n    value: 0.75,\n    label: '75%'\n}, {value: 1, label: '100%'}, {value: 1.5, label: '150%'}, {value: 2, label: '200%'}, {\n    value: 3,\n    label: '300%'\n}, {value: 4, label: '400%'}, {value: 5, label: '500%'}];\nconst gallerySizeOptions = [{value: 200, label: 'Extra Small'}, {value: 300, label: 'Small'}, {\n    value: 500,\n    label: 'Medium'\n}, {\n    value: 800,\n    label: 'Large'\n}];\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: theme.spacing(0, 0.5)\n    },\n    title: {textTransform: 'uppercase'},\n    formControl: {\n        display: 'block',\n        minWidth: 200,\n        maxWidth: 200,\n        marginBottom: theme.spacing(1)\n    },\n    select: {\n        minWidth: 200\n    }\n});\n\n\nclass SideBar extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            opacity: props.markerOpacity,\n            unselectedOpacity: props.unselectedMarkerOpacity,\n            minColor: '',\n            maxColor: '',\n            labelFontSize: props.chartOptions.labelFontSize,\n            labelStrokeWidth: props.chartOptions.labelStrokeWidth,\n            selectedViewEl: null,\n            selectedView: null\n        };\n\n        this.onLabelFontSizeUpdate = debounce(this.onLabelFontSizeUpdate, 500);\n        this.onLabelStrokeWidthUpdate = debounce(this.onLabelStrokeWidthUpdate, 500);\n        this.updateMarkerOpacity = debounce(this.updateMarkerOpacity, 500);\n        this.updateUnselectedMarkerOpacity = debounce(this.updateUnselectedMarkerOpacity, 500);\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.chartOptions.labelFontSize !== this.props.chartOptions.labelFontSize) {\n            this.setState({\n                labelFontSize: this.props.chartOptions.labelFontSize\n            });\n        }\n        if (prevProps.chartOptions.labelStrokeWidth !== this.props.chartOptions.labelStrokeWidth) {\n            this.setState({\n                labelStrokeWidth: this.props.chartOptions.labelStrokeWidth\n            });\n        }\n\n        if (prevProps.markerOpacity !== this.props.markerOpacity) {\n            this.setState({opacity: this.props.markerOpacity});\n        }\n        if (prevProps.unselectedMarkerOpacity !== this.props.unselectedMarkerOpacity) {\n            this.setState({unselectedOpacity: this.props.unselectedMarkerOpacity});\n        }\n\n        if (prevProps.activeFeature !== this.props.activeFeature) {\n            const summary = this.props.activeFeature == null ? null : this.props.globalFeatureSummary[this.props.activeFeature.name];\n            if (this.props.activeFeature == null) {\n                this.setState({\n                    minColor: '',\n                    maxColor: ''\n                });\n            } else {\n                const trace = find(this.props.embeddingData, traceInfo => getTraceKey(traceInfo) === this.props.activeFeature.embeddingKey);\n                if (trace == null) {\n                    this.setState({\n                        minColor: '',\n                        maxColor: ''\n                    });\n                } else if (trace.type !== TRACE_TYPE_META_IMAGE) {\n                    this.setState({\n                        minColor: summary.customMin == null ? '' : summary.customMin,\n                        maxColor: summary.customMax == null ? '' : summary.customMax\n                    });\n                } else {\n                    this.setState({\n                        minColor: summary.customZMin == null ? '' : summary.customZMin,\n                        maxColor: summary.customZMax == null ? '' : summary.customZMax\n                    });\n                }\n            }\n\n\n        }\n    }\n\n    onLabelFontSizeUpdate = (value) => {\n        if (!isNaN(value) && value > 0) {\n            this.props.chartOptions.labelFontSize = value;\n            this.props.handleChartOptions(this.props.chartOptions);\n            this.setState({labelFontSize: value});\n        }\n    };\n\n    onLabelFontSize = (event) => {\n        this.setState({labelFontSize: event.target.value});\n        this.onLabelFontSizeUpdate(event.target.value);\n    };\n\n    onLabelStrokeWidth = (event) => {\n        this.setState({labelStrokeWidth: event.target.value});\n        this.onLabelStrokeWidthUpdate(event.target.value);\n    };\n\n    onLabelStrokeWidthUpdate = (value) => {\n        if (!isNaN(value) && value >= 0) {\n            this.props.chartOptions.labelStrokeWidth = value;\n            this.props.handleChartOptions(this.props.chartOptions);\n            this.setState({labelStrokeWidth: value});\n        }\n    };\n\n\n    onMinUIChange = (value) => {\n        this.setState({minColor: value});\n    };\n\n    onMaxUIChange = (value) => {\n        this.setState({maxColor: value});\n    };\n\n    onMinChange = (value) => {\n        const {activeFeature, embeddingData, globalFeatureSummary} = this.props;\n        const summary = globalFeatureSummary[activeFeature.name];\n        const trace = find(embeddingData, traceInfo => getTraceKey(traceInfo) === activeFeature.embeddingKey);\n        if (trace.type !== TRACE_TYPE_META_IMAGE) {\n            summary.customMin = isNaN(value) ? undefined : value;\n        } else {\n            summary.customZMin = isNaN(value) ? undefined : value;\n        }\n        this.props.onDomain({\n            name: activeFeature.name,\n            summary: summary\n        });\n    };\n\n    onMaxChange = (value) => {\n        const {activeFeature, embeddingData, globalFeatureSummary} = this.props;\n        const summary = globalFeatureSummary[activeFeature.name];\n        const trace = find(embeddingData, traceInfo => getTraceKey(traceInfo) === activeFeature.embeddingKey);\n        if (trace.type !== TRACE_TYPE_META_IMAGE) {\n            summary.customMax = isNaN(value) ? undefined : value;\n        } else {\n            summary.customZMax = isNaN(value) ? undefined : value;\n        }\n        this.props.onDomain({\n            name: this.props.activeFeature.name,\n            summary: summary\n        });\n    };\n\n    onMarkerOpacityChange = (event, value) => {\n        this.setState({opacity: value});\n        this.updateMarkerOpacity(value);\n    };\n\n    updateMarkerOpacity = (value) => {\n        let opacity = parseFloat(value);\n        if (opacity >= 0 && opacity <= 1) {\n            this.props.handleMarkerOpacity(opacity);\n        }\n    };\n\n    onUnselectedMarkerOpacityChange = (event, value) => {\n        this.setState({unselectedOpacity: value});\n        this.updateUnselectedMarkerOpacity(value);\n    };\n\n    updateUnselectedMarkerOpacity = (value) => {\n        let opacity = parseFloat(value);\n        if (opacity >= 0 && opacity <= 1) {\n            this.props.handleUnselectedMarkerOpacity(opacity);\n        }\n    };\n\n    openView = (id) => {\n        this.props.handleOpenView(id);\n    };\n\n    deleteView = (id) => {\n        this.props.handleDeleteView(id);\n    };\n\n    viewDetails = (event, id) => {\n        event.stopPropagation();\n        this.setState({\n            selectedViewEl: event.currentTarget,\n            selectedView: find(this.props.datasetViews, item => item.id === id)\n        });\n    };\n\n    copyView = (id) => {\n        let linkText = window.location.protocol + '//' + window.location.host + window.location.pathname;\n        linkText += '#q=' + encodeURIComponent(JSON.stringify({link: id}));\n        copyToClipboard(linkText);\n    };\n\n    onPointSizeChange = (event) => {\n        this.props.handlePointSize(event.target.value);\n    };\n\n    onUnselectedPointSizeChange = (event) => {\n        this.props.handleUnselectedPointSize(event.target.value);\n    };\n\n\n    onChartSizeChange = (event) => {\n        const value = event.target.value;\n        this.props.handleChartSize(value);\n    };\n\n    onShowGalleryLabelsChange = (event) => {\n        const {chartOptions} = this.props;\n        chartOptions.showGalleryLabels = event.target.checked;\n        this.props.handleChartOptions(chartOptions);\n    };\n\n\n    handleCloseViewDetails = () => {\n        this.setState({selectedViewEl: null, selectedView: null});\n    };\n    onViewSaved = () => {\n        this.props.handleDialog(SAVE_DATASET_FILTER_DIALOG);\n    };\n\n    onDatasetViewSaved = () => {\n        this.props.handleDialog(SAVE_DATASET_FILTER_DIALOG);\n    };\n\n\n    render() {\n        const {\n            activeFeature,\n            chartOptions,\n            chartSize,\n            classes,\n            compareActions,\n            datasetViews,\n            embeddingData,\n            interpolator,\n            pointSize,\n            serverInfo,\n            tab,\n            textColor,\n            unselectedPointSize\n        } = this.props;\n        const primaryTrace = activeFeature == null ? null : find(embeddingData, traceInfo => getTraceKey(traceInfo) === activeFeature.embeddingKey);\n\n\n        const {\n            unselectedOpacity,\n            opacity,\n            minColor,\n            maxColor,\n            selectedViewEl,\n            selectedView\n        } = this.state;\n\n        return (<div className={classes.root}>\n                <ExplorePanel/>\n                <JobPanel compareActions={compareActions}/>\n                {selectedView && <Popover\n                    id={\"view-details\"}\n                    open={Boolean(selectedViewEl)}\n                    anchorEl={selectedViewEl}\n                    onClose={this.handleCloseViewDetails}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center'\n                    }}\n                >\n                    <div style={{width: 500}}>\n                        {selectedView.last_updated &&\n                        <Typography>Last Updated: {new Date(selectedView.last_updated).toDateString()}</Typography>}\n                        {selectedView.notes &&\n                        <ReactMarkdown options={{overrides: REACT_MD_OVERRIDES}}\n                                       children={selectedView.notes}/>}\n                    </div>\n                </Popover>}\n                <div style={tab === 'embedding' ? null : {display: 'none'}}>\n                    <Divider/>\n                    <Typography gutterBottom={false} component={\"h1\"} className={classes.title}>View</Typography>\n                    <InputLabel style={{marginTop: 8}} shrink={true}>Marker\n                        Opacity</InputLabel>\n                    <Slider\n                        min={0.0}\n                        max={1}\n                        step={0.01}\n                        sx={{width: 190, marginLeft: 0.5}}\n                        valueLabelDisplay=\"auto\"\n                        value={opacity}\n                        onChange={this.onMarkerOpacityChange} aria-labelledby=\"continuous-slider\"/>\n\n                    <InputLabel style={{marginTop: 8}} shrink={true}>Filtered Marker\n                        Opacity</InputLabel>\n                    <Slider\n                        min={0.0}\n                        max={1}\n                        step={0.01}\n                        sx={{width: 190, marginLeft: 0.5}}\n                        valueLabelDisplay=\"auto\"\n                        value={unselectedOpacity}\n                        onChange={this.onUnselectedMarkerOpacityChange}\n                        aria-labelledby=\"continuous-slider\"/>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"point_size\">Marker Size</InputLabel>\n                        <Select\n                            label={\"Marker Size\"}\n                            labelId={\"point_size\"}\n                            size={\"small\"}\n                            className={classes.select}\n                            onChange={this.onPointSizeChange}\n                            value={pointSize}\n                            multiple={false}>\n                            {pointSizeOptions.map(item => (\n                                <MenuItem key={item.label} value={item.value}>\n                                    <ListItemText primary={item.label}/>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"filtered_point_size\">Filtered Marker Size</InputLabel>\n                        <Select\n                            label={\"Filtered Marker Size\"}\n                            labelId={\"filtered_point_size\"}\n                            size={\"small\"}\n                            className={classes.select}\n                            onChange={this.onUnselectedPointSizeChange}\n                            value={unselectedPointSize}\n                            multiple={false}>\n                            {pointSizeOptions.map(item => (\n                                <MenuItem key={item.label} value={item.value}>\n                                    <ListItemText primary={item.label}/>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"chart_size\">Gallery Chart Size</InputLabel>\n                        <Select\n                            label={\"Gallery Chart Size\"}\n                            labelId={\"chart_size\"}\n                            size={\"small\"}\n                            className={classes.select}\n                            onChange={this.onChartSizeChange}\n                            value={chartSize}\n                            multiple={false}>\n                            {gallerySizeOptions.map(item => (\n                                <MenuItem key={item.label} value={item.value}>\n                                    <ListItemText primary={item.label}/>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <div><FormControlLabel\n                        control={\n                            <Switch\n                                checked={chartOptions.showGalleryLabels}\n                                onChange={this.onShowGalleryLabelsChange}\n                            />\n                        }\n                        label=\"Gallery Labels\"\n                    /></div>\n\n\n                    <EditableColorScheme\n                        textColor={textColor}\n                        interpolator={interpolator}\n                        domain={primaryTrace && primaryTrace.continuous && primaryTrace.name !== '__count' ? primaryTrace.colorScale.domain() : null}\n                        min={minColor}\n                        max={maxColor}\n                        onMinChange={this.onMinChange}\n                        onMaxChange={this.onMaxChange}\n                        onMinUIChange={this.onMinUIChange}\n                        onMaxUIChange={this.onMaxUIChange}\n                        onInterpolator={this.props.handleInterpolator}/>\n\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            value={this.state.labelFontSize}\n                            onChange={this.onLabelFontSize}\n                            size=\"small\"\n                            InputLabelProps={{shrink: true}}\n                            fullWidth\n                            label=\"Label Font Size\"\n                        />\n                    </FormControl>\n\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            value={this.state.labelStrokeWidth}\n                            onChange={this.onLabelStrokeWidth}\n                            size=\"small\"\n                            InputLabelProps={{shrink: true}}\n                            fullWidth\n                            label=\"Label Shadow Size\"\n                        />\n                    </FormControl>\n\n                </div>\n\n                {serverInfo.capabilities.has(SERVER_CAPABILITY_LINKS) &&\n                <div\n                    style={tab === 'embedding' || tab === 'distribution' || tab === 'composition' ? null : {display: 'none'}}>\n                    <Divider/>\n                    <Typography gutterBottom={false} component={\"h1\"}\n                                className={classes.title}>Links</Typography>\n                    <Divider/>\n                    <FormControl className={classes.formControl}>\n                        <Tooltip title={\"Save Current Visualization State\"}><Link\n                            style={{\n                                float: 'right',\n                                fontSize: '0.75rem'\n                            }}\n                            onClick={this.onViewSaved}>Save</Link></Tooltip></FormControl>\n\n                    {datasetViews.length === 0 &&\n                    <Box color=\"text.secondary\">No saved links</Box>}\n                    {datasetViews.length > 0 &&\n                    <List dense={true} style={{marginTop: 10}}>\n                        {datasetViews.map(item => (\n                            <ListItem key={item.id} data-key={item.id} button\n                                      onClick={e => this.openView(item.id)}>\n                                <ListItemText primary={item.name}/>\n                                <ListItemSecondaryAction>\n                                    {(item.notes || item.last_updated) && <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"info\"\n                                        onClick={e => this.viewDetails(e, item.id)}\n                                        size=\"small\">\n                                        <InfoIcon/>\n                                    </IconButton>}\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"copy\"\n                                        onClick={e => this.copyView(item.id)}\n                                        size=\"small\">\n                                        <LinkIcon/>\n                                    </IconButton>\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                        onClick={e => this.deleteView(item.id)}\n                                        size=\"small\">\n                                        <DeleteIcon/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        ))}\n                    </List>\n                    }\n\n                </div>}\n\n                <div style={tab === 'results' ? null : {display: 'none'}}>\n                    <JobResultOptions/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n        return {\n            activeFeature: state.activeFeature,\n            categoricalNames: state.categoricalNames,\n            chartSize: state.chartSize,\n            chartOptions: state.chartOptions,\n            combineDatasetFilters: state.combineDatasetFilters,\n            dataset: state.dataset,\n            datasetFilter: state.datasetFilter,\n            datasetFilters: state.datasetFilters,\n            datasetViews: state.datasetViews,\n            distributionPlotOptions: state.distributionPlotOptions,\n            embeddingData: state.embeddingData,\n            embeddingLabels: state.embeddingLabels,\n            embeddings: state.embeddings,\n            globalFeatureSummary: state.globalFeatureSummary,\n            interpolator: state.interpolator,\n            markerOpacity: state.markerOpacity,\n            markers: state.markers,\n            numberOfBins: state.numberOfBins,\n            pointSize: state.pointSize,\n            savedDatasetFilter: state.savedDatasetFilter,\n            searchTokens: state.searchTokens,\n            selection: state.selection,\n            serverInfo: state.serverInfo,\n            tab: state.tab,\n            textColor: state.textColor,\n            unselectedPointSize: state.unselectedPointSize,\n            unselectedMarkerOpacity: state.unselectedMarkerOpacity\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            handleDialog: (value) => {\n                dispatch(setDialog(value));\n            },\n            handleTab: (value) => {\n                dispatch(setTab(value));\n            },\n            handleActiveFeature: (value) => {\n                dispatch(setActiveFeature(value));\n            },\n            handleInterpolator: value => {\n                dispatch(setInterpolator(value));\n            },\n            handleChartSize: (value) => {\n                dispatch(setChartSize(value));\n            },\n            handleChartOptions: (value) => {\n                dispatch(setChartOptions(value));\n            },\n            onDomain: (value) => {\n                dispatch(handleDomainChange(value));\n            },\n            handleCombineDatasetFilters: (value) => {\n                dispatch(setCombineDatasetFilters(value));\n            },\n            removeDatasetFilter: (filter) => {\n                dispatch(removeDatasetFilter(filter));\n            },\n            handleEmbeddings: value => {\n                dispatch(setSelectedEmbedding(value));\n            },\n            handlePointSize: value => {\n                dispatch(setPointSize(value));\n            },\n            handleUnselectedPointSize: value => {\n                dispatch(setUnselectedPointSize(value));\n            },\n            handleMarkerOpacity: value => {\n                dispatch(setMarkerOpacity(value));\n            },\n            handleEmbeddingLabel: value => {\n                dispatch(toggleEmbeddingLabel(value));\n            },\n            handleUnselectedMarkerOpacity: value => {\n                dispatch(setUnselectedMarkerOpacity(value));\n            },\n            handleSearchTokens: (value, type) => {\n                dispatch(setSearchTokens(value == null ? [] : value, type));\n            },\n            handleOpenView: value => {\n                dispatch(openView(value));\n            },\n            handleDeleteView: value => {\n                dispatch(deleteView(value));\n            },\n            handleDeleteFeatureSet: value => {\n                dispatch(deleteFeatureSet(value));\n            },\n            handleSubmitJob: value => {\n                dispatch(submitJob(value));\n            },\n            onDistributionPlotOptions: (payload) => {\n                dispatch(setDistributionPlotOptions(payload));\n            }\n        };\n    }\n;\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps\n)(SideBar));\n\n\n","export const COMPARE_ACTIONS = [{\n    title: 'Differential Expression',\n    jobType: 'de',\n    version: '1.0.0',\n    tooltip: 'Find differentially expressed features between two groups of cells'\n}];","import {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from '@mui/material';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport React, {useState} from 'react';\nimport {deleteJobResult, setJobResultId} from './actions';\nimport withStyles from '@mui/styles/withStyles';\nimport {connect} from 'react-redux';\nimport {COMPARE_ACTIONS} from './job_config';\nimport Grid from '@mui/material/Grid';\n\nfunction JobResultsSelector(props) {\n    const [showDialog, setShowDialog] = useState(false);\n    const [browseJob, setBrowseJob] = useState(null);\n    const {email, handleJobResult, handleDeleteJob, jobResults, jobResultId} = props;\n\n    function onBrowseJobs(event) {\n        setShowDialog(true);\n    }\n\n    function onCloseJobs() {\n        setShowDialog(false);\n    }\n\n    function onSelectJob(id) {\n        handleJobResult(id);\n        setShowDialog(false);\n    }\n\n    function onDeleteJob(event, job) {\n        event.stopPropagation();\n        setBrowseJob(job);\n    }\n\n    function onDeleteJobOK(id) {\n        handleDeleteJob(id);\n        setBrowseJob(null);\n    }\n\n    function onDeleteJobCancel() {\n        setBrowseJob(null);\n    }\n\n    function isShowJobStatus() {\n        for (let i = 0; i < jobResults.length; i++) {\n            const isPrecomputed = ('' + jobResults[i].id).startsWith('cirro-');\n            if (!isPrecomputed) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    const showJobStatus = isShowJobStatus();\n    const jobTypeToName = {};\n    const isShowingJob = jobResultId != null;\n    COMPARE_ACTIONS.forEach(action => jobTypeToName[action.jobType] = action.title);\n\n    function getTable() {\n        return <Table size=\"small\" stickyHeader={true}>\n            <TableHead>\n                <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Type</TableCell>\n                    {showJobStatus && <TableCell>Status</TableCell>}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {jobResults.map(jobResult => {\n                    let text = jobResult.name;\n                    if (jobResult.title) {\n                        text += ' - ' + jobResult.title;\n                    }\n                    const isPrecomputed = ('' + jobResult.id).startsWith('cirro-');\n                    const isComplete = isPrecomputed || jobResult.status === 'complete';\n\n                    const status = isPrecomputed ? 'complete' : jobResult.status;\n                    const isJobOwner = email == jobResult.email || (email === null && jobResult.email === '');\n                    const jobType = jobTypeToName[jobResult.type];\n                    // const date = isPrecomputed ? '' : jobResult.submitted;\n                    return (\n                        <TableRow key={jobResult.id}\n                                  hover\n                                  selected={jobResult.id === jobResultId}\n                                  disabled={!isComplete}\n                                  onClick={isComplete ? (event) => onSelectJob(jobResult.id) : null}\n                                  role=\"checkbox\"\n                                  tabIndex={-1}>\n                            <TableCell>{text}</TableCell>\n                            <TableCell>{jobType}</TableCell>\n                            {showJobStatus && <TableCell>{status}\n                                {isJobOwner && !isPrecomputed &&\n                                <IconButton\n                                    edge=\"end\"\n                                    aria-label=\"delete\"\n                                    onClick={(event) => onDeleteJob(event, jobResult)}\n                                    size=\"small\">\n                                    <DeleteIcon/>\n                                </IconButton>}</TableCell>}\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>;\n    }\n\n    return <>\n        {isShowingJob && <Grid container alignItems=\"center\">\n            <Button size={\"small\"} onClick={onBrowseJobs} variant=\"outlined\"\n                    color=\"primary\">Browse All Results</Button>\n        </Grid>}\n        <Dialog\n            open={browseJob != null}\n            onClose={onDeleteJobCancel}\n            aria-labelledby=\"confirm-dialog-title\"\n            aria-describedby=\"conform-dialog-description\"\n        >\n            <DialogTitle id=\"confirm-dialog-title\">Confirm Delete</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"confirm-dialog-description\">\n                    Are you sure you want to delete {browseJob ? browseJob.name : ''}?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onDeleteJobCancel}>\n                    Cancel\n                </Button>\n                <Button variant=\"contained\" onClick={e => onDeleteJobOK(browseJob.id)}\n                        color=\"primary\"\n                        autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n        {isShowingJob &&\n        <Dialog maxWidth={\"xl\"} fullWidth={true} onClose={onCloseJobs} aria-labelledby=\"job-results-title\"\n                open={showDialog && jobResults.length > 0}>\n            <DialogTitle id=\"job-results-title\" onClose={onCloseJobs}>\n                Results\n            </DialogTitle>\n            <DialogContent>\n                {getTable()}\n            </DialogContent>\n        </Dialog>}\n        {!isShowingJob && getTable()}\n    </>;\n}\n\nconst mapStateToProps = state => {\n        return {\n            email: state.email,\n            jobResultId: state.jobResultId,\n            jobResults: state.jobResults\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            handleDeleteJob: (payload) => {\n                dispatch(deleteJobResult(payload));\n            },\n            handleJobResult: (payload) => {\n                dispatch(setJobResultId(payload));\n            }\n        };\n    }\n;\n\n\nexport default withStyles({})(connect(\n    mapStateToProps, mapDispatchToProps\n)(JobResultsSelector));\n","import {connect} from 'react-redux';\nimport DotPlotJobResultsPanel from './DotPlotJobResultsPanel';\nimport {find} from 'lodash';\nimport JobResultsSelector from './JobResultsSelector';\n\nfunction JobResultPanel(props) {\n    const {setTooltip, jobResultId, jobResults} = props;\n    const jobResult = jobResultId != null ? find(jobResults, item => item.id === jobResultId) : null;\n    const jobType = jobResult != null ? jobResult.type : null;\n    return <>\n        <JobResultsSelector/>\n        {jobType == 'de' && <DotPlotJobResultsPanel setTooltip={setTooltip} jobResult={jobResult}/>}\n    </>;\n}\n\nconst mapStateToProps = state => {\n        return {\n            jobResultId: state.jobResultId,\n            jobResults: state.jobResults,\n            tab: state.tab\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {};\n    }\n;\n\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps\n)(JobResultPanel));","import {IconButton, Snackbar} from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Drawer from '@mui/material/Drawer';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_DATASET_DIALOG,\n    EDIT_DATASET_DIALOG,\n    HELP_DIALOG,\n    IMPORT_DATASET_DIALOG,\n    SAVE_DATASET_FILTER_DIALOG,\n    SAVE_FEATURE_SET_DIALOG,\n    setDialog,\n    setMessage\n} from './actions';\nimport AppHeader from './AppHeader';\nimport CompositionPlots from './CompositionPlots';\nimport DeleteDatasetDialog from './DeleteDatasetDialog';\nimport DistributionPlots from './DistributionPlots';\nimport DraggableDivider from './DraggableDivider';\nimport EditNewDatasetDialog from './EditNewDatasetDialog';\nimport EmbeddingChart from './EmbeddingChart';\nimport GalleryCharts from './GalleryCharts';\nimport HelpDialog from './HelpDialog';\n\nimport LandingPage from './LandingPage';\nimport SaveDatasetFilterDialog from './SaveDatasetViewDialog';\nimport SaveSetDialog from './SaveSetDialog';\nimport SideBar from './SideBar';\nimport {COMPARE_ACTIONS} from './job_config';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport {withTheme} from '@emotion/react';\nimport JobResultPanel from './JobResultPanel';\n\n\nexport const drawerWidth = 240;\n\n\nclass App extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.tooltipElementRef = React.createRef();\n        this.galleryRef = React.createRef();\n    }\n\n    handleMessageClose = () => {\n        this.props.setMessage(null);\n    };\n\n\n    onGallery = () => {\n        window.scrollTo(0, this.galleryRef.current.offsetTop);\n    };\n\n    setTooltip = (text) => {\n        text = text === '' || text == null ? '&nbsp;' : text;\n        this.tooltipElementRef.current.innerHTML = text;\n    };\n\n    render() {\n\n        // tabs: 1. embedding, 2. grouped table with kde per feature, dotplot\n        // need to add filter, selection\n        const {theme, dataset, dialog, loading, loadingApp, message, tab} = this.props;\n        const color = theme.palette.primary.main;\n\n        const footerBackground = theme.palette.background.paper;\n        return (\n            <Box sx={{display: 'flex'}}>\n                {(dialog === EDIT_DATASET_DIALOG || dialog === IMPORT_DATASET_DIALOG) &&\n                <EditNewDatasetDialog/>}\n                {dialog === DELETE_DATASET_DIALOG && <DeleteDatasetDialog/>}\n                {dialog === SAVE_DATASET_FILTER_DIALOG && <SaveDatasetFilterDialog/>}\n                {dialog === HELP_DIALOG && <HelpDialog/>}\n                {dialog === SAVE_FEATURE_SET_DIALOG && <SaveSetDialog/>}\n                <AppHeader/>\n                <Drawer\n                    variant=\"permanent\"\n                    anchor=\"left\"\n                    sx={{\n                        width: drawerWidth,\n                        flexShrink: 0,\n                        '& .MuiDrawer-paper': {\n                            width: drawerWidth,\n                            boxSizing: 'border-box'\n                        }\n                    }}\n                >\n                    {dataset != null && <SideBar key={dataset.id} compareActions={COMPARE_ACTIONS}/>}\n                </Drawer>\n\n\n                <Box scomponent=\"main\"\n                     sx={{flexGrow: 1, paddingBottom: 24, color: color, backgroundColor: footerBackground}}>\n                    <Toolbar/>\n                    {loadingApp.loading &&\n                    <div><h2>Loading<LinearProgress style={{width: '90%'}} variant=\"determinate\"\n                                                    value={loadingApp.progress}/></h2>\n                    </div>}\n\n                    {dataset == null && !loading && !loadingApp.loading && <div><LandingPage/></div>}\n                    {dataset != null && <>\n                        <div\n                            role=\"tabpanel\"\n                            hidden={tab !== 'embedding'}\n                        >\n                            {<EmbeddingChart onGallery={this.onGallery} setTooltip={this.setTooltip}/>}\n                            <DraggableDivider/>\n                            <div ref={this.galleryRef}>\n                                {<GalleryCharts/>}\n                            </div>\n                        </div>\n                        <div\n                            role=\"tabpanel\"\n                            hidden={tab !== 'distribution'}\n                        >\n                            {<DistributionPlots setTooltip={this.setTooltip}/>}\n                        </div>\n                        <div\n                            role=\"tabpanel\"\n                            hidden={tab !== 'composition'}\n                        >\n                            {<CompositionPlots/>}\n                        </div>\n                        <div\n                            role=\"tabpanel\"\n                            hidden={tab !== 'results'}\n                        >\n                            {<JobResultPanel setTooltip={this.setTooltip}/>}\n                        </div>\n                        <Typography className=\"cirro-condensed\" color=\"textPrimary\" ref={this.tooltipElementRef}\n                                    style={{\n                                        position: 'fixed',\n                                        background: footerBackground,\n                                        width: '100%',\n                                        bottom: 0,\n                                        top: 'auto',\n                                        marginBottom: 0,\n                                        whiteSpace: 'nowrap',\n                                        textOverflow: 'ellipsis'\n                                    }}>&nbsp;</Typography>\n                    </>}\n                </Box>\n\n                {loading && <Dialog aria-labelledby=\"loading-dialog-title\" open={true}>\n                    <DialogTitle id=\"loading-dialog-title\"><CircularProgress\n                        size={20}/> Loading...</DialogTitle>\n                </Dialog>}\n\n\n                {message != null && <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    ContentProps={{\n                        'aria-describedby': 'message-id'\n                    }}\n                    onClose={this.handleMessageClose}\n                    open={true}\n                    autoHideDuration={6000}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            onClick={this.handleMessageClose}\n                            size=\"large\">\n                            <CloseIcon/>\n                        </IconButton>\n                    ]}\n                    message={<span id=\"message-id\">{message instanceof Error\n                        ? message.message\n                        : message}</span>}\n                />}\n            </Box>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        dialog: state.dialog,\n        loading: state.loading,\n        loadingApp: state.loadingApp,\n        message: state.message,\n        tab: state.tab\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n\n        setMessage: (value) => {\n            dispatch(setMessage(value));\n        }\n    };\n};\n\nexport default withTheme(connect(\n    mapStateToProps, mapDispatchToProps\n)(App));\n","import {StyledEngineProvider, ThemeProvider} from '@mui/material/styles';\nimport {createTheme} from '@mui/material';\nimport {connect} from 'react-redux';\nimport App from './App';\n\nconst darkTheme = createTheme({palette: {mode: \"dark\"}});\nconst lightTheme = createTheme({palette: {mode: \"light\"}});\n\nfunction AppWrapper(props) {\n    const chartOptions = props.chartOptions;\n    const theme = chartOptions.darkMode ? darkTheme : lightTheme;\n\n    return <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n            <App/>\n        </ThemeProvider>\n    </StyledEngineProvider>;\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        chartOptions: state.chartOptions\n    };\n};\n\n\nexport default connect(mapStateToProps, {})(AppWrapper);\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {initGapi, SET_DATASET, SET_EMAIL, SET_SERVER_INFO} from './actions';\nimport rootReducer from './reducers';\nimport AppWrapper from './AppWrapper';\n// import * as serviceWorker from './serviceWorker';\nimport mixpanel from 'mixpanel-browser';\n\nlet useMixPanel = false;\n\n\nconst logger = store => next => action => {\n    if (action.type === SET_SERVER_INFO) {\n        if (action.payload.mixpanel) {\n            mixpanel.init(action.payload.mixpanel);\n            useMixPanel = true;\n        }\n    }\n    if (useMixPanel) {\n        if (action.type === SET_DATASET) {\n            mixpanel.track('Open Dataset', {name: action.payload.name, id: action.payload.id});\n        } else if (action.type === SET_EMAIL) {\n            mixpanel.identify(action.payload);\n        }\n    }\n    return next(action);\n};\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware, logger\n    )\n);\n\nfunction main() {\n    render(\n        <Provider store={store}>\n            {/*<React.StrictMode>*/}\n\n            <AppWrapper/>\n\n            {/*</React.StrictMode>*/}\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nstore.dispatch(initGapi());\nmain();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}